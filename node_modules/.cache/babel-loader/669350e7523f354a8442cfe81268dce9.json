{"ast":null,"code":"import { cx as $dtSHR$cx, css as $dtSHR$css } from \"emotion\";\nimport $dtSHR$react from \"react\";\nimport { Text as $dtSHR$Text } from \"@contentful/f36-typography\";\nimport { Box as $dtSHR$Box, Flex as $dtSHR$Flex } from \"@contentful/f36-core\";\nimport { AudioIcon as $dtSHR$AudioIcon, CodeIllustrationIcon as $dtSHR$CodeIllustrationIcon, ImageIcon as $dtSHR$ImageIcon, MarkupIcon as $dtSHR$MarkupIcon, PdfIcon as $dtSHR$PdfIcon, PlaintextIcon as $dtSHR$PlaintextIcon, PresentationIcon as $dtSHR$PresentationIcon, RichtextIcon as $dtSHR$RichtextIcon, SpreadsheetIcon as $dtSHR$SpreadsheetIcon, VideoIcon as $dtSHR$VideoIcon, ArchiveIcon as $dtSHR$ArchiveIcon } from \"@contentful/f36-icons\";\nimport $dtSHR$contentfulf36tokens from \"@contentful/f36-tokens\";\n\nfunction $6f9c5a7cc9575f3b$export$d4130e73e2e8f9dd() {\n  return {\n    root: /*#__PURE__*/$dtSHR$css({\n      display: 'inline-block',\n      width: '39px',\n      height: '39px',\n      'g, path': {\n        fill: $dtSHR$contentfulf36tokens.gray600\n      }\n    })\n  };\n}\n\nconst $294bba6cf7661148$export$de8d5274b07acfbd = _ref => {\n  let {\n    type = 'archive',\n    className: className,\n    testId = 'cf-ui-asset-icon',\n    ...otherProps\n  } = _ref;\n  const styles = $6f9c5a7cc9575f3b$export$d4130e73e2e8f9dd();\n  const props = { ...otherProps,\n    testId: testId,\n    className: $dtSHR$cx(styles.root, className)\n  };\n\n  switch (type) {\n    case 'audio':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$AudioIcon, props);\n\n    case 'code':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$CodeIllustrationIcon, props);\n\n    case 'image':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$ImageIcon, props);\n\n    case 'markup':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$MarkupIcon, props);\n\n    case 'pdf':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$PdfIcon, props);\n\n    case 'plaintext':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$PlaintextIcon, props);\n\n    case 'presentation':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$PresentationIcon, props);\n\n    case 'richtext':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$RichtextIcon, props);\n\n    case 'spreadsheet':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$SpreadsheetIcon, props);\n\n    case 'video':\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$VideoIcon, props);\n\n    case 'archive':\n    default:\n      return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$ArchiveIcon, props);\n  }\n};\n\n$294bba6cf7661148$export$de8d5274b07acfbd.displayName = 'AssetIcon';\n\nfunction $dc8375c31ef26a6b$export$fa02bd03531e2fe() {\n  return {\n    relative: /*#__PURE__*/$dtSHR$css({\n      name: \"79elbk\",\n      styles: \"position:relative;\"\n    }),\n    height100: /*#__PURE__*/$dtSHR$css({\n      name: \"10klw3m\",\n      styles: \"height:100%;\"\n    }),\n    image: /*#__PURE__*/$dtSHR$css({\n      name: \"1ylrs5\",\n      styles: \"width:auto;max-width:100%;max-height:100%;\"\n    }),\n    titleContainer: /*#__PURE__*/$dtSHR$css({\n      opacity: 0,\n      transition: `opacity ${$dtSHR$contentfulf36tokens.transitionDurationDefault} ${$dtSHR$contentfulf36tokens.transitionEasingDefault}`,\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      left: 0,\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      alignItems: 'flex-end',\n      boxSizing: 'border-box',\n      background: `linear-gradient(0deg, ${$dtSHR$contentfulf36tokens.gray900} 0%, transparent calc(1rem * (100 / ${$dtSHR$contentfulf36tokens.fontBaseDefault})), transparent 100% )`,\n      ':hover': {\n        opacity: 1\n      }\n    }),\n    title: /*#__PURE__*/$dtSHR$css({\n      name: \"4gk4ib\",\n      styles: \"bottom:0;left:0;right:0;position:absolute;\"\n    })\n  };\n}\n\nfunction $4a170a6eb7674988$var$_Asset(_ref2, ref) {\n  let {\n    className: className,\n    src: src,\n    status: status,\n    testId = 'cf-ui-asset',\n    title: title,\n    type = 'image',\n    ...otherProps\n  } = _ref2;\n  const styles = $dc8375c31ef26a6b$export$fa02bd03531e2fe();\n  const isImage = src && src !== '' && type === 'image'; // Do not show image previews when publish status is archived\n\n  const showPreview = isImage && status !== 'archived';\n  return /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Box, {\n    className: $dtSHR$cx(styles.relative, className),\n    testId: testId,\n    ref: ref,\n    ...otherProps\n  }, showPreview ? /*#__PURE__*/$dtSHR$react.createElement($dtSHR$react.Fragment, null, /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    className: styles.height100\n  }, /*#__PURE__*/$dtSHR$react.createElement(\"img\", {\n    className: styles.image,\n    src: src,\n    alt: title\n  })), title && /*#__PURE__*/$dtSHR$react.createElement(\"div\", {\n    className: styles.titleContainer\n  }, /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Text, {\n    className: styles.title,\n    fontColor: \"colorWhite\",\n    margin: \"spacingS\",\n    isTruncated: true\n  }, title))) : /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingLeft: \"spacingS\",\n    paddingRight: \"spacingS\",\n    className: styles.height100\n  }, /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Flex, {\n    marginBottom: \"spacingM\",\n    marginTop: \"spacingM\",\n    justifyContent: \"center\"\n  }, /*#__PURE__*/$dtSHR$react.createElement($294bba6cf7661148$export$de8d5274b07acfbd, {\n    type: type\n  })), /*#__PURE__*/$dtSHR$react.createElement($dtSHR$Text, {\n    isTruncated: true,\n    marginBottom: \"spacingM\",\n    fontColor: \"gray600\"\n  }, title)));\n}\n\n$4a170a6eb7674988$var$_Asset.displayName = 'Asset';\nconst $4a170a6eb7674988$export$c413dd039085b182 = /*#__PURE__*/$dtSHR$react.forwardRef($4a170a6eb7674988$var$_Asset);\nconst $c14cae86e9d474fd$export$b14ad400b1d09e0f = {\n  archive: 'archive',\n  audio: 'audio',\n  code: 'code',\n  image: 'image',\n  markup: 'markup',\n  pdf: 'pdf',\n  plaintext: 'plaintext',\n  presentation: 'presentation',\n  richtext: 'richtext',\n  spreadsheet: 'spreadsheet',\n  video: 'video'\n};\n\nfunction $c14cae86e9d474fd$export$3ccaa71e0816392d(type) {\n  return Object.keys($c14cae86e9d474fd$export$b14ad400b1d09e0f).includes(type);\n}\n\nexport { $4a170a6eb7674988$export$c413dd039085b182 as Asset, $294bba6cf7661148$export$de8d5274b07acfbd as AssetIcon, $c14cae86e9d474fd$export$3ccaa71e0816392d as isAssetType };","map":{"version":3,"mappings":"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","names":["getAssetIconStyles","root","$dtSHR$css","display","width","height","fill","tokens","gray600","AssetIcon","type","className","testId","otherProps","styles","props","$dtSHR$cx","$dtSHR$react","$dtSHR$AudioIcon","$dtSHR$CodeIllustrationIcon","$dtSHR$ImageIcon","$dtSHR$MarkupIcon","$dtSHR$PdfIcon","$dtSHR$PlaintextIcon","$dtSHR$PresentationIcon","$dtSHR$RichtextIcon","$dtSHR$SpreadsheetIcon","$dtSHR$VideoIcon","$dtSHR$ArchiveIcon","displayName","getAssetStyles","relative","name","height100","image","titleContainer","opacity","transition","transitionDurationDefault","transitionEasingDefault","position","bottom","right","left","overflow","alignItems","boxSizing","background","gray900","fontBaseDefault","title","_Asset","ref","src","status","isImage","showPreview","$dtSHR$Box","$dtSHR$Flex","justifyContent","alt","$dtSHR$Text","fontColor","margin","isTruncated","flexDirection","paddingLeft","paddingRight","marginBottom","marginTop","$294bba6cf7661148$export$de8d5274b07acfbd","Asset","React","forwardRef","types","archive","audio","code","markup","pdf","plaintext","presentation","richtext","spreadsheet","video","isAssetType","Object","keys","includes"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-asset/dist/packages/components/asset/src/AssetIcon/AssetIcon.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-asset/dist/packages/components/asset/src/AssetIcon/AssetIcon.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-asset/dist/packages/components/asset/src/Asset.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-asset/dist/packages/components/asset/src/Asset.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-asset/dist/packages/components/asset/src/types.ts"],"sourcesContent":["import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getAssetIconStyles() {\n  return {\n    root: css({\n      display: 'inline-block',\n      width: '39px',\n      height: '39px',\n      'g, path': {\n        fill: tokens.gray600,\n      },\n    }),\n  };\n}\n","import React from 'react';\nimport {\n  ArchiveIcon,\n  AudioIcon,\n  CodeIllustrationIcon,\n  ImageIcon,\n  MarkupIcon,\n  PdfIcon,\n  PlaintextIcon,\n  RichtextIcon,\n  PresentationIcon,\n  SpreadsheetIcon,\n  VideoIcon,\n} from '@contentful/f36-icons';\nimport type { GeneratedIconProps } from '@contentful/f36-icon';\nimport type { AssetType } from '../types';\n\nimport { cx } from 'emotion';\nimport { getAssetIconStyles } from './AssetIcon.styles';\n\nexport interface AssetIconProps\n  extends Omit<GeneratedIconProps, 'illustration' | 'ref'> {\n  type?: AssetType;\n}\n\n/**\n * Renders only the Illustration that would represent this asset's type\n */\nexport const AssetIcon = ({\n  type = 'archive',\n  className,\n  testId = 'cf-ui-asset-icon',\n  ...otherProps\n}: AssetIconProps) => {\n  const styles = getAssetIconStyles();\n  const props = {\n    ...otherProps,\n    testId,\n    className: cx(styles.root, className),\n  };\n\n  switch (type) {\n    case 'audio':\n      return <AudioIcon {...props} />;\n    case 'code':\n      return <CodeIllustrationIcon {...props} />;\n    case 'image':\n      return <ImageIcon {...props} />;\n    case 'markup':\n      return <MarkupIcon {...props} />;\n    case 'pdf':\n      return <PdfIcon {...props} />;\n    case 'plaintext':\n      return <PlaintextIcon {...props} />;\n    case 'presentation':\n      return <PresentationIcon {...props} />;\n    case 'richtext':\n      return <RichtextIcon {...props} />;\n    case 'spreadsheet':\n      return <SpreadsheetIcon {...props} />;\n    case 'video':\n      return <VideoIcon {...props} />;\n    case 'archive':\n    default:\n      return <ArchiveIcon {...props} />;\n  }\n};\n\nAssetIcon.displayName = 'AssetIcon';\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getAssetStyles() {\n  return {\n    relative: css({\n      position: 'relative',\n    }),\n    height100: css({\n      height: '100%',\n    }),\n    image: css({\n      width: 'auto',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    }),\n    titleContainer: css({\n      opacity: 0,\n      transition: `opacity ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault}`,\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      left: 0,\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      alignItems: 'flex-end',\n      boxSizing: 'border-box',\n      background: `linear-gradient(0deg, ${tokens.gray900} 0%, transparent calc(1rem * (100 / ${tokens.fontBaseDefault})), transparent 100% )`,\n      ':hover': { opacity: 1 },\n    }),\n    title: css({\n      bottom: 0,\n      left: 0,\n      right: 0,\n      position: 'absolute',\n    }),\n  };\n}\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type {\n  EntityStatus,\n  PickUnion,\n  CommonProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { Box, Flex } from '@contentful/f36-core';\n\nimport { AssetIcon } from './AssetIcon/AssetIcon';\nimport { getAssetStyles } from './Asset.styles';\nimport type { AssetType } from './types';\n\nexport type AssetStatus = PickUnion<\n  EntityStatus,\n  'archived' | 'changed' | 'deleted' | 'draft' | 'published'\n>;\n\nexport interface AssetProps extends CommonProps {\n  /**\n   * A `src` attribute to use for image assets\n   */\n  src?: string;\n  /**\n   * The publish status of the asset\n   */\n  status?: AssetStatus;\n  /**\n   * The title of the asset\n   */\n  title?: string;\n  /**\n   * The type of asset being represented\n   */\n  type?: AssetType;\n}\n\nfunction _Asset(\n  {\n    className,\n    src,\n    status,\n    testId = 'cf-ui-asset',\n    title,\n    type = 'image',\n    ...otherProps\n  }: AssetProps,\n  ref: React.Ref<any>,\n) {\n  const styles = getAssetStyles();\n  const isImage = src && src !== '' && type === 'image';\n\n  // Do not show image previews when publish status is archived\n  const showPreview = isImage && status !== 'archived';\n\n  return (\n    <Box\n      className={cx(styles.relative, className)}\n      testId={testId}\n      ref={ref}\n      {...otherProps}\n    >\n      {showPreview ? (\n        <>\n          <Flex\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            className={styles.height100}\n          >\n            <img className={styles.image} src={src} alt={title} />\n          </Flex>\n          {title && (\n            <div className={styles.titleContainer}>\n              <Text\n                className={styles.title}\n                fontColor=\"colorWhite\"\n                margin=\"spacingS\"\n                isTruncated\n              >\n                {title}\n              </Text>\n            </div>\n          )}\n        </>\n      ) : (\n        <Flex\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          paddingLeft=\"spacingS\"\n          paddingRight=\"spacingS\"\n          className={styles.height100}\n        >\n          <Flex\n            marginBottom=\"spacingM\"\n            marginTop=\"spacingM\"\n            justifyContent=\"center\"\n          >\n            <AssetIcon type={type} />\n          </Flex>\n          <Text isTruncated marginBottom=\"spacingM\" fontColor=\"gray600\">\n            {title}\n          </Text>\n        </Flex>\n      )}\n    </Box>\n  );\n}\n\n_Asset.displayName = 'Asset';\n\nexport const Asset = React.forwardRef(_Asset);\n","export const types = {\n  archive: 'archive',\n  audio: 'audio',\n  code: 'code',\n  image: 'image',\n  markup: 'markup',\n  pdf: 'pdf',\n  plaintext: 'plaintext',\n  presentation: 'presentation',\n  richtext: 'richtext',\n  spreadsheet: 'spreadsheet',\n  video: 'video',\n};\n\nexport function isAssetType(type: string): type is AssetType {\n  return Object.keys(types).includes(type);\n}\n\nexport type AssetType = keyof typeof types;\n"]},"metadata":{},"sourceType":"module"}