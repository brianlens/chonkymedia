{"ast":null,"code":"import $ggPfR$react, { useRef as $ggPfR$useRef, useEffect as $ggPfR$useEffect, createElement as $ggPfR$createElement, Fragment as $ggPfR$Fragment } from \"react\";\nimport $ggPfR$reactmodal from \"react-modal\";\nimport { Box as $ggPfR$Box, Flex as $ggPfR$Flex } from \"@contentful/f36-core\";\nimport { cx as $ggPfR$cx, css as $ggPfR$css } from \"emotion\";\nimport { CloseIcon as $ggPfR$CloseIcon } from \"@contentful/f36-icons\";\nimport { Button as $ggPfR$Button, ButtonGroup as $ggPfR$ButtonGroup } from \"@contentful/f36-button\";\nimport { Subheading as $ggPfR$Subheading } from \"@contentful/f36-typography\";\nimport $ggPfR$contentfulf36tokens from \"@contentful/f36-tokens\";\nimport $ggPfR$reactdom from \"react-dom\";\n\nfunction $cdc4e74e8b16090b$export$4bef00d568400c9b() {\n  return {\n    root: /*#__PURE__*/$ggPfR$css({\n      position: 'relative',\n      padding: `${$ggPfR$contentfulf36tokens.spacingM} ${$ggPfR$contentfulf36tokens.spacingM} ${$ggPfR$contentfulf36tokens.spacingM} ${$ggPfR$contentfulf36tokens.spacingL}`,\n      borderRadius: `${$ggPfR$contentfulf36tokens.borderRadiusMedium} ${$ggPfR$contentfulf36tokens.borderRadiusMedium} 0 0`,\n      borderBottom: `1px solid ${$ggPfR$contentfulf36tokens.gray300}`\n    }),\n    buttonContainer: /*#__PURE__*/$ggPfR$css({\n      position: 'relative',\n      width: $ggPfR$contentfulf36tokens.spacing2Xl,\n      height: $ggPfR$contentfulf36tokens.spacingL,\n      button: {\n        position: 'absolute',\n        top: `calc(-1 * ${$ggPfR$contentfulf36tokens.spacing2Xs})`,\n        right: 0\n      }\n    })\n  };\n}\n\nconst $08ed4541188cb150$export$f50a68e3694789ee = _ref => {\n  let {\n    onClose: onClose,\n    title: title,\n    testId = 'cf-ui-modal-header',\n    className: className,\n    ...otherProps\n  } = _ref;\n  const styles = $cdc4e74e8b16090b$export$4bef00d568400c9b();\n  return /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Flex, { ...otherProps,\n    className: $ggPfR$cx(styles.root, className),\n    testId: testId,\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Subheading, {\n    as: \"h1\",\n    isTruncated: true,\n    marginBottom: \"none\"\n  }, title), onClose && /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Flex, {\n    alignItems: \"center\",\n    className: styles.buttonContainer\n  }, /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Button, {\n    variant: \"transparent\",\n    \"aria-label\": \"Close\",\n    startIcon: /*#__PURE__*/$ggPfR$react.createElement($ggPfR$CloseIcon, {\n      size: \"small\"\n    }),\n    onClick: () => {\n      onClose();\n    },\n    size: \"small\"\n  })));\n};\n\n$08ed4541188cb150$export$f50a68e3694789ee.displayName = 'ModalHeader';\n\nfunction $d20e7c3da09cc1c0$export$5168abbf3ad664a0() {\n  return {\n    root: /*#__PURE__*/$ggPfR$css({\n      padding: `${$ggPfR$contentfulf36tokens.spacingM} ${$ggPfR$contentfulf36tokens.spacingL}`,\n      color: $ggPfR$contentfulf36tokens.gray700,\n      fontSize: $ggPfR$contentfulf36tokens.fontSizeM,\n      fontFamily: $ggPfR$contentfulf36tokens.fontStackPrimary,\n      lineHeight: $ggPfR$contentfulf36tokens.lineHeightM,\n      overflowY: 'auto',\n      overflowX: 'auto',\n      boxSizing: 'border-box'\n    })\n  };\n}\n\nconst $2e16b6f9c0e7012d$export$6da19a24bf249f17 = _ref2 => {\n  let {\n    testId = 'cf-ui-modal-content',\n    className: className,\n    children: children,\n    ...otherProps\n  } = _ref2;\n  const styles = $d20e7c3da09cc1c0$export$5168abbf3ad664a0();\n  return /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Box, { ...otherProps,\n    as: \"div\",\n    className: $ggPfR$cx(styles.root, className),\n    testId: testId\n  }, children);\n};\n\n$2e16b6f9c0e7012d$export$6da19a24bf249f17.displayName = 'ModalContent';\n\nfunction $f482f3cd8cb551fb$export$9af97f4b0b4c597a(props) {\n  const modal = $ggPfR$cx( /*#__PURE__*/$ggPfR$css({\n    margin: $ggPfR$contentfulf36tokens.spacing2Xl,\n    backgroundColor: $ggPfR$contentfulf36tokens.colorWhite,\n    borderRadius: props.size === 'zen' ? 0 : $ggPfR$contentfulf36tokens.borderRadiusMedium,\n    boxShadow: $ggPfR$contentfulf36tokens.boxShadowHeavy,\n    maxHeight: `calc(100vh - 1rem * (100 / ${$ggPfR$contentfulf36tokens.fontBaseDefault}))`,\n    maxWidth: `calc(100vw - 1rem * (100 / ${$ggPfR$contentfulf36tokens.fontBaseDefault}))`,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column'\n  }), props.allowHeightOverflow ? /*#__PURE__*/$ggPfR$css({\n    name: \"1evlo53\",\n    styles: \"overflow:auto;max-height:none;\"\n  }) : null, props.size === 'zen' ? /*#__PURE__*/$ggPfR$css({\n    name: \"11c88st\",\n    styles: \"max-width:none;max-height:none;margin:0;height:100%;width:100%;\"\n  }) : null, props.className);\n  return {\n    portal: /*#__PURE__*/$ggPfR$css({\n      name: \"13o7eu2\",\n      styles: \"display:block;\"\n    }),\n    base: {\n      root: $ggPfR$cx( /*#__PURE__*/$ggPfR$css({\n        zIndex: $ggPfR$contentfulf36tokens.zIndexModalContent,\n        position: 'relative',\n        padding: 0,\n        display: 'inline-block',\n        margin: '0 auto',\n        textAlign: 'left',\n        outline: 'none',\n        transform: props.size === 'zen' ? 'scale(1)' : 'scale(0.85)',\n        transition: `transform ${$ggPfR$contentfulf36tokens.transitionDurationDefault} ${$ggPfR$contentfulf36tokens.transitionEasingDefault}`\n      }), props.size === 'zen' ? /*#__PURE__*/$ggPfR$css({\n        name: \"uwwqev\",\n        styles: \"width:100%;height:100%;\"\n      }) : null),\n      afterOpen: /*#__PURE__*/$ggPfR$css({\n        name: \"plgkgv\",\n        styles: \"transform:scale(1) !important;\"\n      }),\n      beforeClose: /*#__PURE__*/$ggPfR$css({\n        transform: props.size === 'zen' ? 'scale(1)' : 'scale(0.85)'\n      })\n    },\n    modalOverlay: {\n      root: $ggPfR$cx( /*#__PURE__*/$ggPfR$css({\n        display: 'flex',\n        alignItems: 'baseline',\n        flexWrap: 'wrap',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: $ggPfR$contentfulf36tokens.zIndexModal,\n        opacity: 0,\n        transition: `opacity ${$ggPfR$contentfulf36tokens.transitionDurationDefault} ${$ggPfR$contentfulf36tokens.transitionEasingDefault}`,\n        position: 'fixed',\n        overflowY: 'auto',\n        backgroundColor: 'rgba(12, 20, 28, 0.74902)',\n        textAlign: 'center'\n      }), props.position === 'center' ? /*#__PURE__*/$ggPfR$css({\n        name: \"1qe4tyl\",\n        styles: \"align-items:center;justify-content:center;\"\n      }) : null),\n      afterOpen: /*#__PURE__*/$ggPfR$css({\n        name: \"whh5e5\",\n        styles: \"opacity:1;\"\n      }),\n      beforeClose: /*#__PURE__*/$ggPfR$css({\n        name: \"q7lffx\",\n        styles: \"opacity:0;\"\n      })\n    },\n    modal: modal\n  };\n}\n\nconst $bfd2aa2f2cc9e088$var$ModalSizesMapper = {\n  medium: '520px',\n  small: '400px',\n  large: '700px',\n  fullWidth: '100vw',\n  zen: '100vw'\n};\n\nfunction $bfd2aa2f2cc9e088$var$focusFirstWithinNode(node) {\n  if (node && node.querySelectorAll) {\n    const elements = node.querySelectorAll('input, button');\n\n    if (elements.length > 0) {\n      const firstElement = elements[0]; // @ts-expect-error focus might be missing\n\n      if (typeof firstElement.focus === 'function') // @ts-expect-error focus might be missing\n        firstElement.focus();\n    }\n  }\n}\n\nconst $bfd2aa2f2cc9e088$export$2b77a92f1a5ad772 = _ref3 => {\n  let {\n    allowHeightOverflow = false,\n    position = 'center',\n    shouldCloseOnEscapePress = true,\n    shouldCloseOnOverlayClick = true,\n    size = 'medium',\n    testId = 'cf-ui-modal',\n    topOffset = '50px',\n    aria: aria,\n    ...otherProps\n  } = _ref3;\n  const contentRef = $ggPfR$useRef(null);\n  const props = { ...otherProps,\n    allowHeightOverflow: allowHeightOverflow,\n    position: position,\n    shouldCloseOnEscapePress: shouldCloseOnEscapePress,\n    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,\n    size: size,\n    testId: testId,\n    topOffset: topOffset\n  };\n  const styles = $f482f3cd8cb551fb$export$9af97f4b0b4c597a({\n    position: position,\n    size: size,\n    allowHeightOverflow: allowHeightOverflow,\n    className: otherProps.className\n  });\n  $ggPfR$useEffect(() => {\n    if (props.isShown) setTimeout(() => {\n      if (props.initialFocusRef && props.initialFocusRef.current) {\n        if (props.initialFocusRef.current.focus) props.initialFocusRef.current.focus();\n      } else if (contentRef.current) $bfd2aa2f2cc9e088$var$focusFirstWithinNode(contentRef.current);\n    }, 100);\n  }, [props.isShown, props.initialFocusRef]);\n\n  const renderDefault = () => {\n    return /*#__PURE__*/$ggPfR$createElement($ggPfR$Fragment, null, otherProps.title && /*#__PURE__*/$ggPfR$createElement($08ed4541188cb150$export$f50a68e3694789ee, {\n      title: otherProps.title,\n      onClose: props.onClose,\n      ...otherProps.modalHeaderProps\n    }), /*#__PURE__*/$ggPfR$createElement($2e16b6f9c0e7012d$export$6da19a24bf249f17, otherProps.modalContentProps, otherProps.children));\n  };\n\n  return /*#__PURE__*/$ggPfR$createElement($ggPfR$reactmodal, {\n    ariaHideApp: false,\n    aria: aria,\n    onRequestClose: props.onClose,\n    isOpen: otherProps.isShown,\n    onAfterOpen: props.onAfterOpen,\n    shouldCloseOnEsc: shouldCloseOnEscapePress,\n    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,\n    shouldFocusAfterRender: true,\n    shouldReturnFocusAfterClose: true,\n    portalClassName: styles.portal,\n    style: {\n      content: {\n        top: position === 'center' ? 0 : topOffset\n      }\n    },\n    className: {\n      base: styles.base.root,\n      afterOpen: styles.base.afterOpen,\n      beforeClose: styles.base.beforeClose\n    },\n    overlayClassName: {\n      base: styles.modalOverlay.root,\n      afterOpen: styles.modalOverlay.afterOpen,\n      beforeClose: styles.modalOverlay.beforeClose\n    },\n    closeTimeoutMS: 200,\n    contentRef: ref => {\n      contentRef.current = ref;\n    }\n  }, /*#__PURE__*/$ggPfR$createElement($ggPfR$Box, {\n    testId: testId,\n    style: {\n      width: $bfd2aa2f2cc9e088$var$ModalSizesMapper[size] || size\n    },\n    className: styles.modal,\n    \"data-modal-root\": true\n  }, typeof otherProps.children === 'function' ? otherProps.children(props) : renderDefault()));\n};\n\n$bfd2aa2f2cc9e088$export$2b77a92f1a5ad772.displayName = 'Modal';\n\nconst $12733d8c9bae35ea$export$c63fb08199be8e0e = _ref4 => {\n  let {\n    testId = 'cf-ui-modal-controls',\n    className: className,\n    children: children,\n    ...otherProps\n  } = _ref4;\n  return /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Flex, { ...otherProps,\n    className: className,\n    testId: testId,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    margin: \"spacingL\",\n    marginTop: \"none\"\n  }, /*#__PURE__*/$ggPfR$react.createElement($ggPfR$ButtonGroup, {\n    variant: \"spaced\",\n    spacing: \"spacingS\"\n  }, children));\n};\n\n$12733d8c9bae35ea$export$c63fb08199be8e0e.displayName = 'ModalControls';\nconst $d7b21827f6622ba3$export$2b77a92f1a5ad772 = $bfd2aa2f2cc9e088$export$2b77a92f1a5ad772;\n$d7b21827f6622ba3$export$2b77a92f1a5ad772.Content = $2e16b6f9c0e7012d$export$6da19a24bf249f17;\n$d7b21827f6622ba3$export$2b77a92f1a5ad772.Header = $08ed4541188cb150$export$f50a68e3694789ee;\n$d7b21827f6622ba3$export$2b77a92f1a5ad772.Controls = $12733d8c9bae35ea$export$c63fb08199be8e0e;\n\nconst $78040759975f86df$export$427af6990c8ff682 = _ref5 => {\n  let {\n    allowHeightOverflow = false,\n    cancelLabel = 'Cancel',\n    cancelTestId = 'cf-ui-modal-confirm-cancel-button',\n    children: children,\n    confirmLabel = 'Confirm',\n    confirmTestId = 'cf-ui-modal-confirm-confirm-button',\n    intent = 'positive',\n    isConfirmDisabled = false,\n    isConfirmLoading = false,\n    isShown: isShown,\n    modalContentProps: modalContentProps,\n    modalControlsProps: modalControlsProps,\n    modalHeaderProps: modalHeaderProps,\n    onCancel: onCancel,\n    onConfirm: onConfirm,\n    shouldCloseOnEscapePress = true,\n    shouldCloseOnOverlayClick = true,\n    size = 'medium',\n    testId = 'cf-ui-modal-confirm',\n    title = 'Are you sure?',\n    initialFocusRef: initialFocusRef\n  } = _ref5;\n  const cancelRef = $ggPfR$react.useRef(null);\n  const confirmButton = confirmLabel ? /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Button, {\n    testId: confirmTestId,\n    isDisabled: isConfirmDisabled,\n    isLoading: isConfirmLoading,\n    variant: intent,\n    size: \"small\",\n    onClick: () => onConfirm()\n  }, confirmLabel) : null;\n  const cancelButton = cancelLabel ? /*#__PURE__*/$ggPfR$react.createElement($ggPfR$Button, {\n    testId: cancelTestId,\n    variant: \"secondary\",\n    onClick: onCancel,\n    size: \"small\",\n    ref: initialFocusRef || cancelRef\n  }, cancelLabel) : null;\n  return /*#__PURE__*/$ggPfR$react.createElement($d7b21827f6622ba3$export$2b77a92f1a5ad772, {\n    testId: testId,\n    isShown: isShown,\n    onClose: onCancel,\n    size: size,\n    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,\n    shouldCloseOnEscapePress: shouldCloseOnEscapePress,\n    allowHeightOverflow: allowHeightOverflow,\n    initialFocusRef: cancelRef\n  }, () => {\n    return /*#__PURE__*/$ggPfR$react.createElement($ggPfR$react.Fragment, null, /*#__PURE__*/$ggPfR$react.createElement($d7b21827f6622ba3$export$2b77a92f1a5ad772.Header, {\n      title: title || '',\n      ...modalHeaderProps\n    }), /*#__PURE__*/$ggPfR$react.createElement($d7b21827f6622ba3$export$2b77a92f1a5ad772.Content, modalContentProps, children), /*#__PURE__*/$ggPfR$react.createElement($d7b21827f6622ba3$export$2b77a92f1a5ad772.Controls, modalControlsProps, cancelButton, confirmButton));\n  });\n};\n\n$78040759975f86df$export$427af6990c8ff682.displayName = 'ModalConfirm';\n\nconst $1dc787d4cf525536$var$getRoot = rootElId => {\n  // Reuse the container if we find it\n  let rootDom = document.getElementById(rootElId);\n  if (rootDom !== null) return rootDom; // Otherwise create it\n\n  rootDom = document.createElement('div');\n  rootDom.setAttribute('id', rootElId);\n  document.body.appendChild(rootDom);\n  return rootDom;\n};\n\nconst $1dc787d4cf525536$var$openModalsIds = new Map();\n\nfunction $1dc787d4cf525536$var$closeAll() {\n  $1dc787d4cf525536$var$openModalsIds.forEach(async (_ref6, rootElId) => {\n    let {\n      render: render,\n      currentConfig: currentConfig,\n      delay: delay\n    } = _ref6;\n    const config = { ...currentConfig,\n      isShown: false\n    };\n    render(config);\n    await new Promise(resolveDelay => setTimeout(resolveDelay, delay));\n    $ggPfR$reactdom.unmountComponentAtNode($1dc787d4cf525536$var$getRoot(rootElId));\n    $1dc787d4cf525536$var$openModalsIds.delete(rootElId);\n  });\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction $1dc787d4cf525536$var$open(componentRenderer) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options = {\n    delay: 300,\n    ...options\n  }; // Allow components to specify if they wish to reuse the modal container\n\n  const rootElId = `modals-root${options.modalId || Date.now()}`;\n  const rootDom = $1dc787d4cf525536$var$getRoot(rootElId);\n  return new Promise(resolve => {\n    let currentConfig = {\n      onClose: onClose1,\n      isShown: true\n    };\n\n    function render(_ref7) {\n      let {\n        onClose: onClose,\n        isShown: isShown\n      } = _ref7;\n      $ggPfR$reactdom.render(componentRenderer({\n        onClose: onClose,\n        isShown: isShown\n      }), rootDom);\n    }\n\n    async function onClose1(arg) {\n      currentConfig = { ...currentConfig,\n        isShown: false\n      };\n      render(currentConfig);\n      await new Promise(resolveDelay => setTimeout(resolveDelay, options.delay));\n      $ggPfR$reactdom.unmountComponentAtNode(rootDom);\n      rootDom.remove();\n      $1dc787d4cf525536$var$openModalsIds.delete(rootElId);\n      resolve(arg);\n    }\n\n    render(currentConfig);\n    $1dc787d4cf525536$var$openModalsIds.set(rootElId, {\n      render: render,\n      currentConfig: currentConfig,\n      delay: options.delay\n    });\n  });\n}\n\nconst $1dc787d4cf525536$export$e21b828b42c54a37 = {\n  open: $1dc787d4cf525536$var$open,\n  closeAll: $1dc787d4cf525536$var$closeAll\n};\nexport { $d7b21827f6622ba3$export$2b77a92f1a5ad772 as Modal, $78040759975f86df$export$427af6990c8ff682 as ModalConfirm, $2e16b6f9c0e7012d$export$6da19a24bf249f17 as ModalContent, $12733d8c9bae35ea$export$c63fb08199be8e0e as ModalControls, $08ed4541188cb150$export$f50a68e3694789ee as ModalHeader, $1dc787d4cf525536$export$e21b828b42c54a37 as ModalLauncher };","map":{"version":3,"mappings":"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","names":["getModalHeaderStyles","root","$ggPfR$css","position","padding","tokens","spacingM","spacingL","borderRadius","borderRadiusMedium","borderBottom","gray300","buttonContainer","width","spacing2Xl","height","button","top","spacing2Xs","right","ModalHeader","onClose","title","testId","className","otherProps","styles","$ggPfR$react","$ggPfR$Flex","$ggPfR$cx","alignItems","justifyContent","$ggPfR$Subheading","as","isTruncated","marginBottom","$ggPfR$Button","variant","startIcon","$ggPfR$CloseIcon","size","onClick","displayName","getModalContentStyles","color","gray700","fontSize","fontSizeM","fontFamily","fontStackPrimary","lineHeight","lineHeightM","overflowY","overflowX","boxSizing","ModalContent","children","$ggPfR$Box","getModalStyles","props","modal","margin","backgroundColor","colorWhite","boxShadow","boxShadowHeavy","maxHeight","fontBaseDefault","maxWidth","overflow","display","flexDirection","allowHeightOverflow","name","portal","base","zIndex","zIndexModalContent","textAlign","outline","transform","transition","transitionDurationDefault","transitionEasingDefault","afterOpen","beforeClose","modalOverlay","flexWrap","bottom","left","zIndexModal","opacity","ModalSizesMapper","medium","small","large","fullWidth","zen","focusFirstWithinNode","node","querySelectorAll","elements","length","firstElement","focus","Modal","shouldCloseOnEscapePress","shouldCloseOnOverlayClick","topOffset","aria","contentRef","React","isShown","setTimeout","initialFocusRef","current","renderDefault","$ggPfR$createElement","$08ed4541188cb150$export$f50a68e3694789ee","modalHeaderProps","$2e16b6f9c0e7012d$export$6da19a24bf249f17","modalContentProps","$ggPfR$reactmodal","ariaHideApp","onRequestClose","isOpen","onAfterOpen","shouldCloseOnEsc","shouldFocusAfterRender","shouldReturnFocusAfterClose","portalClassName","style","content","overlayClassName","closeTimeoutMS","ref","ModalControls","marginTop","$ggPfR$ButtonGroup","spacing","OriginalModal","Content","Header","Controls","ModalConfirm","cancelLabel","cancelTestId","confirmLabel","confirmTestId","intent","isConfirmDisabled","isConfirmLoading","modalControlsProps","onCancel","onConfirm","cancelRef","useRef","confirmButton","isDisabled","isLoading","cancelButton","$d7b21827f6622ba3$export$2b77a92f1a5ad772","Fragment","getRoot","rootElId","rootDom","document","getElementById","createElement","setAttribute","body","appendChild","openModalsIds","Map","closeAll","forEach","render","currentConfig","delay","config","Promise","resolveDelay","ReactDOM","unmountComponentAtNode","delete","open","componentRenderer","options","modalId","Date","now","resolve","arg","remove","set","ModalLauncher"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalHeader/ModalHeader.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalHeader/ModalHeader.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalContent/ModalContent.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalContent/ModalContent.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/Modal.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/Modal.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalControls/ModalControls.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/CompoundModal.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalConfirm/ModalConfirm.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-modal/dist/packages/components/modal/src/ModalLauncher/ModalLauncher.tsx"],"sourcesContent":["import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getModalHeaderStyles() {\n  return {\n    root: css({\n      position: 'relative',\n      padding: `${tokens.spacingM} ${tokens.spacingM} ${tokens.spacingM} ${tokens.spacingL}`,\n      borderRadius: `${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium} 0 0`,\n      borderBottom: `1px solid ${tokens.gray300}`,\n    }),\n    buttonContainer: css({\n      position: 'relative',\n      width: tokens.spacing2Xl,\n      height: tokens.spacingL,\n      button: {\n        position: 'absolute',\n        top: `calc(-1 * ${tokens.spacing2Xs})`,\n        right: 0,\n      },\n    }),\n  };\n}\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { CloseIcon } from '@contentful/f36-icons';\nimport { Flex } from '@contentful/f36-core';\nimport type { PropsWithHTMLElement, CommonProps } from '@contentful/f36-core';\nimport { Button } from '@contentful/f36-button';\nimport { Subheading } from '@contentful/f36-typography';\n\nimport { getModalHeaderStyles } from './ModalHeader.styles';\n\ninterface ModalHeaderInternalProps extends CommonProps {\n  title: string;\n  onClose?: Function;\n}\n\nexport type ModalHeaderProps = PropsWithHTMLElement<\n  ModalHeaderInternalProps,\n  'div'\n>;\n\nexport const ModalHeader = ({\n  onClose,\n  title,\n  testId = 'cf-ui-modal-header',\n  className,\n  ...otherProps\n}: ModalHeaderProps): React.ReactElement => {\n  const styles = getModalHeaderStyles();\n\n  return (\n    <Flex\n      {...otherProps}\n      className={cx(styles.root, className)}\n      testId={testId}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Subheading as=\"h1\" isTruncated marginBottom=\"none\">\n        {title}\n      </Subheading>\n      {onClose && (\n        <Flex alignItems=\"center\" className={styles.buttonContainer}>\n          <Button\n            variant=\"transparent\"\n            aria-label=\"Close\"\n            startIcon={<CloseIcon size=\"small\" />}\n            onClick={() => {\n              onClose();\n            }}\n            size=\"small\"\n          />\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nModalHeader.displayName = 'ModalHeader';\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport function getModalContentStyles() {\n  return {\n    root: css({\n      padding: `${tokens.spacingM} ${tokens.spacingL}`,\n      color: tokens.gray700,\n      fontSize: tokens.fontSizeM,\n      fontFamily: tokens.fontStackPrimary,\n      lineHeight: tokens.lineHeightM,\n      overflowY: 'auto',\n      overflowX: 'auto',\n      boxSizing: 'border-box',\n    }),\n  };\n}\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { PropsWithHTMLElement, CommonProps } from '@contentful/f36-core';\nimport { Box } from '@contentful/f36-core';\nimport { getModalContentStyles } from './ModalContent.styles';\n\ninterface ModalContentInternalProps extends CommonProps {\n  children: React.ReactNode;\n}\n\nexport type ModalContentProps = PropsWithHTMLElement<\n  ModalContentInternalProps,\n  'div'\n>;\n\nexport const ModalContent = ({\n  testId = 'cf-ui-modal-content',\n  className,\n  children,\n  ...otherProps\n}: ModalContentProps) => {\n  const styles = getModalContentStyles();\n  return (\n    <Box\n      {...otherProps}\n      as=\"div\"\n      className={cx(styles.root, className)}\n      testId={testId}\n    >\n      {children}\n    </Box>\n  );\n};\n\nModalContent.displayName = 'ModalContent';\n","import tokens from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\n\nimport type { ModalProps } from './Modal';\n\nexport function getModalStyles(props: {\n  size: ModalProps['size'];\n  position: ModalProps['position'];\n  allowHeightOverflow?: boolean;\n  className?: string;\n}) {\n  const modal = cx(\n    css({\n      margin: tokens.spacing2Xl,\n      backgroundColor: tokens.colorWhite,\n      borderRadius: props.size === 'zen' ? 0 : tokens.borderRadiusMedium,\n      boxShadow: tokens.boxShadowHeavy,\n      maxHeight: `calc(100vh - 1rem * (100 / ${tokens.fontBaseDefault}))`,\n      maxWidth: `calc(100vw - 1rem * (100 / ${tokens.fontBaseDefault}))`,\n      overflow: 'hidden',\n      display: 'flex',\n      flexDirection: 'column',\n    }),\n    props.allowHeightOverflow\n      ? css({\n          overflow: 'auto',\n          maxHeight: 'none',\n        })\n      : null,\n    props.size === 'zen'\n      ? css({\n          maxWidth: 'none',\n          maxHeight: 'none',\n          margin: 0,\n          height: '100%',\n          width: '100%',\n        })\n      : null,\n    props.className,\n  );\n\n  return {\n    portal: css({\n      display: 'block',\n    }),\n    base: {\n      root: cx(\n        css({\n          zIndex: tokens.zIndexModalContent,\n          position: 'relative',\n          padding: 0,\n          display: 'inline-block',\n          margin: '0 auto',\n          textAlign: 'left',\n          outline: 'none',\n          transform: props.size === 'zen' ? 'scale(1)' : 'scale(0.85)',\n          transition: `transform ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault}`,\n        }),\n        props.size === 'zen'\n          ? css({\n              width: '100%',\n              height: '100%',\n            })\n          : null,\n      ),\n      afterOpen: css({\n        transform: 'scale(1) !important',\n      }),\n      beforeClose: css({\n        transform: props.size === 'zen' ? 'scale(1)' : 'scale(0.85)',\n      }),\n    },\n    modalOverlay: {\n      root: cx(\n        css({\n          display: 'flex',\n          alignItems: 'baseline',\n          flexWrap: 'wrap',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          zIndex: tokens.zIndexModal,\n          opacity: 0,\n          transition: `opacity ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault}`,\n          position: 'fixed',\n          overflowY: 'auto',\n          backgroundColor: 'rgba(12, 20, 28, 0.74902)',\n          textAlign: 'center',\n        }),\n        props.position === 'center'\n          ? css({\n              alignItems: 'center',\n              justifyContent: 'center',\n            })\n          : null,\n      ),\n      afterOpen: css({\n        opacity: 1,\n      }),\n      beforeClose: css({\n        opacity: 0,\n      }),\n    },\n    modal,\n  };\n}\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\nimport { Box } from '@contentful/f36-core';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\n\nimport { ModalHeader, ModalHeaderProps } from './ModalHeader/ModalHeader';\nimport { ModalContent, ModalContentProps } from './ModalContent/ModalContent';\nimport { getModalStyles } from './Modal.styles';\nimport type { ModalSizeType, ModalPositionType } from './types';\n\nconst ModalSizesMapper: { [key in ModalSizeType]: string } = {\n  medium: '520px',\n  small: '400px',\n  large: '700px',\n  fullWidth: '100vw',\n  zen: '100vw',\n};\n\nexport interface ModalProps extends CommonProps {\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: boolean;\n\n  /**\n   * Function that will be run when the modal is requested to be closed, prior to actually closing.\n   */\n  onClose: ReactModal.Props['onRequestClose'];\n\n  /**\n   * Function that will be run after the modal has opened.\n   */\n  onAfterOpen?: ReactModal.Props['onAfterOpen'];\n\n  /**\n   * Additional aria attributes\n   */\n  aria?: ReactModal.Props['aria'];\n\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   * @default true\n   */\n  shouldCloseOnOverlayClick?: boolean;\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   * @default true\n   */\n  shouldCloseOnEscapePress?: boolean;\n  /**\n   * Indicating if modal is centered or linked to the top\n   * @default center\n   */\n  position?: ModalPositionType;\n  /**\n   * Top offset if position is 'top'\n   * @default 50px\n   */\n  topOffset?: number | string;\n  /**\n   * Modal title that is used in header\n   */\n  title?: string;\n  /**\n   * Size of the modal window\n   * @default medium\n   */\n  size?: ModalSizeType | string | number;\n  /**\n   * Are modals higher than viewport allowed\n   * @default false\n   */\n  allowHeightOverflow?: boolean;\n\n  /**\n   * Optional props to override ModalHeader behaviour\n   */\n  modalHeaderProps?: Partial<ModalHeaderProps>;\n\n  /**\n   * Optional props to override ModalContent behaviour\n   */\n  modalContentProps?: Partial<ModalContentProps>;\n\n  /**\n   * Optional property to set initial focus\n   */\n  initialFocusRef?: React.RefObject<HTMLElement>;\n\n  children: React.ReactNode | RenderModal;\n}\n\ntype RenderModal = (modalProps: ModalProps) => React.ReactNode;\n\nfunction focusFirstWithinNode(node: HTMLElement) {\n  if (node && node.querySelectorAll) {\n    const elements = node.querySelectorAll('input, button');\n    if (elements.length > 0) {\n      const firstElement = elements[0];\n      // @ts-expect-error focus might be missing\n      if (typeof firstElement.focus === 'function') {\n        // @ts-expect-error focus might be missing\n        firstElement.focus();\n      }\n    }\n  }\n}\n\nexport const Modal = ({\n  allowHeightOverflow = false,\n  position = 'center',\n  shouldCloseOnEscapePress = true,\n  shouldCloseOnOverlayClick = true,\n  size = 'medium',\n  testId = 'cf-ui-modal',\n  topOffset = '50px',\n  aria,\n  ...otherProps\n}: ExpandProps<ModalProps>) => {\n  const contentRef = React.useRef<HTMLDivElement>(null);\n\n  const props = {\n    ...otherProps,\n    allowHeightOverflow,\n    position,\n    shouldCloseOnEscapePress,\n    shouldCloseOnOverlayClick,\n    size,\n    testId,\n    topOffset,\n  };\n\n  const styles = getModalStyles({\n    position,\n    size,\n    allowHeightOverflow,\n    className: otherProps.className,\n  });\n\n  React.useEffect(() => {\n    if (props.isShown) {\n      setTimeout(() => {\n        if (props.initialFocusRef && props.initialFocusRef.current) {\n          if (props.initialFocusRef.current.focus) {\n            props.initialFocusRef.current.focus();\n          }\n        } else if (contentRef.current) {\n          focusFirstWithinNode(contentRef.current);\n        }\n      }, 100);\n    }\n  }, [props.isShown, props.initialFocusRef]);\n\n  const renderDefault = () => {\n    return (\n      <>\n        {otherProps.title && (\n          <ModalHeader\n            title={otherProps.title}\n            onClose={props.onClose}\n            {...otherProps.modalHeaderProps}\n          />\n        )}\n        <ModalContent {...otherProps.modalContentProps}>\n          {otherProps.children}\n        </ModalContent>\n      </>\n    );\n  };\n\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      aria={aria}\n      onRequestClose={props.onClose}\n      isOpen={otherProps.isShown}\n      onAfterOpen={props.onAfterOpen}\n      shouldCloseOnEsc={shouldCloseOnEscapePress}\n      shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n      shouldFocusAfterRender\n      shouldReturnFocusAfterClose\n      portalClassName={styles.portal}\n      style={{\n        content: {\n          top: position === 'center' ? 0 : topOffset,\n        },\n      }}\n      className={{\n        base: styles.base.root,\n        afterOpen: styles.base.afterOpen,\n        beforeClose: styles.base.beforeClose,\n      }}\n      overlayClassName={{\n        base: styles.modalOverlay.root,\n        afterOpen: styles.modalOverlay.afterOpen,\n        beforeClose: styles.modalOverlay.beforeClose,\n      }}\n      closeTimeoutMS={200}\n      contentRef={(ref) => {\n        contentRef.current = ref;\n      }}\n    >\n      <Box\n        testId={testId}\n        style={{\n          width: ModalSizesMapper[size] || size,\n        }}\n        className={styles.modal}\n        data-modal-root\n      >\n        {typeof otherProps.children === 'function'\n          ? otherProps.children(props)\n          : renderDefault()}\n      </Box>\n    </ReactModal>\n  );\n};\n\nModal.displayName = 'Modal';\n","import React from 'react';\n\nimport type { PropsWithHTMLElement, CommonProps } from '@contentful/f36-core';\nimport { Flex } from '@contentful/f36-core';\nimport { ButtonGroup } from '@contentful/f36-button';\n\ninterface ModalControlsInternalProps extends CommonProps {\n  children: React.ReactElement[] | React.ReactElement;\n}\n\nexport type ModalControlsProps = PropsWithHTMLElement<\n  ModalControlsInternalProps,\n  'div'\n>;\n\nexport const ModalControls = ({\n  testId = 'cf-ui-modal-controls',\n  className,\n  children,\n  ...otherProps\n}: ModalControlsProps): React.ReactElement => {\n  return (\n    <Flex\n      {...otherProps}\n      className={className}\n      testId={testId}\n      flexDirection=\"row\"\n      justifyContent=\"flex-end\"\n      margin=\"spacingL\"\n      marginTop=\"none\"\n    >\n      <ButtonGroup variant=\"spaced\" spacing=\"spacingS\">\n        {children}\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nModalControls.displayName = 'ModalControls';\n","import { Modal as OriginalModal } from './Modal';\nimport { ModalContent } from './ModalContent/ModalContent';\nimport { ModalHeader } from './ModalHeader/ModalHeader';\nimport { ModalControls } from './ModalControls/ModalControls';\n\ntype CompoundModal = typeof OriginalModal & {\n  Content: typeof ModalContent;\n  Header: typeof ModalHeader;\n  Controls: typeof ModalControls;\n};\n\nexport const Modal = OriginalModal as CompoundModal;\nModal.Content = ModalContent;\nModal.Header = ModalHeader;\nModal.Controls = ModalControls;\n","import React from 'react';\n\nimport { Modal } from '../CompoundModal';\nimport type { ModalProps } from '../Modal';\nimport type { ModalHeaderProps } from '../ModalHeader/ModalHeader';\nimport type { ModalContentProps } from '../ModalContent/ModalContent';\nimport type { ModalControlsProps } from '../ModalControls/ModalControls';\nimport { Button } from '@contentful/f36-button';\n\nexport interface ModalConfirmProps {\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: boolean;\n  /**\n   * Function that will be called when the confirm button is clicked. This does not close the ModalConfirm.\n   */\n  onConfirm(): void;\n  /**\n   * Function that will be called when the cancel button is clicked. This does not close the ModalConfirm.\n   */\n  onCancel: ModalProps['onClose'];\n  /**\n      Modal title that is used in header\n    */\n  title?: string;\n  /**\n   * Label of the confirm button\n   */\n  confirmLabel?: string | false;\n  /**\n   * Label of the cancel button\n   */\n  cancelLabel?: string | false;\n  /**\n   * The intent of the ModalConfirm. Used for the Button.\n   */\n  intent?: 'primary' | 'positive' | 'negative';\n  /**\n   * Size of the modal window\n   */\n  size?: ModalProps['size'];\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   */\n  shouldCloseOnOverlayClick?: boolean;\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   */\n  shouldCloseOnEscapePress?: boolean;\n  /**\n   * When true, the confirm button is set to disabled.\n   */\n  isConfirmDisabled?: boolean;\n  /**\n   * When true, the confirm button is set to loading.\n   */\n  isConfirmLoading?: boolean;\n  /**\n   * Are modals higher than viewport allowed\n   */\n  allowHeightOverflow?: boolean;\n\n  /**\n   * Optional props to override ModalHeader behaviour\n   */\n  modalHeaderProps?: Partial<ModalHeaderProps>;\n\n  /**\n   * Optional props to override ModalContent behaviour\n   */\n  modalContentProps?: Partial<ModalContentProps>;\n\n  /**\n   * Optional props to override ModalControl behaviour\n   */\n  modalControlsProps?: Partial<ModalControlsProps>;\n\n  /**\n   * Optional property to set initial focus\n   */\n  initialFocusRef?: React.RefObject<HTMLElement>;\n\n  testId?: string;\n  confirmTestId?: string;\n  cancelTestId?: string;\n  children: React.ReactNode;\n}\n\nexport const ModalConfirm = ({\n  allowHeightOverflow = false,\n  cancelLabel = 'Cancel',\n  cancelTestId = 'cf-ui-modal-confirm-cancel-button',\n  children,\n  confirmLabel = 'Confirm',\n  confirmTestId = 'cf-ui-modal-confirm-confirm-button',\n  intent = 'positive',\n  isConfirmDisabled = false,\n  isConfirmLoading = false,\n  isShown,\n  modalContentProps,\n  modalControlsProps,\n  modalHeaderProps,\n  onCancel,\n  onConfirm,\n  shouldCloseOnEscapePress = true,\n  shouldCloseOnOverlayClick = true,\n  size = 'medium',\n  testId = 'cf-ui-modal-confirm',\n  title = 'Are you sure?',\n  initialFocusRef,\n}: ModalConfirmProps) => {\n  const cancelRef = React.useRef(null);\n\n  const confirmButton = confirmLabel ? (\n    <Button\n      testId={confirmTestId}\n      isDisabled={isConfirmDisabled}\n      isLoading={isConfirmLoading}\n      variant={intent}\n      size=\"small\"\n      onClick={() => onConfirm()}\n    >\n      {confirmLabel}\n    </Button>\n  ) : null;\n\n  const cancelButton = cancelLabel ? (\n    <Button\n      testId={cancelTestId}\n      variant=\"secondary\"\n      onClick={onCancel}\n      size=\"small\"\n      ref={initialFocusRef || cancelRef}\n    >\n      {cancelLabel}\n    </Button>\n  ) : null;\n\n  return (\n    <Modal\n      testId={testId}\n      isShown={isShown}\n      onClose={onCancel}\n      size={size}\n      shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n      shouldCloseOnEscapePress={shouldCloseOnEscapePress}\n      allowHeightOverflow={allowHeightOverflow}\n      initialFocusRef={cancelRef}\n    >\n      {() => {\n        return (\n          <React.Fragment>\n            <Modal.Header title={title || ''} {...modalHeaderProps} />\n            <Modal.Content {...modalContentProps}>{children}</Modal.Content>\n            <Modal.Controls {...modalControlsProps}>\n              {cancelButton}\n              {confirmButton}\n            </Modal.Controls>\n          </React.Fragment>\n        );\n      }}\n    </Modal>\n  );\n};\n\nModalConfirm.displayName = 'ModalConfirm';\n","/* global Promise */\nimport ReactDOM from 'react-dom';\n\n// @todo: change any to unknown\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface ModalLauncherComponentRendererProps<T = any> {\n  isShown: boolean;\n  onClose: (result?: T) => void;\n}\n\ninterface ModalLauncherOpenOptions {\n  /**\n   * Unique id to be used as identifier for the modal contianer\n   */\n  modalId?: string;\n  /**\n   * ms before removing the component from the tree\n   * @default 300\n   */\n  delay?: number;\n}\n\ninterface CloseModalData {\n  delay: number;\n  render: (args: ModalLauncherComponentRendererProps<any>) => void;\n  currentConfig: ModalLauncherComponentRendererProps<any>;\n}\n\nconst getRoot = (rootElId: string): HTMLElement => {\n  // Reuse the container if we find it\n  let rootDom = document.getElementById(rootElId);\n  if (rootDom !== null) {\n    return rootDom;\n  }\n\n  // Otherwise create it\n  rootDom = document.createElement('div');\n  rootDom.setAttribute('id', rootElId);\n  document.body.appendChild(rootDom);\n  return rootDom;\n};\n\nconst openModalsIds: Map<string, CloseModalData> = new Map();\nfunction closeAll() {\n  openModalsIds.forEach(async ({ render, currentConfig, delay }, rootElId) => {\n    const config = { ...currentConfig, isShown: false };\n    render(config);\n    await new Promise((resolveDelay) => setTimeout(resolveDelay, delay));\n    ReactDOM.unmountComponentAtNode(getRoot(rootElId));\n    openModalsIds.delete(rootElId);\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction open<T = any>(\n  componentRenderer: (\n    props: ModalLauncherComponentRendererProps<T>,\n  ) => JSX.Element,\n  options: ModalLauncherOpenOptions = {},\n): Promise<T> {\n  options = { delay: 300, ...options };\n\n  // Allow components to specify if they wish to reuse the modal container\n  const rootElId = `modals-root${options.modalId || Date.now()}`;\n  const rootDom = getRoot(rootElId);\n\n  return new Promise((resolve) => {\n    let currentConfig = { onClose, isShown: true };\n\n    function render({\n      onClose,\n      isShown,\n    }: ModalLauncherComponentRendererProps<T>) {\n      ReactDOM.render(componentRenderer({ onClose, isShown }), rootDom);\n    }\n\n    async function onClose(arg?: T) {\n      currentConfig = {\n        ...currentConfig,\n        isShown: false,\n      };\n      render(currentConfig);\n      await new Promise((resolveDelay) =>\n        setTimeout(resolveDelay, options.delay),\n      );\n      ReactDOM.unmountComponentAtNode(rootDom);\n      rootDom.remove();\n      openModalsIds.delete(rootElId);\n      resolve(arg);\n    }\n\n    render(currentConfig);\n    openModalsIds.set(rootElId, {\n      render,\n      currentConfig,\n      delay: options.delay,\n    });\n  });\n}\n\nexport const ModalLauncher = {\n  open,\n  closeAll,\n};\n"]},"metadata":{},"sourceType":"module"}