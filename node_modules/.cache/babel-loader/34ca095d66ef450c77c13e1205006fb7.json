{"ast":null,"code":"import $aLGPd$react, { createElement as $aLGPd$createElement, forwardRef as $aLGPd$forwardRef, useMemo as $aLGPd$useMemo, useState as $aLGPd$useState, useCallback as $aLGPd$useCallback } from \"react\";\nimport { Global as $aLGPd$Global, css as $aLGPd$css } from \"@emotion/core\";\nimport $aLGPd$contentfulf36tokens from \"@contentful/f36-tokens\";\nimport { cx as $aLGPd$cx, css as $aLGPd$css1 } from \"emotion\";\nconst $794117e66d5a6910$var$cssReset = {\n  name: \"cmasbt\",\n  styles: \"body,h1,h2,h3,h4,p,figure,blockquote,dl,dd{margin:0;}ul[role='list'],ol[role='list']{list-style:none;}html:focus-within{scroll-behavior:smooth;}body{text-rendering:optimizeSpeed;line-height:1.5;}a:not([class]){text-decoration-skip-ink:auto;}img,picture{max-width:100%;display:block;}input,button,textarea,select{font:inherit;}@media (prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto;}*,*::before,*::after{animation-duration:0.01ms !important;animation-iteration-count:1 !important;transition-duration:0.01ms !important;scroll-behavior:auto !important;}}\"\n};\n\nconst $794117e66d5a6910$export$c507fb1c2e1ac13a = _ref => {\n  let {\n    withNormalize = true,\n    styles: styles\n  } = _ref;\n  return /*#__PURE__*/$aLGPd$createElement($aLGPd$Global, {\n    styles: $aLGPd$css(withNormalize ? $794117e66d5a6910$var$cssReset : undefined, \";html{border:0;box-sizing:border-box;margin:0;padding:0;}body{color:\", $aLGPd$contentfulf36tokens.gray800, \";font-family:\", $aLGPd$contentfulf36tokens.fontStackPrimary, \";font-size:\", $aLGPd$contentfulf36tokens.fontSizeM, \";line-height:\", $aLGPd$contentfulf36tokens.lineHeightM, \";}code{font-family:\", $aLGPd$contentfulf36tokens.fontStackMonospace, \";}fieldset{border:0;margin:0;padding:0;}*,*::after,*::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;box-sizing:inherit;}\", styles, \";\")\n  });\n};\n\nconst $d274acd172b3cfc4$var$SpacingTable = {\n  none: 0,\n  spacing2Xs: $aLGPd$contentfulf36tokens.spacing2Xs,\n  spacingXs: $aLGPd$contentfulf36tokens.spacingXs,\n  spacingS: $aLGPd$contentfulf36tokens.spacingS,\n  spacingM: $aLGPd$contentfulf36tokens.spacingM,\n  spacingL: $aLGPd$contentfulf36tokens.spacingL,\n  spacingXl: $aLGPd$contentfulf36tokens.spacingXl,\n  spacing2Xl: $aLGPd$contentfulf36tokens.spacing2Xl,\n  spacing3Xl: $aLGPd$contentfulf36tokens.spacing3Xl,\n  spacing4Xl: $aLGPd$contentfulf36tokens.spacing4Xl\n};\n\nfunction $d274acd172b3cfc4$export$7eaee8e57bdfed8d(spacing) {\n  return $d274acd172b3cfc4$var$SpacingTable[spacing];\n}\n\nfunction $d274acd172b3cfc4$export$12274eafa451d6dc(props) {\n  return Object.assign({}, props.margin ? {\n    margin: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.margin)\n  } : null, props.marginLeft ? {\n    marginLeft: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.marginLeft)\n  } : null, props.marginRight ? {\n    marginRight: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.marginRight)\n  } : null, props.marginTop ? {\n    marginTop: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.marginTop)\n  } : null, props.marginBottom ? {\n    marginBottom: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.marginBottom)\n  } : null, props.padding ? {\n    padding: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.padding)\n  } : null, props.paddingLeft ? {\n    paddingLeft: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.paddingLeft)\n  } : null, props.paddingRight ? {\n    paddingRight: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.paddingRight)\n  } : null, props.paddingTop ? {\n    paddingTop: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.paddingTop)\n  } : null, props.paddingBottom ? {\n    paddingBottom: $d274acd172b3cfc4$export$7eaee8e57bdfed8d(props.paddingBottom)\n  } : null);\n}\n\nconst $5acb946d78fa28aa$var$BOX_DEFAULT_TAG = 'div';\n\nfunction $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22(props) {\n  const {\n    display: display,\n    className: className,\n    margin: margin,\n    marginBottom: marginBottom,\n    marginLeft: marginLeft,\n    marginRight: marginRight,\n    marginTop: marginTop,\n    padding: padding,\n    paddingBottom: paddingBottom,\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight,\n    paddingTop: paddingTop,\n    testId: testId,\n    as: Element = $5acb946d78fa28aa$var$BOX_DEFAULT_TAG,\n    ...otherProps\n  } = props;\n  const boxProps = {\n    className: $aLGPd$cx( /*#__PURE__*/$aLGPd$css1({\n      display: display\n    }), /*#__PURE__*/$aLGPd$css1({ ...$d274acd172b3cfc4$export$12274eafa451d6dc({\n        margin: margin,\n        marginBottom: marginBottom,\n        marginLeft: marginLeft,\n        marginRight: marginRight,\n        marginTop: marginTop,\n        padding: padding,\n        paddingBottom: paddingBottom,\n        paddingLeft: paddingLeft,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop\n      })\n    }), className),\n    ['data-test-id']: testId,\n    ...otherProps\n  };\n  return {\n    boxProps: boxProps,\n    Element: Element\n  };\n}\n\nfunction $5acb946d78fa28aa$var$_Box(props, ref) {\n  const {\n    boxProps: boxProps,\n    Element: Element\n  } = $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22(props);\n  return /*#__PURE__*/$aLGPd$createElement(Element, { ...boxProps,\n    ref: ref\n  }, props.children);\n}\n\n$5acb946d78fa28aa$var$_Box.displayName = 'Box';\nconst $5acb946d78fa28aa$export$e71c4d32a2263218 = /*#__PURE__*/$aLGPd$forwardRef($5acb946d78fa28aa$var$_Box);\nconst $64ffc0a56f9249d0$var$FLEX_DEFAULT_TAG = 'div';\n\nfunction $64ffc0a56f9249d0$var$_Flex(_ref2, ref) {\n  let {\n    isInline: isInline,\n    alignItems: alignItems,\n    alignSelf: alignSelf,\n    alignContent: alignContent,\n    flex: flex,\n    flexBasis: flexBasis,\n    flexShrink: flexShrink,\n    flexDirection: flexDirection,\n    flexGrow: flexGrow,\n    flexWrap: flexWrap,\n    fullHeight: fullHeight,\n    fullWidth: fullWidth,\n    gap: gap,\n    justifyContent: justifyContent,\n    justifyItems: justifyItems,\n    justifySelf: justifySelf,\n    order: order,\n    children: children,\n    as: as,\n    ...otherProps\n  } = _ref2;\n  const {\n    boxProps: boxProps,\n    Element: Element\n  } = $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22({ ...otherProps,\n    as: as || $64ffc0a56f9249d0$var$FLEX_DEFAULT_TAG\n  });\n\n  var _gap;\n\n  return /*#__PURE__*/$aLGPd$createElement(Element, { ...boxProps,\n    className: $aLGPd$cx( /*#__PURE__*/$aLGPd$css1({\n      display: isInline ? 'inline-flex' : 'flex',\n      width: fullWidth ? '100%' : undefined,\n      height: fullHeight ? '100%' : undefined,\n      flex: flex,\n      flexBasis: flexBasis,\n      flexShrink: flexShrink,\n      flexDirection: flexDirection,\n      gap: (_gap = $aLGPd$contentfulf36tokens[gap]) !== null && _gap !== void 0 ? _gap : gap,\n      justifyContent: justifyContent,\n      justifyItems: justifyItems,\n      justifySelf: justifySelf,\n      alignItems: alignItems,\n      alignSelf: alignSelf,\n      alignContent: alignContent,\n      order: order,\n      flexWrap: flexWrap,\n      flexGrow: flexGrow\n    }), boxProps.className),\n    ref: ref\n  }, children);\n}\n\n$64ffc0a56f9249d0$var$_Flex.displayName = 'Flex';\nconst $64ffc0a56f9249d0$export$f51f4c4ede09e011 = /*#__PURE__*/$aLGPd$forwardRef($64ffc0a56f9249d0$var$_Flex);\nconst $3c31407b72573ef7$var$GRID_DEFAULT_TAG = 'div';\n\nfunction $3c31407b72573ef7$var$_Grid(_ref3, ref) {\n  let {\n    alignContent: alignContent,\n    children: children,\n    columnGap = 'spacingM',\n    columns = 'auto',\n    flow: flow,\n    isInline: isInline,\n    justifyContent: justifyContent,\n    rowGap = 'none',\n    rows = 'auto',\n    as: as,\n    ...otherProps\n  } = _ref3;\n\n  const handleGridTemplate = value => {\n    if (typeof value === 'number') return `repeat(${value}, minmax(0, 1fr))`;\n    return value;\n  };\n\n  const {\n    boxProps: boxProps,\n    Element: Element\n  } = $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22({ ...otherProps,\n    as: as || $3c31407b72573ef7$var$GRID_DEFAULT_TAG\n  });\n  var ref1, ref2;\n  return /*#__PURE__*/$aLGPd$createElement(Element, { ...boxProps,\n    className: $aLGPd$cx( /*#__PURE__*/$aLGPd$css1({\n      display: isInline ? 'inline-grid' : 'grid',\n      gridTemplateColumns: handleGridTemplate(columns),\n      gridTemplateRows: handleGridTemplate(rows),\n      flow: flow,\n      justifyContent: justifyContent,\n      alignContent: alignContent,\n      columnGap: (ref1 = $d274acd172b3cfc4$export$7eaee8e57bdfed8d(columnGap)) !== null && ref1 !== void 0 ? ref1 : 0,\n      rowGap: (ref2 = $d274acd172b3cfc4$export$7eaee8e57bdfed8d(rowGap)) !== null && ref2 !== void 0 ? ref2 : 0\n    }), boxProps.className),\n    ref: ref\n  }, children);\n}\n\n$3c31407b72573ef7$var$_Grid.displayName = 'Grid';\nconst $3c31407b72573ef7$export$ef2184bd89960b14 = /*#__PURE__*/$aLGPd$forwardRef($3c31407b72573ef7$var$_Grid);\nconst $9bb7406c7c7ca618$var$GRID_ITEM_DEFAULT_TAG = 'div';\n\nfunction $9bb7406c7c7ca618$var$_GridItem(_ref4, ref) {\n  let {\n    children: children,\n    columnStart: columnStart,\n    columnEnd: columnEnd,\n    rowStart: rowStart,\n    rowEnd: rowEnd,\n    area: area,\n    order: order,\n    ...otherProps\n  } = _ref4;\n  const calculatedArea = area ? area : [rowStart || 'auto', columnStart || 'auto', rowEnd || 'auto', columnEnd || 'auto'].join(' / ');\n  const {\n    boxProps: boxProps,\n    Element: Element\n  } = $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22(otherProps);\n  return /*#__PURE__*/$aLGPd$createElement(Element, { ...boxProps,\n    className: $aLGPd$cx( /*#__PURE__*/$aLGPd$css1({\n      gridArea: calculatedArea,\n      order: order\n    }), boxProps.className),\n    ref: ref\n  }, children);\n}\n\n$9bb7406c7c7ca618$var$_GridItem.displayName = 'GridItem';\nconst $9bb7406c7c7ca618$export$9eb849b9b922d396 = /*#__PURE__*/$aLGPd$forwardRef($9bb7406c7c7ca618$var$_GridItem);\nconst $7fa40e0d64fc15a4$export$ef2184bd89960b14 = $3c31407b72573ef7$export$ef2184bd89960b14;\n$7fa40e0d64fc15a4$export$ef2184bd89960b14.Item = $9bb7406c7c7ca618$export$9eb849b9b922d396;\nconst $54a90c3a76adda79$var$STACK_DEFAULT_TAG = 'div';\n\nfunction $54a90c3a76adda79$var$_Stack(_ref5, ref) {\n  let {\n    flexDirection = 'row',\n    alignItems = 'center',\n    isInline = false,\n    spacing = 'spacingM',\n    children: children,\n    as: as,\n    ...otherProps\n  } = _ref5;\n  const {\n    boxProps: boxProps,\n    Element: Element\n  } = $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22({ ...otherProps,\n    as: as || $54a90c3a76adda79$var$STACK_DEFAULT_TAG\n  });\n  return /*#__PURE__*/$aLGPd$createElement($64ffc0a56f9249d0$export$f51f4c4ede09e011, { ...boxProps,\n    as: Element,\n    flexDirection: flexDirection,\n    alignItems: alignItems,\n    isInline: isInline,\n    className: boxProps.className,\n    gap: spacing,\n    ref: ref\n  }, children);\n}\n\n$54a90c3a76adda79$var$_Stack.displayName = 'Stack';\nconst $54a90c3a76adda79$export$694e0d28c7ffc90c = /*#__PURE__*/$aLGPd$forwardRef($54a90c3a76adda79$var$_Stack);\n\nfunction $3b30232a414a86a9$export$ffd58b7f6f099a57() {\n  return {\n    screenReaderOnly: /*#__PURE__*/$aLGPd$css1({\n      name: \"1b512s9\",\n      styles: \"position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0;\"\n    })\n  };\n}\n\nconst $86cc119529e81be2$export$518e781dade4a416 = _ref6 => {\n  let {\n    children: children,\n    className: className,\n    testId = 'cf-ui-ScreenReaderOnly',\n    as = 'div',\n    ...otherProps\n  } = _ref6;\n  const styles = $3b30232a414a86a9$export$ffd58b7f6f099a57();\n  const Element = as;\n  return /*#__PURE__*/$aLGPd$react.createElement(Element, { ...otherProps,\n    \"data-test-id\": testId,\n    className: $aLGPd$cx(styles.screenReaderOnly, className)\n  }, children);\n};\n\nfunction $d0331e96d95a9792$export$f680877a34711e37(id, modifier) {\n  return $aLGPd$useMemo(() => id || [modifier || 'id', Math.round(Math.random() * 10000)].join('_'), []);\n}\n\nfunction $27ac7d48121c1a05$export$6f32135080cb4c3(_ref7) {\n  let {\n    isOpen: isOpen,\n    defaultIsOpen: defaultIsOpen,\n    onOpen: onOpen,\n    onClose: onClose\n  } = _ref7;\n  const [isOpenState, setIsOpen] = $aLGPd$useState(defaultIsOpen || false);\n  const isControlled = isOpen !== undefined;\n  const isOpenValue = isControlled ? isOpen : isOpenState;\n  const handleClose = $aLGPd$useCallback(() => {\n    if (!isControlled) setIsOpen(false);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [isControlled, onClose]);\n  const handleOpen = $aLGPd$useCallback(() => {\n    if (!isControlled) setIsOpen(true);\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n  }, [isControlled, onOpen]);\n  return {\n    isOpen: isOpenValue,\n    isControlled: isControlled,\n    handleClose: handleClose,\n    handleOpen: handleOpen\n  };\n}\n\nfunction $951570253aae34c4$export$c9058316764c140e() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n    });\n  };\n}\n\nconst $eee6c81ae79f104c$export$125b56fdc77c3731 = _ref8 => {\n  let {\n    status: status\n  } = _ref8;\n\n  switch (status) {\n    case 'published':\n      return {\n        color: $aLGPd$contentfulf36tokens.colorGreenBase,\n        backgroundColor: $aLGPd$contentfulf36tokens.colorGreenLightest\n      };\n\n    case 'changed':\n      return {\n        color: $aLGPd$contentfulf36tokens.colorBlueBase,\n        backgroundColor: $aLGPd$contentfulf36tokens.colorBlueLightest\n      };\n\n    case 'deleted':\n    case 'archived':\n      return {\n        color: $aLGPd$contentfulf36tokens.colorRedBase,\n        backgroundColor: $aLGPd$contentfulf36tokens.colorRedLightest\n      };\n\n    case 'draft':\n      return {\n        color: $aLGPd$contentfulf36tokens.colorOrangeDark,\n        backgroundColor: '#ffefd5'\n      };\n\n    case 'new':\n      return {\n        color: $aLGPd$contentfulf36tokens.colorWhite,\n        backgroundColor: $aLGPd$contentfulf36tokens.colorPrimary\n      };\n\n    default:\n      console.warn(`Unknown EntityStatus: ${status}`);\n      return {};\n  }\n};\n\nexport { $794117e66d5a6910$export$c507fb1c2e1ac13a as GlobalStyles, $64ffc0a56f9249d0$export$f51f4c4ede09e011 as Flex, $7fa40e0d64fc15a4$export$ef2184bd89960b14 as Grid, $9bb7406c7c7ca618$export$9eb849b9b922d396 as GridItem, $5acb946d78fa28aa$export$e71c4d32a2263218 as Box, $5acb946d78fa28aa$export$3c8fe9c3d6a8ef22 as useBox, $54a90c3a76adda79$export$694e0d28c7ffc90c as Stack, $86cc119529e81be2$export$518e781dade4a416 as ScreenReaderOnly, $27ac7d48121c1a05$export$6f32135080cb4c3 as useControllableState, $d0331e96d95a9792$export$f680877a34711e37 as useId, $951570253aae34c4$export$c9058316764c140e as mergeRefs, $eee6c81ae79f104c$export$125b56fdc77c3731 as getEntityStatusStyles };","map":{"version":3,"mappings":";;;;AAIA,MAAMA,8BAAQ,GAAd;EAAcC,cAAd;EAAcC;AAAd;;AAoEO,MAAMC,yCAAY,GAAG,QAgBtB;EAAA,IAhBuB;IAC3BC,aAAa,GAAG,IADW;IAxE7BF,QA0EEA;EAF2B,CAgBvB;EACJ,oBACEG,qBAACC,aAAD;IACEJ,QAAQK,UAAD,CACHH,aAAa,GAAGJ,8BAAH,GAAcQ,SADxB,0EAUMC,0BAAM,CAACC,OAVb,mBAWYD,0BAAM,CAACE,gBAXnB,iBAYUF,0BAAM,CAACG,SAZjB,mBAaYH,0BAAM,CAACI,WAbnB,yBAiBYJ,0BAAM,CAACK,kBAjBnB,4JAkCHZ,MAlCG;EADT,EADF;AAjBK;;ACrEP,MAAMa,kCAAY,GAAsD;EACtEC,IAAI,EAAE,CADgE;EAEtEC,UAAU,EAAER,0BAAM,CAACQ,UAFmD;EAGtEC,SAAS,EAAET,0BAAM,CAACS,SAHoD;EAItEC,QAAQ,EAAEV,0BAAM,CAACU,QAJqD;EAKtEC,QAAQ,EAAEX,0BAAM,CAACW,QALqD;EAMtEC,QAAQ,EAAEZ,0BAAM,CAACY,QANqD;EAOtEC,SAAS,EAAEb,0BAAM,CAACa,SAPoD;EAQtEC,UAAU,EAAEd,0BAAM,CAACc,UARmD;EAStEC,UAAU,EAAEf,0BAAM,CAACe,UATmD;EAUtEC,UAAU,EAAEhB,0BAAM,CAACgB;AAVmD,CAAxE;;AAaO,SAASC,yCAAT,CAA+BC,OAA/B,EAAiD;EACtD,OAAOZ,kCAAY,CAACY,OAAD,CAAnB;AACD;;AAEM,SAASC,yCAAT,CAA0BC,KAA1B,EAA6D;EAClE,OAAOC,MAAM,CAACC,MAAPD,CACL,EADKA,EAELD,KAAK,CAACG,MAANH,GAAe;IAAEG,MAAM,EAAEN,yCAAqB,CAACG,KAAK,CAACG,MAAP;EAA/B,CAAfH,GAAiE,IAF5DC,EAGLD,KAAK,CAACI,UAANJ,GACI;IAAEI,UAAU,EAAEP,yCAAqB,CAACG,KAAK,CAACI,UAAP;EAAnC,CADJJ,GAEI,IALCC,EAMLD,KAAK,CAACK,WAANL,GACI;IAAEK,WAAW,EAAER,yCAAqB,CAACG,KAAK,CAACK,WAAP;EAApC,CADJL,GAEI,IARCC,EASLD,KAAK,CAACM,SAANN,GACI;IAAEM,SAAS,EAAET,yCAAqB,CAACG,KAAK,CAACM,SAAP;EAAlC,CADJN,GAEI,IAXCC,EAYLD,KAAK,CAACO,YAANP,GACI;IAAEO,YAAY,EAAEV,yCAAqB,CAACG,KAAK,CAACO,YAAP;EAArC,CADJP,GAEI,IAdCC,EAeLD,KAAK,CAACQ,OAANR,GAAgB;IAAEQ,OAAO,EAAEX,yCAAqB,CAACG,KAAK,CAACQ,OAAP;EAAhC,CAAhBR,GAAoE,IAf/DC,EAgBLD,KAAK,CAACS,WAANT,GACI;IAAES,WAAW,EAAEZ,yCAAqB,CAACG,KAAK,CAACS,WAAP;EAApC,CADJT,GAEI,IAlBCC,EAmBLD,KAAK,CAACU,YAANV,GACI;IAAEU,YAAY,EAAEb,yCAAqB,CAACG,KAAK,CAACU,YAAP;EAArC,CADJV,GAEI,IArBCC,EAsBLD,KAAK,CAACW,UAANX,GACI;IAAEW,UAAU,EAAEd,yCAAqB,CAACG,KAAK,CAACW,UAAP;EAAnC,CADJX,GAEI,IAxBCC,EAyBLD,KAAK,CAACY,aAANZ,GACI;IAAEY,aAAa,EAAEf,yCAAqB,CAACG,KAAK,CAACY,aAAP;EAAtC,CADJZ,GAEI,IA3BCC,CAAP;AA6BD;;AC5CD,MAAMY,qCAAe,GAAsB,KAA3C;;AAwBO,SAASC,yCAAT,CACLd,KADK,EAEL;EACA,MAAM;aACJe,OADI;eAEJC,SAFI;YAGJb,MAHI;kBAIJI,YAJI;gBAKJH,UALI;iBAMJC,WANI;eAOJC,SAPI;aAQJE,OARI;mBASJI,aATI;iBAUJH,WAVI;kBAWJC,YAXI;gBAYJC,UAZI;YAaJM,MAbI;IAcJC,EAAE,EAAEC,OAAO,GAAGN,qCAdV;IAeJ,GAAGO;EAfC,IAgBFpB,KAhBJ;EAiBA,MAAMqB,QAAQ,GAAG;IACfL,SAAS,EAAEM,wBACTC,YAAI;eACFR;IADE,CAAJ,CADS,eAITQ,YAAI,EACF,GAAGxB,yCAAgB,CAAC;gBAClBI,MADkB;sBAElBI,YAFkB;oBAGlBH,UAHkB;qBAIlBC,WAJkB;mBAKlBC,SALkB;iBAMlBE,OANkB;uBAOlBI,aAPkB;qBAQlBH,WARkB;sBASlBC,YATkB;oBAUlBC;MAVkB,CAAD;IADjB,CAAJ,CAJS,EAkBTK,SAlBS,CADI;IAqBf,CAAC,cAAD,GAAkBC,MArBH;IAsBf,GAAGG;EAtBY,CAAjB;EAyBA,OAAO;IACLC,QAAQ,EAAEA,QADL;aAELF;EAFK,CAAP;AAID;;AAED,SAASK,0BAAT,CACExB,KADF,EAEEyB,GAFF,EAGE;EACA,MAAM;cAAEJ,QAAF;aAAYF;EAAZ,IAAwBL,yCAAM,CAAId,KAAJ,CAApC;EAEA,oBACExB,qBAAC2C,OAAD,IAAS,GAAIE,QAAb;IAAuBI,KAAKA;EAA5B,GACGzB,KAAK,CAAC0B,QADT,CADF;AAKD;;AAEDF,0BAAI,CAACG,WAALH,GAAmB,KAAnBA;AAEO,MAAMI,yCAAG,gBAGZC,kBAAiBL,0BAAjB,CAHG;ACZP,MAAMM,sCAAgB,GAAG,KAAzB;;AAEA,SAASC,2BAAT,QAuBEN,GAvBF,EAwBE;EAAA,IAvBA;cACEO,QADF;gBAEEC,UAFF;eAGEC,SAHF;kBAIEC,YAJF;UAKEC,IALF;eAMEC,SANF;gBAOEC,UAPF;mBAQEC,aARF;cASEC,QATF;cAUEC,QAVF;gBAWEC,UAXF;eAYEC,SAZF;SAaEC,GAbF;oBAcEC,cAdF;kBAeEC,YAfF;iBAgBEC,WAhBF;WAiBEC,KAjBF;cAkBEtB,QAlBF;QAmBER,EAnBF;IAoBE,GAAGE;EApBL,CAuBA;EACA,MAAM;cAAEC,QAAF;aAAYF;EAAZ,IAAwBL,yCAAM,CAAoB,EACtD,GAAGM,UADmD;IAEtDF,EAAE,EAAEA,EAAE,IAAIY;EAF4C,CAApB,CAApC;;MAgBalD;;EAZb,oBACEJ,qBAAC2C,OAAD,IACE,GAAIE,QADN;IAEEL,WAAWM,wBACTC,YAAI;MACFR,OAAO,EAAEiB,QAAQ,GAAG,aAAH,GAAmB,MADlC;MAEFiB,KAAK,EAAEN,SAAS,GAAG,MAAH,GAAYhE,SAF1B;MAGFuE,MAAM,EAAER,UAAU,GAAG,MAAH,GAAY/D,SAH5B;YAIFyD,IAJE;iBAKFC,SALE;kBAMFC,UANE;qBAOFC,aAPE;MAQFK,GAAG,EAAEhE,kCAAM,CAACgE,GAAD,CAANhE,uCAAegE,GARlB;sBASFC,cATE;oBAUFC,YAVE;mBAWFC,WAXE;kBAYFd,UAZE;iBAaFC,SAbE;oBAcFC,YAdE;aAeFa,KAfE;gBAgBFP,QAhBE;gBAiBFD;IAjBE,CAAJ,CADS,EAoBTnB,QAAQ,CAACL,SApBA,CAFb;IAwBES,KAAKA;EAxBP,GA0BGC,QA1BH,CADF;AA8BD;;AAEDK,2BAAK,CAACJ,WAANI,GAAoB,MAApBA;AAEO,MAAMoB,yCAAI,gBAGbtB,kBAAiBE,2BAAjB,CAHG;ACxGP,MAAMqB,sCAAgB,GAAG,KAAzB;;AAMA,SAASC,2BAAT,QAcE5B,GAdF,EAeE;EAAA,IAdA;kBACEU,YADF;cAEET,QAFF;IAGE4B,SAAS,GAAG,UAHd;IAIEC,OAAO,GAAG,MAJZ;UAKEC,IALF;cAMExB,QANF;oBAOEa,cAPF;IAQEY,MAAM,GAAG,MARX;IASEC,IAAI,GAAG,MATT;QAUExC,EAVF;IAWE,GAAGE;EAXL,CAcA;;EACA,MAAMuC,kBAAkB,GAAIC,KAAD,IAA6B;IACtD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EACE,OAAQ,UAASA,KAAM,mBAAvB;IAEF,OAAOA,KAAP;EAJF;;EAOA,MAAM;cAAEvC,QAAF;aAAYF;EAAZ,IAAwBL,yCAAM,CAAoB,EACtD,GAAGM,UADmD;IAEtDF,EAAE,EAAEA,EAAE,IAAIkC;EAF4C,CAApB,CAApC;MAgBmBvD,MACHA;EAZhB,oBACErB,qBAAC2C,OAAD,IACE,GAAIE,QADN;IAEEL,WAAWM,wBACTC,YAAI;MACFR,OAAO,EAAEiB,QAAQ,GAAG,aAAH,GAAmB,MADlC;MAEF6B,mBAAmB,EAAEF,kBAAkB,CAACJ,OAAD,CAFrC;MAGFO,gBAAgB,EAAEH,kBAAkB,CAACD,IAAD,CAHlC;YAIFF,IAJE;sBAKFX,cALE;oBAMFV,YANE;MAOFmB,SAAS,EAAEzD,iDAAqB,CAACyD,SAAD,CAArBzD,uCAAoC,CAP7C;MAQF4D,MAAM,EAAE5D,iDAAqB,CAAC4D,MAAD,CAArB5D,uCAAiC;IARvC,CAAJ,CADS,EAWTwB,QAAQ,CAACL,SAXA,CAFb;IAeES,KAAKA;EAfP,GAiBGC,QAjBH,CADF;AAqBD;;AAED2B,2BAAK,CAAC1B,WAAN0B,GAAoB,MAApBA;AAEO,MAAMU,yCAAI,gBAGblC,kBAAiBwB,2BAAjB,CAHG;AC9FP,MAAMW,2CAAqB,GAAG,KAA9B;;AAiCA,SAASC,+BAAT,QAWExC,GAXF,EAYE;EAAA,IAXA;cACEC,QADF;iBAEEwC,WAFF;eAGEC,SAHF;cAIEC,QAJF;YAKEC,MALF;UAMEC,IANF;WAOEtB,KAPF;IAQE,GAAG5B;EARL,CAWA;EACA,MAAMmD,cAAc,GAAGD,IAAI,GACvBA,IADuB,GAEvB,CACEF,QAAQ,IAAI,MADd,EAEEF,WAAW,IAAI,MAFjB,EAGEG,MAAM,IAAI,MAHZ,EAIEF,SAAS,IAAI,MAJf,EAKEK,IALF,CAKO,KALP,CAFJ;EASA,MAAM;cAAEnD,QAAF;aAAYF;EAAZ,IAAwBL,yCAAM,CAACM,UAAD,CAApC;EAEA,oBACE5C,qBAAC2C,OAAD,IACE,GAAIE,QADN;IAEEL,WAAWM,wBACTC,YAAI;MACFkD,QAAQ,EAAEF,cADR;aAEFvB;IAFE,CAAJ,CADS,EAKT3B,QAAQ,CAACL,SALA,CAFb;IASES,KAAKA;EATP,GAWGC,QAXH,CADF;AAeD;;AAEDuC,+BAAS,CAACtC,WAAVsC,GAAwB,UAAxBA;AAEO,MAAMS,yCAAQ,gBAGjB7C,kBAAiBoC,+BAAjB,CAHG;AC/EA,MAAMF,yCAAI,GAAGY,yCAAb;AACPZ,yCAAI,CAACa,IAALb,GAAYW,yCAAZX;ACiBA,MAAMc,uCAAiB,GAAG,KAA1B;;AAEA,SAASC,4BAAT,QAUErD,GAVF,EAWE;EAAA,IAVA;IACEc,aAAa,GAAG,KADlB;IAEEN,UAAU,GAAG,QAFf;IAGED,QAAQ,GAAG,KAHb;IAIElC,OAAO,GAAG,UAJZ;IA5BF4B,UAiCIA,QALF;IA5BFR,IAkCIA,EANF;IAOE,GAAGE;EAPL,CAUA;EACA,MAAM;IAvCRC,UAuCUA,QAAF;IAvCRF,SAuCoBA;EAAZ,IAAwBL,yCAAM,CAAoB,EACtD,GAAGM,UADmD;IAEtDF,EAAE,EAAEA,EAAE,IAAI2D;EAF4C,CAApB,CAApC;EAIA,oBACErG,qBAACuG,yCAAD,IACE,GAAI1D,QADN;IAEEH,IAAIC,OAFN;IAGEoB,eAAeA,aAHjB;IAIEN,YAAYA,UAJd;IAKED,UAAUA,QALZ;IAMEhB,WAAWK,QAAQ,CAACL,SANtB;IAOE4B,KAAK9C,OAPP;IAQE2B,KAAKA;EARP,GAUGC,QAVH,CADF;AAcD;;AAEDoD,4BAAM,CAACnD,WAAPmD,GAAqB,OAArBA;AAEO,MAAME,yCAAK,gBAGdnD,kBAAiBiD,4BAAjB,CAHG;;AC3DA,SAASG,yCAAT,GAAqB;EAC1B,OAAO;IACLC,gBAAgB,eAAE3D,WAAlB2D;MAAkB9G,eAAlB8G;MAAkB7G;IAAlB6G;EADK,CAAP;AAYD;;ACLM,MAAMC,yCAAgB,GAAG,SAMH;EAAA,IANI;cAC/BzD,QAD+B;eAE/BV,SAF+B;IAG/BC,MAAM,GAAG,wBAHsB;IAI/BC,EAAE,GAAG,KAJ0B;IAK/B,GAAGE;EAL4B,CAMJ;EAC3B,MAAM/C,MAAM,GAAG4G,yCAAS,EAAxB;EAEA,MAAM9D,OAAO,GAAsBD,EAAnC;EAEA,oBACEkE,2BAACjE,OAAD,IACE,GAAIC,UADN;IAEE,gBAAcH,MAFhB;IAGED,WAAWM,UAAGjD,MAAM,CAAC6G,gBAAV,EAA4BlE,SAA5B;EAHb,GAKGU,QALH,CADF;AAXK;;ACDA,SAAS2D,yCAAT,CAAeC,EAAf,EAA4BC,QAA5B,EAAuD;EAC5D,OAAOC,cAAO,CACZ,MAAMF,EAAE,IAAI,CAACC,QAAQ,IAAI,IAAb,EAAmBE,IAAI,CAACC,KAALD,CAAWA,IAAI,CAACE,MAALF,KAAgB,KAA3BA,CAAnB,EAAsDjB,IAAtD,CAA2D,GAA3D,CADA,EAGZ,EAHY,CAAd;AAKD;;ACHM,SAASoB,wCAAT,QAKuB;EAAA,IALO;IAZrCC,QAaEA,MADmC;IAZrCC,eAcEA,aAFmC;IAZrCC,QAeEA,MAHmC;IAZrCC,SAgBEA;EAJmC,CAKP;EAC5B,MAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BC,eAAQ,CAACL,aAAa,IAAI,KAAlB,CAAzC;EAEA,MAAMM,YAAY,GAAGP,MAAM,KAAKlH,SAAhC;EACA,MAAM0H,WAAW,GAAGD,YAAY,GAAGP,MAAH,GAAYI,WAA5C;EAEA,MAAMK,WAAW,GAAGC,kBAAW,CAAC,MAAM;IACpC,IAAI,CAACH,YAAL,EACEF,SAAS,CAAC,KAAD,CAATA;IAEFF,OAAO,SAAPA,WAAO,WAAPA,mBAAO,EAAPA;EAJ6B,GAK5B,CAACI,YAAD,EAAeJ,OAAf,CAL4B,CAA/B;EAOA,MAAMQ,UAAU,GAAGD,kBAAW,CAAC,MAAM;IACnC,IAAI,CAACH,YAAL,EACEF,SAAS,CAAC,IAAD,CAATA;IAEFH,MAAM,SAANA,UAAM,WAANA,kBAAM,EAANA;EAJ4B,GAK3B,CAACK,YAAD,EAAeL,MAAf,CAL2B,CAA9B;EAOA,OAAO;IAAEF,MAAM,EAAEQ,WAAV;IArCTD,cAqCgCA,YAAvB;IArCTE,aAqC8CA,WAArC;IArCTE,YAqC2DA;EAAlD,CAAP;AACD;;AClCM,SAASC,yCAAT,GAEiB;EAAA,kCADnBC,IACmB;IADnBA,IACmB;EAAA;;EACtB,OAAQ9C,SAAU;IAChB8C,IAAI,CAACC,OAALD,CAAcjF,OAAQ;MACpB,IAAI,OAAOA,GAAP,KAAe,UAAnB,EACEA,GAAG,CAACmC,KAAD,CAAHnC,CADF,KAEO,IAAIA,GAAG,IAAI,IAAX,EACLA,GAAI,CAAsCmF,OAA1C,GAAoDhD,KAApD;IAJJ;EADF;AASD;;ACZM,MAAMiD,yCAAqB,GAAG,SAA0C;EAAA,IAAzC;IAJtCC,QAIwCA;EAAF,CAAyC;;EAC7E,QAAQA,MAAR;IACE,KAAK,WAAL;MACE,OAAO;QACLC,KAAK,EAAEnI,0BAAM,CAACoI,cADT;QAELC,eAAe,EAAErI,0BAAM,CAACsI;MAFnB,CAAP;;IAIF,KAAK,SAAL;MACE,OAAO;QACLH,KAAK,EAAEnI,0BAAM,CAACuI,aADT;QAELF,eAAe,EAAErI,0BAAM,CAACwI;MAFnB,CAAP;;IAIF,KAAK,SAAL;IACA,KAAK,UAAL;MACE,OAAO;QACLL,KAAK,EAAEnI,0BAAM,CAACyI,YADT;QAELJ,eAAe,EAAErI,0BAAM,CAAC0I;MAFnB,CAAP;;IAIF,KAAK,OAAL;MACE,OAAO;QACLP,KAAK,EAAEnI,0BAAM,CAAC2I,eADT;QAELN,eAAe,EACb;MAHG,CAAP;;IAKF,KAAK,KAAL;MACE,OAAO;QACLF,KAAK,EAAEnI,0BAAM,CAAC4I,UADT;QAELP,eAAe,EAAErI,0BAAM,CAAC6I;MAFnB,CAAP;;IAIF;MACEC,OAAO,CAACC,IAARD,CAAc,yBAAwBZ,MAAO,EAA7CY;MACA,OAAO,EAAP;EA9BJ;AADK","names":["cssReset","name","styles","GlobalStyles","withNormalize","$aLGPd$createElement","$aLGPd$Global","css","undefined","tokens","gray800","fontStackPrimary","fontSizeM","lineHeightM","fontStackMonospace","SpacingTable","none","spacing2Xs","spacingXs","spacingS","spacingM","spacingL","spacingXl","spacing2Xl","spacing3Xl","spacing4Xl","convertSpacingToToken","spacing","getSpacingStyles","props","Object","assign","margin","marginLeft","marginRight","marginTop","marginBottom","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","BOX_DEFAULT_TAG","useBox","display","className","testId","as","Element","otherProps","boxProps","$aLGPd$cx","$aLGPd$css1","_Box","ref","children","displayName","Box","React","FLEX_DEFAULT_TAG","_Flex","isInline","alignItems","alignSelf","alignContent","flex","flexBasis","flexShrink","flexDirection","flexGrow","flexWrap","fullHeight","fullWidth","gap","justifyContent","justifyItems","justifySelf","order","width","height","Flex","GRID_DEFAULT_TAG","_Grid","columnGap","columns","flow","rowGap","rows","handleGridTemplate","value","gridTemplateColumns","gridTemplateRows","Grid","GRID_ITEM_DEFAULT_TAG","_GridItem","columnStart","columnEnd","rowStart","rowEnd","area","calculatedArea","join","gridArea","GridItem","OriginalGrid","Item","STACK_DEFAULT_TAG","_Stack","$64ffc0a56f9249d0$export$f51f4c4ede09e011","Stack","getStyles","screenReaderOnly","ScreenReaderOnly","$aLGPd$react","useId","id","modifier","useMemo","Math","round","random","useControllableState","isOpen","defaultIsOpen","onOpen","onClose","isOpenState","setIsOpen","useState","isControlled","isOpenValue","handleClose","useCallback","handleOpen","mergeRefs","refs","forEach","current","getEntityStatusStyles","status","color","colorGreenBase","backgroundColor","colorGreenLightest","colorBlueBase","colorBlueLightest","colorRedBase","colorRedLightest","colorOrangeDark","colorWhite","colorPrimary","console","warn"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/GlobalStyles/GlobalStyles.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/utils/getSpacingStyles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Box/Box.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Flex/Flex.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Grid/Grid.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Grid/GridItem/GridItem.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Grid/CompoundGrid.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/Stack/Stack.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/ScreenReaderOnly/ScreenReaderOnly.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/ScreenReaderOnly/ScreenReaderOnly.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/hooks/useId.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/hooks/useControllableState.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/utils/mergeRefs.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-core/dist/packages/core/src/utils/getEntityStatusStyles.ts"],"sourcesContent":["import * as React from 'react';\nimport { Global, css, SerializedStyles } from '@emotion/core';\nimport tokens from '@contentful/f36-tokens';\n\nconst cssReset = css`\n  /* Remove default margin */\n  body,\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  figure,\n  blockquote,\n  dl,\n  dd {\n    margin: 0;\n  }\n\n  /* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\n  ul[role='list'],\n  ol[role='list'] {\n    list-style: none;\n  }\n\n  /* Set core root defaults */\n  html:focus-within {\n    scroll-behavior: smooth;\n  }\n\n  /* Set core body defaults */\n  body {\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n  }\n\n  /* A elements that don't have a class get default styles */\n  a:not([class]) {\n    text-decoration-skip-ink: auto;\n  }\n\n  /* Make images easier to work with */\n  img,\n  picture {\n    max-width: 100%;\n    display: block;\n  }\n\n  /* Inherit fonts for inputs and buttons */\n  input,\n  button,\n  textarea,\n  select {\n    font: inherit;\n  }\n\n  /* Remove all animations and transitions for people that prefer not to see them */\n  @media (prefers-reduced-motion: reduce) {\n    html:focus-within {\n      scroll-behavior: auto;\n    }\n    *,\n    *::before,\n    *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n    }\n  }\n`;\n\nexport const GlobalStyles = ({\n  withNormalize = true,\n  styles,\n}: {\n  /**\n   * Determines if CSS reset should be used\n   *\n   * @default true\n   */\n  withNormalize?: boolean;\n  /**\n   * Extend global styles\n   *\n   * @default undefined\n   */\n  styles?: SerializedStyles;\n}) => {\n  return (\n    <Global\n      styles={css`\n        ${withNormalize ? cssReset : undefined};\n        html {\n          border: 0;\n          box-sizing: border-box;\n          margin: 0;\n          padding: 0;\n        }\n\n        body {\n          color: ${tokens.gray800};\n          font-family: ${tokens.fontStackPrimary};\n          font-size: ${tokens.fontSizeM};\n          line-height: ${tokens.lineHeightM};\n        }\n\n        code {\n          font-family: ${tokens.fontStackMonospace};\n        }\n\n        fieldset {\n          border: 0;\n          margin: 0;\n          padding: 0;\n        }\n\n        *,\n        *::after,\n        *::before {\n          -moz-osx-font-smoothing: grayscale;\n          -webkit-font-smoothing: antialiased;\n          box-sizing: inherit;\n        }\n\n        ${styles};\n      `}\n    />\n  );\n};\n","import tokens from '@contentful/f36-tokens';\nimport type { MarginProps, PaddingProps, Spacing } from '../types';\n\nconst SpacingTable: { [key in Spacing]: string | number | undefined } = {\n  none: 0,\n  spacing2Xs: tokens.spacing2Xs,\n  spacingXs: tokens.spacingXs,\n  spacingS: tokens.spacingS,\n  spacingM: tokens.spacingM,\n  spacingL: tokens.spacingL,\n  spacingXl: tokens.spacingXl,\n  spacing2Xl: tokens.spacing2Xl,\n  spacing3Xl: tokens.spacing3Xl,\n  spacing4Xl: tokens.spacing4Xl,\n};\n\nexport function convertSpacingToToken(spacing: Spacing) {\n  return SpacingTable[spacing];\n}\n\nexport function getSpacingStyles(props: MarginProps & PaddingProps) {\n  return Object.assign(\n    {},\n    props.margin ? { margin: convertSpacingToToken(props.margin) } : null,\n    props.marginLeft\n      ? { marginLeft: convertSpacingToToken(props.marginLeft) }\n      : null,\n    props.marginRight\n      ? { marginRight: convertSpacingToToken(props.marginRight) }\n      : null,\n    props.marginTop\n      ? { marginTop: convertSpacingToToken(props.marginTop) }\n      : null,\n    props.marginBottom\n      ? { marginBottom: convertSpacingToToken(props.marginBottom) }\n      : null,\n    props.padding ? { padding: convertSpacingToToken(props.padding) } : null,\n    props.paddingLeft\n      ? { paddingLeft: convertSpacingToToken(props.paddingLeft) }\n      : null,\n    props.paddingRight\n      ? { paddingRight: convertSpacingToToken(props.paddingRight) }\n      : null,\n    props.paddingTop\n      ? { paddingTop: convertSpacingToToken(props.paddingTop) }\n      : null,\n    props.paddingBottom\n      ? { paddingBottom: convertSpacingToToken(props.paddingBottom) }\n      : null,\n  );\n}\n","import * as React from 'react';\nimport * as CSS from 'csstype';\nimport { css, cx } from 'emotion';\nimport type { MarginProps, PaddingProps, CommonProps } from '../types';\nimport { getSpacingStyles } from '../utils/getSpacingStyles';\n\nconst BOX_DEFAULT_TAG: React.ElementType = 'div';\n\nimport {\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '../Primitive/Primitive';\n\nexport interface BoxInternalProps\n  extends CommonProps,\n    MarginProps,\n    PaddingProps {\n  /**\n   * Sets the display behavior of the element\n   */\n  display?: CSS.Property.Display;\n  children?: React.ReactNode;\n  as?: React.ElementType<any>;\n}\n\nexport type BoxProps<\n  E extends React.ElementType = typeof BOX_DEFAULT_TAG\n> = PolymorphicProps<BoxInternalProps, E>;\n\nexport function useBox<E extends React.ElementType = typeof BOX_DEFAULT_TAG>(\n  props: BoxProps<E>,\n) {\n  const {\n    display,\n    className,\n    margin,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    marginTop,\n    padding,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    testId,\n    as: Element = BOX_DEFAULT_TAG,\n    ...otherProps\n  } = props;\n  const boxProps = {\n    className: cx(\n      css({\n        display,\n      }),\n      css({\n        ...getSpacingStyles({\n          margin,\n          marginBottom,\n          marginLeft,\n          marginRight,\n          marginTop,\n          padding,\n          paddingBottom,\n          paddingLeft,\n          paddingRight,\n          paddingTop,\n        }),\n      }),\n      className,\n    ),\n    ['data-test-id']: testId,\n    ...otherProps,\n  };\n\n  return {\n    boxProps: boxProps,\n    Element,\n  };\n}\n\nfunction _Box<E extends React.ElementType = typeof BOX_DEFAULT_TAG>(\n  props: BoxProps<E>,\n  ref: React.Ref<any>,\n) {\n  const { boxProps, Element } = useBox<E>(props);\n\n  return (\n    <Element {...boxProps} ref={ref}>\n      {props.children}\n    </Element>\n  );\n}\n\n_Box.displayName = 'Box';\n\nexport const Box: PolymorphicComponent<\n  ExpandProps<BoxInternalProps>,\n  typeof BOX_DEFAULT_TAG\n> = React.forwardRef(_Box);\n","import * as React from 'react';\nimport { css, cx } from 'emotion';\nimport {\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '../Primitive/Primitive';\nimport { useBox } from '../Box';\nimport type { MarginProps, PaddingProps, CommonProps, Spacing } from '../types';\nimport type * as CSS from 'csstype';\nimport tokens from '@contentful/f36-tokens';\n\nexport interface FlexInternalProps\n  extends CommonProps,\n    MarginProps,\n    PaddingProps {\n  /**\n   * Child nodes to be rendered in the component */\n  children?: React.ReactNode;\n  /**\n   * Sets width: 100% */\n  fullWidth?: boolean;\n  /**\n   * Sets height: 100% */\n  fullHeight?: boolean;\n\n  /**\n   * Sets display: inline-flex */\n  isInline?: boolean;\n\n  /**\n   * A shorthand property for flex-grow, flex-shrink, flex-basis\n   */\n  flex?: CSS.Property.Flex;\n  /**\n   * Defines the initial size of a flexbox item.\n   * */\n  flexBasis?: CSS.Property.FlexBasis;\n  /**\n   * Defines how much a flexbox item should shrink if there's not enough space available. */\n  flexShrink?: CSS.Property.FlexShrink;\n  /**\n   * Defines if flexbox items appear on a single line or on multiple lines within a flexbox container. */\n  flexWrap?: CSS.Property.FlexWrap;\n  /**\n   * Defines how flexbox items are ordered within a flexbox container. */\n  flexDirection?: CSS.Property.FlexDirection;\n  /**\n   * Defines how much a flexbox item should grow if there's space available. */\n  flexGrow?: CSS.Property.FlexGrow;\n  /**\n   * Defines a gap between flexbox items. */\n  gap?: Spacing | string;\n  /**\n   * Defines how flexbox/grid items are aligned according to the main axis, within a flexbox/grid container. */\n  justifyContent?: CSS.Property.JustifyContent;\n  /**\n   * Defines the default justify-self for all items of the box, giving them all a default way of justifying each box along the appropriate axis. */\n  justifyItems?: CSS.Property.JustifyContent;\n  /**\n   * Sets the way a box is justified inside its alignment container along the appropriate axis. */\n  justifySelf?: CSS.Property.JustifySelf;\n  /**\n   * Defines how flexbox items are aligned according to the cross axis, within a line of a flexbox container.\n   */\n  alignItems?: CSS.Property.AlignItems;\n  /**\n   * Works like align-items, but applies only to a single flexbox item, instead of all of them.\n   */\n  alignSelf?: CSS.Property.AlignItems;\n  /**\n   * Defines how each line is aligned within a flexbox/grid container.\n   */\n  alignContent?: CSS.Property.AlignContent;\n  /**\n   * Defines the order of a flexbox item\n   */\n  order?: CSS.Property.Order;\n}\n\nexport type FlexProps<\n  E extends React.ElementType = typeof FLEX_DEFAULT_TAG\n> = PolymorphicProps<FlexInternalProps, E>;\n\nconst FLEX_DEFAULT_TAG = 'div';\n\nfunction _Flex<E extends React.ElementType = typeof FLEX_DEFAULT_TAG>(\n  {\n    isInline,\n    alignItems,\n    alignSelf,\n    alignContent,\n    flex,\n    flexBasis,\n    flexShrink,\n    flexDirection,\n    flexGrow,\n    flexWrap,\n    fullHeight,\n    fullWidth,\n    gap,\n    justifyContent,\n    justifyItems,\n    justifySelf,\n    order,\n    children,\n    as,\n    ...otherProps\n  }: FlexProps<E>,\n  ref: React.Ref<any>,\n) {\n  const { boxProps, Element } = useBox<React.ElementType>({\n    ...otherProps,\n    as: as || FLEX_DEFAULT_TAG,\n  });\n  return (\n    <Element\n      {...boxProps}\n      className={cx(\n        css({\n          display: isInline ? 'inline-flex' : 'flex',\n          width: fullWidth ? '100%' : undefined,\n          height: fullHeight ? '100%' : undefined,\n          flex,\n          flexBasis,\n          flexShrink,\n          flexDirection,\n          gap: tokens[gap] ?? gap,\n          justifyContent,\n          justifyItems,\n          justifySelf,\n          alignItems,\n          alignSelf,\n          alignContent,\n          order,\n          flexWrap,\n          flexGrow,\n        }),\n        boxProps.className,\n      )}\n      ref={ref}\n    >\n      {children}\n    </Element>\n  );\n}\n\n_Flex.displayName = 'Flex';\n\nexport const Flex: PolymorphicComponent<\n  ExpandProps<FlexInternalProps>,\n  typeof FLEX_DEFAULT_TAG\n> = React.forwardRef(_Flex);\n","import * as React from 'react';\nimport { css, cx } from 'emotion';\nimport {\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '../Primitive/Primitive';\nimport { useBox } from '../Box';\nimport type * as CSS from 'csstype';\nimport type { MarginProps, PaddingProps, CommonProps, Spacing } from '../types';\nimport { convertSpacingToToken } from '../utils/getSpacingStyles';\n\nexport interface GridInternalProps\n  extends CommonProps,\n    MarginProps,\n    PaddingProps {\n  /**\n   * Child nodes to be rendered in the component */\n  children?: React.ReactNode;\n  /**\n   * Defines how many columns, default is `auto` */\n  columns?: number | CSS.Property.GridTemplateColumns;\n  /**\n   * Defines how many rows, default is `auto` */\n  rows?: number | CSS.Property.GridTemplateColumns;\n  /**\n   * Spaces between rows, corresponds to of spacing tokens values, default is none */\n  rowGap?: Spacing;\n  /**\n   * One of Spacing tokens values, default is 0 */\n  columnGap?: Spacing;\n  /**\n   * One of grid-auto-flow css values */\n  flow?: CSS.Property.GridAutoFlow;\n  /**\n   * Sets display:inline-grid */\n  isInline?: boolean;\n  /**\n   * One of justify-content css values */\n  justifyContent?: CSS.Property.JustifyContent;\n  /**\n   * One of justify-content css values */\n  alignContent?: CSS.Property.AlignContent;\n}\n\nconst GRID_DEFAULT_TAG = 'div';\n\nexport type GridProps<\n  E extends React.ElementType = typeof GRID_DEFAULT_TAG\n> = PolymorphicProps<GridInternalProps, E>;\n\nfunction _Grid<E extends React.ElementType = typeof GRID_DEFAULT_TAG>(\n  {\n    alignContent,\n    children,\n    columnGap = 'spacingM',\n    columns = 'auto',\n    flow,\n    isInline,\n    justifyContent,\n    rowGap = 'none',\n    rows = 'auto',\n    as,\n    ...otherProps\n  }: GridProps<E>,\n  ref: React.Ref<any>,\n) {\n  const handleGridTemplate = (value?: string | number) => {\n    if (typeof value === 'number') {\n      return `repeat(${value}, minmax(0, 1fr))`;\n    }\n    return value;\n  };\n\n  const { boxProps, Element } = useBox<React.ElementType>({\n    ...otherProps,\n    as: as || GRID_DEFAULT_TAG,\n  });\n\n  return (\n    <Element\n      {...boxProps}\n      className={cx(\n        css({\n          display: isInline ? 'inline-grid' : 'grid',\n          gridTemplateColumns: handleGridTemplate(columns),\n          gridTemplateRows: handleGridTemplate(rows),\n          flow,\n          justifyContent,\n          alignContent,\n          columnGap: convertSpacingToToken(columnGap) ?? 0,\n          rowGap: convertSpacingToToken(rowGap) ?? 0,\n        }),\n        boxProps.className,\n      )}\n      ref={ref}\n    >\n      {children}\n    </Element>\n  );\n}\n\n_Grid.displayName = 'Grid';\n\nexport const Grid: PolymorphicComponent<\n  ExpandProps<GridInternalProps>,\n  typeof GRID_DEFAULT_TAG\n> = React.forwardRef(_Grid);\n","import * as React from 'react';\nimport { css, cx } from 'emotion';\nimport {\n  PolymorphicProps,\n  PolymorphicComponent,\n} from '../../Primitive/Primitive';\nimport { useBox } from '../../Box';\nimport type { MarginProps, PaddingProps, CommonProps } from '../../types';\nimport type * as CSS from 'csstype';\n\nconst GRID_ITEM_DEFAULT_TAG = 'div';\n\nexport interface GridItemInternalProps\n  extends CommonProps,\n    MarginProps,\n    PaddingProps {\n  /**\n   * Child nodes to be rendered in the component */\n  children?: React.ReactNode;\n  /**\n   * one of grid-column-start css values */\n  columnStart?: CSS.Property.GridColumnStart;\n  /**\n   * one of grid-column-end css values */\n  columnEnd?: CSS.Property.GridColumnEnd;\n  /**\n   * one of grid-column-start css values */\n  rowStart?: CSS.Property.GridRowStart;\n  /**\n   * one of grid-row-end css values */\n  rowEnd?: CSS.Property.GridRowEnd;\n  /**\n   * one of grid-area css values */\n  area?: CSS.Property.GridArea;\n  /**\n   * order css property */\n  order?: number;\n}\n\nexport type GridItemProps<\n  E extends React.ElementType = typeof GRID_ITEM_DEFAULT_TAG\n> = PolymorphicProps<GridItemInternalProps, E>;\n\nfunction _GridItem<E extends React.ElementType = typeof GRID_ITEM_DEFAULT_TAG>(\n  {\n    children,\n    columnStart,\n    columnEnd,\n    rowStart,\n    rowEnd,\n    area,\n    order,\n    ...otherProps\n  }: GridItemProps<E>,\n  ref: React.Ref<any>,\n) {\n  const calculatedArea = area\n    ? area\n    : [\n        rowStart || 'auto',\n        columnStart || 'auto',\n        rowEnd || 'auto',\n        columnEnd || 'auto',\n      ].join(' / ');\n\n  const { boxProps, Element } = useBox(otherProps);\n\n  return (\n    <Element\n      {...boxProps}\n      className={cx(\n        css({\n          gridArea: calculatedArea,\n          order,\n        }),\n        boxProps.className,\n      )}\n      ref={ref}\n    >\n      {children}\n    </Element>\n  );\n}\n\n_GridItem.displayName = 'GridItem';\n\nexport const GridItem: PolymorphicComponent<\n  GridItemInternalProps,\n  typeof GRID_ITEM_DEFAULT_TAG\n> = React.forwardRef(_GridItem);\n","import { Grid as OriginalGrid } from './Grid';\nimport { GridItem } from './GridItem/GridItem';\n\ntype CompoundGrid = typeof OriginalGrid & {\n  Item: typeof GridItem;\n};\n\nexport const Grid = OriginalGrid as CompoundGrid;\nGrid.Item = GridItem;\n","import * as React from 'react';\nimport {\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '../Primitive/Primitive';\nimport { useBox } from '../Box';\nimport type { Spacing } from '../types';\nimport { Flex, FlexInternalProps } from '../Flex/Flex';\n\nexport interface StackInternalProps\n  extends Omit<FlexInternalProps, 'flexDirection' | 'gap'> {\n  /**\n   * Defines how flexbox items are ordered within a flexbox container. */\n  flexDirection?: 'row' | 'column';\n  /**\n   * The space between each stack item\n   */\n  spacing?: Spacing;\n}\n\nexport type StackProps<\n  E extends React.ElementType = typeof STACK_DEFAULT_TAG\n> = PolymorphicProps<StackInternalProps, E>;\n\nconst STACK_DEFAULT_TAG = 'div';\n\nfunction _Stack<E extends React.ElementType = typeof STACK_DEFAULT_TAG>(\n  {\n    flexDirection = 'row',\n    alignItems = 'center',\n    isInline = false,\n    spacing = 'spacingM',\n    children,\n    as,\n    ...otherProps\n  }: StackProps<E>,\n  ref: React.Ref<any>,\n) {\n  const { boxProps, Element } = useBox<React.ElementType>({\n    ...otherProps,\n    as: as || STACK_DEFAULT_TAG,\n  });\n  return (\n    <Flex\n      {...boxProps}\n      as={Element}\n      flexDirection={flexDirection}\n      alignItems={alignItems}\n      isInline={isInline}\n      className={boxProps.className}\n      gap={spacing}\n      ref={ref}\n    >\n      {children}\n    </Flex>\n  );\n}\n\n_Stack.displayName = 'Stack';\n\nexport const Stack: PolymorphicComponent<\n  ExpandProps<StackInternalProps>,\n  typeof STACK_DEFAULT_TAG\n> = React.forwardRef(_Stack);\n","import { css } from 'emotion';\n\nexport function getStyles() {\n  return {\n    screenReaderOnly: css({\n      position: 'absolute',\n      width: '1px',\n      height: '1px',\n      padding: 0,\n      margin: '-1px',\n      overflow: 'hidden',\n      clip: 'rect(0, 0, 0, 0)',\n      border: 0,\n    }),\n  };\n}\n","import { cx } from 'emotion';\nimport React from 'react';\nimport { getStyles } from './ScreenReaderOnly.styles';\nimport type { CommonProps } from '../types';\n\nexport interface ScreenReaderOnlyProps extends CommonProps {\n  children?: React.ReactNode;\n  as?: 'div' | 'span';\n}\n\nexport const ScreenReaderOnly = ({\n  children,\n  className,\n  testId = 'cf-ui-ScreenReaderOnly',\n  as = 'div',\n  ...otherProps\n}: ScreenReaderOnlyProps) => {\n  const styles = getStyles();\n\n  const Element: React.ElementType = as;\n\n  return (\n    <Element\n      {...otherProps}\n      data-test-id={testId}\n      className={cx(styles.screenReaderOnly, className)}\n    >\n      {children}\n    </Element>\n  );\n};\n","import { useMemo } from 'react';\n\n/**\n * useId hook provides unique ids for react elements.\n *\n * @param id - an id, provided to a component's props. Can be undefined.\n * @param modifier - a descriptive string, to make ids more readable.\n * @returns a unique id\n */\nexport function useId(id?: string, modifier?: string): string {\n  return useMemo(\n    () => id || [modifier || 'id', Math.round(Math.random() * 10000)].join('_'),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n}\n","import { useState, useCallback } from 'react';\n\nexport type UseControllableStateProps = {\n  isOpen: boolean;\n  defaultIsOpen?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n};\n\n/**\n * Hook that manages the controlled and un-controlled state\n */\nexport function useControllableState({\n  isOpen,\n  defaultIsOpen,\n  onOpen,\n  onClose,\n}: UseControllableStateProps) {\n  const [isOpenState, setIsOpen] = useState(defaultIsOpen || false);\n\n  const isControlled = isOpen !== undefined;\n  const isOpenValue = isControlled ? isOpen : isOpenState;\n\n  const handleClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClose?.();\n  }, [isControlled, onClose]);\n\n  const handleOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpen?.();\n  }, [isControlled, onOpen]);\n\n  return { isOpen: isOpenValue, isControlled, handleClose, handleOpen };\n}\n","import React from 'react';\n\ntype ReactRef<T> = React.Ref<T> | React.MutableRefObject<T>;\n\nexport function mergeRefs<T>(\n  ...refs: Array<ReactRef<T> | undefined>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import tokens from '@contentful/f36-tokens';\n\nimport type { EntityStatus } from '../types';\n\nexport const getEntityStatusStyles = ({ status }: { status: EntityStatus }) => {\n  switch (status) {\n    case 'published':\n      return {\n        color: tokens.colorGreenBase,\n        backgroundColor: tokens.colorGreenLightest,\n      };\n    case 'changed':\n      return {\n        color: tokens.colorBlueBase,\n        backgroundColor: tokens.colorBlueLightest,\n      };\n    case 'deleted':\n    case 'archived':\n      return {\n        color: tokens.colorRedBase,\n        backgroundColor: tokens.colorRedLightest,\n      };\n    case 'draft':\n      return {\n        color: tokens.colorOrangeDark,\n        backgroundColor:\n          '#ffefd5' /* temporary hardcoded value until palette improvements */,\n      };\n    case 'new':\n      return {\n        color: tokens.colorWhite,\n        backgroundColor: tokens.colorPrimary,\n      };\n    default:\n      console.warn(`Unknown EntityStatus: ${status}`);\n      return {};\n  }\n};\n"]},"metadata":{},"sourceType":"module"}