{"ast":null,"code":"import { cx as $qeOF0$cx, css as $qeOF0$css } from \"emotion\";\nimport $qeOF0$react from \"react\";\nimport $qeOF0$contentfulf36tokens from \"@contentful/f36-tokens\";\nimport { EntityStatusBadge as $qeOF0$EntityStatusBadge } from \"@contentful/f36-badge\";\nimport { AssetIcon as $qeOF0$AssetIcon, EntryIcon as $qeOF0$EntryIcon, ReleaseIcon as $qeOF0$ReleaseIcon, MoreHorizontalIcon as $qeOF0$MoreHorizontalIcon } from \"@contentful/f36-icons\";\nimport { Icon as $qeOF0$Icon } from \"@contentful/f36-icon\";\nimport { Text as $qeOF0$Text } from \"@contentful/f36-typography\";\nimport { DragHandle as $qeOF0$DragHandle } from \"@contentful/f36-drag-handle\";\nimport { Button as $qeOF0$Button } from \"@contentful/f36-button\";\nimport { Menu as $qeOF0$Menu } from \"@contentful/f36-menu\";\nimport { SkeletonContainer as $qeOF0$SkeletonContainer, SkeletonImage as $qeOF0$SkeletonImage, SkeletonBodyText as $qeOF0$SkeletonBodyText } from \"@contentful/f36-skeleton\";\nimport { Flex as $qeOF0$Flex, Box as $qeOF0$Box } from \"@contentful/f36-core\";\n\nconst $32a4ed8cc58cbd41$export$2b0a239870ba448d = () => ({\n  root: /*#__PURE__*/$qeOF0$css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    border: `1px solid ${$qeOF0$contentfulf36tokens.gray200}`,\n    borderBottom: 'none',\n    borderRadius: $qeOF0$contentfulf36tokens.borderRadiusMedium,\n    overflow: 'hidden'\n  })\n});\n\nfunction $3382b9e83b849fa7$var$_EntityList(props, ref) {\n  const styles = $32a4ed8cc58cbd41$export$2b0a239870ba448d();\n  return /*#__PURE__*/$qeOF0$react.createElement(\"ul\", {\n    \"data-test-id\": props.testId || 'cf-ui-entity-list',\n    ref: ref,\n    className: $qeOF0$cx(styles.root, props.className),\n    style: props.style\n  }, props.children);\n}\n\n$3382b9e83b849fa7$var$_EntityList.displayName = 'EntityList';\nconst $3382b9e83b849fa7$export$8bb466c13870163e = /*#__PURE__*/$qeOF0$react.forwardRef($3382b9e83b849fa7$var$_EntityList);\n\nconst $7cd3138fd5d2efdd$export$3bb342229d68a121 = () => ({\n  root: props => /*#__PURE__*/$qeOF0$css({\n    display: 'flex',\n    boxShadow: `inset 0 -1px 0 ${$qeOF0$contentfulf36tokens.gray200}`,\n    position: 'relative',\n    transition: `${$qeOF0$contentfulf36tokens.transitionDurationShort} ${$qeOF0$contentfulf36tokens.transitionEasingDefault}`,\n    transitionProperty: 'box-shadow, background-color',\n    backgroundColor: $qeOF0$contentfulf36tokens.colorWhite,\n    ...(props.isDragActive ? {\n      boxShadow: $qeOF0$contentfulf36tokens.boxShadowHeavy\n    } : {}),\n    '&:hover': {\n      backgroundColor: $qeOF0$contentfulf36tokens.gray100\n    }\n  }),\n  card: /*#__PURE__*/$qeOF0$css({\n    display: 'flex',\n    textDecoration: 'none',\n    width: '100%',\n    minHeight: $qeOF0$contentfulf36tokens.spacing3Xl,\n    padding: $qeOF0$contentfulf36tokens.spacingXs,\n    border: 'none',\n    background: 'none',\n    textAlign: 'left'\n  }),\n  content: /*#__PURE__*/$qeOF0$css({\n    name: \"15ync0s\",\n    styles: \"flex-grow:1;min-width:0;\"\n  }),\n  media: /*#__PURE__*/$qeOF0$css({\n    display: 'flex',\n    flexShrink: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: $qeOF0$contentfulf36tokens.gray200,\n    width: $qeOF0$contentfulf36tokens.spacing2Xl,\n    height: $qeOF0$contentfulf36tokens.spacing2Xl,\n    margin: '0',\n    marginRight: $qeOF0$contentfulf36tokens.spacingXs\n  }),\n  thumbnail: /*#__PURE__*/$qeOF0$css({\n    name: \"12qah06\",\n    styles: \"display:block;width:100%;height:100%;object-fit:cover;\"\n  }),\n  contentType: /*#__PURE__*/$qeOF0$css({\n    marginLeft: $qeOF0$contentfulf36tokens.spacingXs\n  }),\n  description: /*#__PURE__*/$qeOF0$css({\n    marginTop: $qeOF0$contentfulf36tokens.spacing2Xs\n  }),\n  meta: /*#__PURE__*/$qeOF0$css({\n    name: \"1n0gfod\",\n    styles: \"margin-left:auto;flex-shrink:0;\"\n  }),\n  dragHandle: /*#__PURE__*/$qeOF0$css({\n    borderBottomLeftRadius: '0',\n    borderTopLeftRadius: '0',\n    boxShadow: `inset 0 -1px 0 ${$qeOF0$contentfulf36tokens.gray200}`\n  }),\n  menuTrigger: /*#__PURE__*/$qeOF0$css({\n    name: \"c1v07n\",\n    styles: \"padding:0 0.125rem;min-height:1.5rem;\"\n  })\n});\n\nconst $b8d6b7ec5fedd0fe$var$ICON_MAP = {\n  asset: $qeOF0$AssetIcon,\n  entry: $qeOF0$EntryIcon,\n  release: $qeOF0$ReleaseIcon\n};\n\nconst $b8d6b7ec5fedd0fe$export$65b9c70c5f42a158 = _ref => {\n  let {\n    className: className,\n    testId = 'cf-ui-entity-list-item',\n    title: title,\n    description: description,\n    contentType: contentType,\n    entityType = 'entry',\n    withThumbnail = true,\n    thumbnailUrl: thumbnailUrl,\n    thumbnailAltText: thumbnailAltText,\n    status: status,\n    actions: actions,\n    withDragHandle: withDragHandle,\n    isDragActive: isDragActive,\n    isLoading: isLoading,\n    onClick: onClick,\n    href: href,\n    cardDragHandleProps: cardDragHandleProps,\n    cardDragHandleComponent: cardDragHandleComponent,\n    isActionsDisabled = false,\n    ...otherProps\n  } = _ref;\n  const styles = $7cd3138fd5d2efdd$export$3bb342229d68a121();\n\n  const renderCardDragHandle = () => {\n    if (cardDragHandleComponent) return cardDragHandleComponent;else if (withDragHandle) return /*#__PURE__*/$qeOF0$react.createElement($qeOF0$DragHandle, {\n      className: styles.dragHandle,\n      isActive: isDragActive,\n      label: \"Reorder entry\",\n      ...cardDragHandleProps\n    });\n  };\n\n  let Element = 'article';\n  if (href || onClick) Element = href ? 'a' : 'button'; // archived assets will not be available on the CDN, resulting in a broken image src\n\n  const isArchived = status === 'archived';\n  const asIcon = isArchived || !thumbnailUrl;\n  return /*#__PURE__*/$qeOF0$react.createElement(\"li\", { ...otherProps,\n    className: $qeOF0$cx(styles.root({\n      isDragActive: isDragActive\n    }), className),\n    \"data-test-id\": testId\n  }, renderCardDragHandle(), isLoading ? /*#__PURE__*/$qeOF0$react.createElement(\"article\", {\n    className: styles.card\n  }, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$SkeletonContainer, {\n    clipId: \"f36-entity-list-item-skeleton\"\n  }, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$SkeletonImage, {\n    height: 46,\n    width: 46\n  }), /*#__PURE__*/$qeOF0$react.createElement($qeOF0$SkeletonBodyText, {\n    numberOfLines: 2,\n    lineHeight: 18,\n    offsetLeft: 54\n  }))) : /*#__PURE__*/$qeOF0$react.createElement(Element, {\n    className: styles.card,\n    onClick: onClick,\n    href: href,\n    type: Element === 'button' ? 'button' : undefined,\n    target: href ? '_blank' : undefined\n  }, withThumbnail && /*#__PURE__*/$qeOF0$react.createElement(\"figure\", {\n    className: styles.media\n  }, asIcon ? /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Icon, {\n    as: $b8d6b7ec5fedd0fe$var$ICON_MAP[entityType.toLowerCase()],\n    variant: \"muted\"\n  }) : /*#__PURE__*/$qeOF0$react.createElement(\"img\", {\n    src: thumbnailUrl,\n    className: styles.thumbnail,\n    alt: thumbnailAltText\n  })), /*#__PURE__*/$qeOF0$react.createElement(\"div\", {\n    className: styles.content\n  }, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Flex, null, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Text, {\n    as: \"h3\",\n    lineHeight: \"lineHeightM\",\n    fontColor: \"gray900\",\n    fontWeight: \"fontWeightDemiBold\",\n    isTruncated: true\n  }, title), contentType && /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Text, {\n    as: \"span\",\n    lineHeight: \"lineHeightM\",\n    fontColor: \"gray600\",\n    className: styles.contentType,\n    isTruncated: true\n  }, \"(\", contentType, \")\")), description && /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Text, {\n    as: \"p\",\n    lineHeight: \"lineHeightM\",\n    fontColor: \"gray900\",\n    isTruncated: true,\n    className: styles.description\n  }, description)), /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Flex, {\n    className: styles.meta,\n    alignItems: \"flex-start\",\n    paddingLeft: \"spacingXs\"\n  }, status && /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Box, {\n    marginRight: actions ? 'spacingXs' : 'none'\n  }, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$EntityStatusBadge, {\n    entityStatus: status\n  })), actions && /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Menu, null, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Menu.Trigger, null, /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Button, {\n    isDisabled: isActionsDisabled,\n    startIcon: /*#__PURE__*/$qeOF0$react.createElement($qeOF0$MoreHorizontalIcon, null),\n    variant: \"transparent\",\n    \"aria-label\": \"Actions\",\n    size: \"small\",\n    className: styles.menuTrigger\n  })), /*#__PURE__*/$qeOF0$react.createElement($qeOF0$Menu.List, null, actions)))));\n};\n\n$b8d6b7ec5fedd0fe$export$65b9c70c5f42a158.displayName = 'EntityListItem';\nconst $bbd0ee2d7d3132a2$export$8bb466c13870163e = $3382b9e83b849fa7$export$8bb466c13870163e;\n$bbd0ee2d7d3132a2$export$8bb466c13870163e.Item = $b8d6b7ec5fedd0fe$export$65b9c70c5f42a158;\nexport { $bbd0ee2d7d3132a2$export$8bb466c13870163e as EntityList, $b8d6b7ec5fedd0fe$export$65b9c70c5f42a158 as EntityListItem };","map":{"version":3,"mappings":"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","names":["getEntityListStyles","root","$qeOF0$css","display","listStyle","margin","padding","border","tokens","gray200","borderBottom","borderRadius","borderRadiusMedium","overflow","_EntityList","props","ref","styles","$qeOF0$react","testId","className","$qeOF0$cx","style","children","displayName","EntityList","React","forwardRef","getEntityListItemStyles","boxShadow","position","transition","transitionDurationShort","transitionEasingDefault","transitionProperty","backgroundColor","colorWhite","isDragActive","boxShadowHeavy","gray100","card","textDecoration","width","minHeight","spacing3Xl","spacingXs","background","textAlign","content","name","media","flexShrink","alignItems","justifyContent","spacing2Xl","height","marginRight","thumbnail","contentType","marginLeft","description","marginTop","spacing2Xs","meta","dragHandle","borderBottomLeftRadius","borderTopLeftRadius","menuTrigger","ICON_MAP","asset","AssetIcon","entry","EntryIcon","release","ReleaseIcon","EntityListItem","title","entityType","withThumbnail","thumbnailUrl","thumbnailAltText","status","actions","withDragHandle","isLoading","onClick","href","cardDragHandleProps","cardDragHandleComponent","isActionsDisabled","otherProps","renderCardDragHandle","$qeOF0$DragHandle","isActive","label","Element","isArchived","asIcon","$qeOF0$SkeletonContainer","clipId","$qeOF0$SkeletonImage","$qeOF0$SkeletonBodyText","numberOfLines","lineHeight","offsetLeft","type","undefined","target","$qeOF0$Icon","as","toLowerCase","variant","src","alt","$qeOF0$Flex","$qeOF0$Text","fontColor","fontWeight","isTruncated","paddingLeft","$qeOF0$Box","$qeOF0$EntityStatusBadge","entityStatus","$qeOF0$Menu","Trigger","$qeOF0$Button","isDisabled","startIcon","$qeOF0$MoreHorizontalIcon","size","List","OriginalEntityList","Item"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-entity-list/dist/packages/components/entity-list/src/EntityList.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-entity-list/dist/packages/components/entity-list/src/EntityList.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-entity-list/dist/packages/components/entity-list/src/EntityListItem/EntityListItem.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-entity-list/dist/packages/components/entity-list/src/EntityListItem/EntityListItem.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-entity-list/dist/packages/components/entity-list/src/CompoundEntityList.tsx"],"sourcesContent":["import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getEntityListStyles = () => ({\n  root: css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    border: `1px solid ${tokens.gray200}`,\n    borderBottom: 'none',\n    borderRadius: tokens.borderRadiusMedium,\n    overflow: 'hidden',\n  }),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\n\nimport { getEntityListStyles } from './EntityList.styles';\n\nexport interface EntityListProps extends CommonProps {\n  children?: React.ReactNode;\n}\n\nfunction _EntityList(\n  props: ExpandProps<EntityListProps>,\n  ref: React.Ref<HTMLUListElement>,\n) {\n  const styles = getEntityListStyles();\n\n  return (\n    <ul\n      data-test-id={props.testId || 'cf-ui-entity-list'}\n      ref={ref}\n      className={cx(styles.root, props.className)}\n      style={props.style}\n    >\n      {props.children}\n    </ul>\n  );\n}\n\n_EntityList.displayName = 'EntityList';\n\nexport const EntityList = React.forwardRef(_EntityList);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { EntityListItemProps } from './EntityListItem';\n\nexport const getEntityListItemStyles = () => ({\n  root: (props: Pick<EntityListItemProps, 'isDragActive'>) =>\n    css({\n      display: 'flex',\n      boxShadow: `inset 0 -1px 0 ${tokens.gray200}`,\n      position: 'relative',\n      transition: `${tokens.transitionDurationShort} ${tokens.transitionEasingDefault}`,\n      transitionProperty: 'box-shadow, background-color',\n      backgroundColor: tokens.colorWhite,\n      ...(props.isDragActive\n        ? {\n            boxShadow: tokens.boxShadowHeavy,\n          }\n        : {}),\n\n      '&:hover': {\n        backgroundColor: tokens.gray100,\n      },\n    }),\n  card: css({\n    display: 'flex',\n    textDecoration: 'none',\n    width: '100%',\n    minHeight: tokens.spacing3Xl,\n    padding: tokens.spacingXs,\n    border: 'none',\n    background: 'none',\n    textAlign: 'left',\n  }),\n  content: css({\n    flexGrow: 1,\n    minWidth: 0,\n  }),\n  media: css({\n    display: 'flex',\n    flexShrink: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: tokens.gray200,\n    width: tokens.spacing2Xl,\n    height: tokens.spacing2Xl,\n    margin: '0',\n    marginRight: tokens.spacingXs,\n  }),\n  thumbnail: css({\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  }),\n  contentType: css({\n    marginLeft: tokens.spacingXs,\n  }),\n  description: css({\n    marginTop: tokens.spacing2Xs,\n  }),\n  meta: css({\n    marginLeft: 'auto',\n    flexShrink: 0,\n  }),\n  dragHandle: css({\n    borderBottomLeftRadius: '0',\n    borderTopLeftRadius: '0',\n    boxShadow: `inset 0 -1px 0 ${tokens.gray200}`,\n  }),\n  menuTrigger: css({\n    padding: '0 0.125rem',\n    minHeight: '1.5rem',\n  }),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { MouseEventHandler } from 'react';\n\nimport { EntityStatusBadge } from '@contentful/f36-badge';\nimport type {\n  CommonProps,\n  EntityStatus,\n  PickUnion,\n} from '@contentful/f36-core';\nimport {\n  AssetIcon,\n  EntryIcon,\n  ReleaseIcon,\n  MoreHorizontalIcon,\n} from '@contentful/f36-icons';\nimport { Icon } from '@contentful/f36-icon';\nimport { Text } from '@contentful/f36-typography';\nimport { DragHandle } from '@contentful/f36-drag-handle';\nimport type { DragHandleProps } from '@contentful/f36-drag-handle';\nimport { Button } from '@contentful/f36-button';\nimport { Menu } from '@contentful/f36-menu';\n\nimport { getEntityListItemStyles } from './EntityListItem.styles';\n\nimport {\n  SkeletonBodyText,\n  SkeletonContainer,\n  SkeletonImage,\n} from '@contentful/f36-skeleton';\nimport { Flex, Box } from '@contentful/f36-core';\n\ntype EntityListItemStatus = PickUnion<\n  EntityStatus,\n  'archived' | 'changed' | 'draft' | 'published'\n>;\n\nconst ICON_MAP = {\n  asset: AssetIcon,\n  entry: EntryIcon,\n  release: ReleaseIcon,\n};\n\nexport interface EntityListItemProps extends CommonProps {\n  /**\n   * The title of the entity\n   */\n  title: string;\n  /**\n   * The description of the entity\n   */\n  description?: string;\n  /**\n   * The content type of the entity\n   */\n  contentType?: string;\n  /**\n   * The publish status of the entry\n   */\n  status?: EntityListItemStatus;\n  /**\n   * A boolean used to render the Thumbnail or not\n   */\n  withThumbnail?: boolean;\n  /**\n   * The URL of the entity's preview thumbnail. Use 46px x 46px images for best results\n   */\n  thumbnailUrl?: string;\n  /**\n   * The alt text for the thumbnail\n   */\n  thumbnailAltText?: string;\n  /**\n   * Menu elements rendered as actions in Menu\n   */\n  actions?: React.ReactNodeArray;\n  /**\n   * Renders a drag handle for the component for use in drag and drop contexts\n   */\n  withDragHandle?: boolean;\n  /**\n   * Applies styling for when the component is actively being dragged by the user\n   */\n  isDragActive?: boolean;\n  /**\n   * Prop to pass a custom CardDragHandle component to for use in drag and drop contexts\n   */\n  cardDragHandleComponent?: React.ReactNode;\n  /**\n   * Props to pass down to the default CardDragHandle component (does not work with cardDragHandleComponent prop)\n   */\n  cardDragHandleProps?: Partial<DragHandleProps>;\n  /**\n   * An entity can either be an Entry, an Asset or a Release. This prop will apply styling based on if the entity is an asset, a release or an entry\n   *\n   * Note: 'entry' and 'asset' are @deprecated but supported in v1.x for backwards compatibility\n   */\n  entityType?: 'Entry' | 'Asset' | 'entry' | 'asset' | 'Release';\n  /**\n   * Loading state for the component - when true will display loading feedback to the user\n   */\n  isLoading?: boolean;\n  /**\n   * The action to be performed on click of the EntryCard\n   */\n  onClick?: MouseEventHandler;\n  /**\n   * The href for the component. Will render the card as an `a` element for native browser link handling\n   */\n  href?: string;\n  /**\n   * A boolean used to disable the CardActions\n   */\n  isActionsDisabled?: boolean;\n}\n\nexport const EntityListItem = ({\n  className,\n  testId = 'cf-ui-entity-list-item',\n  title,\n  description,\n  contentType,\n  entityType = 'entry',\n  withThumbnail = true,\n  thumbnailUrl,\n  thumbnailAltText,\n  status,\n  actions,\n  withDragHandle,\n  isDragActive,\n  isLoading,\n  onClick,\n  href,\n  cardDragHandleProps,\n  cardDragHandleComponent,\n  isActionsDisabled = false,\n  ...otherProps\n}: EntityListItemProps): React.ReactElement => {\n  const styles = getEntityListItemStyles();\n\n  const renderCardDragHandle = () => {\n    if (cardDragHandleComponent) {\n      return cardDragHandleComponent;\n    } else if (withDragHandle) {\n      return (\n        <DragHandle\n          className={styles.dragHandle}\n          isActive={isDragActive}\n          label=\"Reorder entry\"\n          {...cardDragHandleProps}\n        />\n      );\n    }\n  };\n\n  let Element: React.ElementType = 'article';\n  if (href || onClick) {\n    Element = href ? 'a' : 'button';\n  }\n\n  // archived assets will not be available on the CDN, resulting in a broken image src\n  const isArchived = status === 'archived';\n  const asIcon = isArchived || !thumbnailUrl;\n\n  return (\n    <li\n      {...otherProps}\n      className={cx(styles.root({ isDragActive }), className)}\n      data-test-id={testId}\n    >\n      {renderCardDragHandle()}\n      {isLoading ? (\n        <article className={styles.card}>\n          <SkeletonContainer clipId=\"f36-entity-list-item-skeleton\">\n            <SkeletonImage height={46} width={46} />\n            <SkeletonBodyText\n              numberOfLines={2}\n              lineHeight={18}\n              offsetLeft={54}\n            />\n          </SkeletonContainer>\n        </article>\n      ) : (\n        <Element\n          className={styles.card}\n          onClick={onClick}\n          href={href}\n          type={Element === 'button' ? 'button' : undefined}\n          target={href ? '_blank' : undefined}\n        >\n          {withThumbnail && (\n            <figure className={styles.media}>\n              {asIcon ? (\n                <Icon as={ICON_MAP[entityType.toLowerCase()]} variant=\"muted\" />\n              ) : (\n                <img\n                  src={thumbnailUrl}\n                  className={styles.thumbnail}\n                  alt={thumbnailAltText}\n                />\n              )}\n            </figure>\n          )}\n\n          <div className={styles.content}>\n            <Flex>\n              <Text\n                as=\"h3\"\n                lineHeight=\"lineHeightM\"\n                fontColor=\"gray900\"\n                fontWeight=\"fontWeightDemiBold\"\n                isTruncated\n              >\n                {title}\n              </Text>\n\n              {contentType && (\n                <Text\n                  as=\"span\"\n                  lineHeight=\"lineHeightM\"\n                  fontColor=\"gray600\"\n                  className={styles.contentType}\n                  isTruncated\n                >\n                  ({contentType})\n                </Text>\n              )}\n            </Flex>\n            {description && (\n              <Text\n                as=\"p\"\n                lineHeight=\"lineHeightM\"\n                fontColor=\"gray900\"\n                isTruncated\n                className={styles.description}\n              >\n                {description}\n              </Text>\n            )}\n          </div>\n\n          <Flex\n            className={styles.meta}\n            alignItems=\"flex-start\"\n            paddingLeft=\"spacingXs\"\n          >\n            {status && (\n              <Box marginRight={actions ? 'spacingXs' : 'none'}>\n                <EntityStatusBadge entityStatus={status} />\n              </Box>\n            )}\n\n            {actions && (\n              <Menu>\n                <Menu.Trigger>\n                  <Button\n                    isDisabled={isActionsDisabled}\n                    startIcon={<MoreHorizontalIcon />}\n                    variant=\"transparent\"\n                    aria-label=\"Actions\"\n                    size=\"small\"\n                    className={styles.menuTrigger}\n                  />\n                </Menu.Trigger>\n                <Menu.List>{actions}</Menu.List>\n              </Menu>\n            )}\n          </Flex>\n        </Element>\n      )}\n    </li>\n  );\n};\n\nEntityListItem.displayName = 'EntityListItem';\n","import { EntityList as OriginalEntityList } from './EntityList';\nimport { EntityListItem } from './EntityListItem/EntityListItem';\n\ntype CompoundEntityList = typeof OriginalEntityList & {\n  Item: typeof EntityListItem;\n};\n\nexport const EntityList = OriginalEntityList as CompoundEntityList;\nEntityList.Item = EntityListItem;\n"]},"metadata":{},"sourceType":"module"}