{"ast":null,"code":"import $jACei$react from \"react\";\nimport { Box as $jACei$Box, useId as $jACei$useId, useControllableState as $jACei$useControllableState } from \"@contentful/f36-core\";\nimport { cx as $jACei$cx, css as $jACei$css } from \"emotion\";\nimport $jACei$contentfulf36tokens from \"@contentful/f36-tokens\";\nimport { Subheading as $jACei$Subheading } from \"@contentful/f36-typography\";\nimport { ChevronDownTrimmedIcon as $jACei$ChevronDownTrimmedIcon } from \"@contentful/f36-icons\";\nimport { Collapse as $jACei$Collapse } from \"@contentful/f36-collapse\";\n\nconst $d678e0ec669f4067$export$af90c4d6702a6ca7 = _ref => {\n  let {\n    className: className\n  } = _ref;\n  return {\n    accordion: $jACei$cx( /*#__PURE__*/$jACei$css({\n      boxSizing: 'border-box',\n      padding: '0',\n      margin: '0',\n      listStyle: 'none',\n      '&:first-child': {\n        borderTop: `1px solid ${$jACei$contentfulf36tokens.gray300}`\n      }\n    }), className)\n  };\n};\n\nconst $a517c4a963657a24$var$_Accordion = (_ref2, ref) => {\n  let {\n    align = 'end',\n    children: children,\n    className: className,\n    testId = 'cf-ui-accordion',\n    ...otherProps\n  } = _ref2;\n  const styles = $d678e0ec669f4067$export$af90c4d6702a6ca7({\n    className: className\n  });\n  return /*#__PURE__*/$jACei$react.createElement($jACei$Box, {\n    as: \"ul\",\n    className: styles.accordion,\n    testId: testId,\n    ...otherProps,\n    ref: ref\n  }, $jACei$react.Children.map(children, child => {\n    if ( /*#__PURE__*/$jACei$react.isValidElement(child)) return /*#__PURE__*/$jACei$react.cloneElement(child, {\n      align: align\n    });\n    return child;\n  }));\n};\n\nconst $a517c4a963657a24$export$a766cd26d0d69044 = /*#__PURE__*/$jACei$react.forwardRef($a517c4a963657a24$var$_Accordion);\n\nconst $d95c2a37e890ef38$var$getHeaderStyles = _ref3 => {\n  let {\n    align: align\n  } = _ref3;\n  return $jACei$cx( /*#__PURE__*/$jACei$css({\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    border: '0',\n    padding: $jACei$contentfulf36tokens.spacingM,\n    backgroundColor: 'transparent',\n    fontFamily: $jACei$contentfulf36tokens.fontStackPrimary,\n    fontSize: $jACei$contentfulf36tokens.fontSizeL,\n    fontWeight: $jACei$contentfulf36tokens.fontWeightDemiBold,\n    lineHeight: $jACei$contentfulf36tokens.lineHeightL,\n    color: $jACei$contentfulf36tokens.gray800,\n    width: '100%',\n    minWidth: '9px',\n    cursor: 'pointer',\n    transition: `background-color ${$jACei$contentfulf36tokens.transitionDurationDefault} ${$jACei$contentfulf36tokens.transitionEasingDefault},\n        box-shadow ${$jACei$contentfulf36tokens.transitionDurationShort} ${$jACei$contentfulf36tokens.transitionEasingDefault}`,\n    '&:hover': {\n      backgroundColor: $jACei$contentfulf36tokens.gray100\n    },\n    '&:focus': {\n      backgroundColor: $jACei$contentfulf36tokens.gray100,\n      borderRadius: $jACei$contentfulf36tokens.borderRadiusMedium,\n      boxShadow: $jACei$contentfulf36tokens.glowPrimary,\n      outline: 'none'\n    },\n    '&:focus:not(:focus-visible)': {\n      backgroundColor: 'transparent',\n      borderRadius: 'unset',\n      boxShadow: 'unset'\n    },\n    '&:focus-visible': {\n      backgroundColor: $jACei$contentfulf36tokens.gray100,\n      borderRadius: $jACei$contentfulf36tokens.borderRadiusMedium,\n      boxShadow: $jACei$contentfulf36tokens.glowPrimary\n    }\n  }), align === 'end' && /*#__PURE__*/$jACei$css({\n    name: \"1tvf3d0\",\n    styles: \"flex-direction:row-reverse;justify-content:space-between;\"\n  }));\n};\n\nconst $d95c2a37e890ef38$var$getIconStyles = _ref4 => {\n  let {\n    align: align,\n    isExpanded: isExpanded\n  } = _ref4;\n  return $jACei$cx( /*#__PURE__*/$jACei$css({\n    transform: 'rotate(0deg)',\n    transition: `transform ${$jACei$contentfulf36tokens.transitionDurationDefault} ${$jACei$contentfulf36tokens.transitionEasingDefault}`\n  }), align === 'end' && /*#__PURE__*/$jACei$css({\n    marginLeft: $jACei$contentfulf36tokens.spacingM\n  }), align === 'start' && /*#__PURE__*/$jACei$css({\n    marginRight: $jACei$contentfulf36tokens.spacingM\n  }), isExpanded && /*#__PURE__*/$jACei$css({\n    name: \"4ky835\",\n    styles: \"transform:rotate(180deg);\"\n  }));\n};\n\nconst $d95c2a37e890ef38$export$b6b01239d0041103 = props => ({\n  accordionHeader: $d95c2a37e890ef38$var$getHeaderStyles(props),\n  accordionHeaderIcon: $d95c2a37e890ef38$var$getIconStyles(props)\n});\n\nconst $01f1d19e673d71a7$export$5e3e5deaaf81ee41 = _ref5 => {\n  let {\n    children: children,\n    onClick: onClick,\n    isExpanded = false,\n    ariaId: ariaId,\n    element = 'h2',\n    align = 'end',\n    testId = 'cf-ui-accordion-header',\n    ...rest\n  } = _ref5;\n  const styles = $d95c2a37e890ef38$export$b6b01239d0041103({\n    align: align,\n    isExpanded: isExpanded\n  });\n  return /*#__PURE__*/$jACei$react.createElement($jACei$Subheading, { ...rest,\n    testId: testId,\n    marginBottom: \"none\",\n    as: element\n  }, /*#__PURE__*/$jACei$react.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": `accordion-panel--${ariaId}`,\n    id: `accordion--${ariaId}`,\n    className: styles.accordionHeader,\n    onClick: onClick\n  }, /*#__PURE__*/$jACei$react.createElement($jACei$ChevronDownTrimmedIcon, {\n    className: styles.accordionHeaderIcon,\n    variant: \"secondary\"\n  }), children));\n};\n\nconst $3ba27b87c168e14d$export$2db50514b4b2c1ee = () => {\n  return {\n    accordionPanelContent: /*#__PURE__*/$jACei$css({\n      width: '100%',\n      padding: `${$jACei$contentfulf36tokens.spacingXs} ${$jACei$contentfulf36tokens.spacingM} ${$jACei$contentfulf36tokens.spacingM}`\n    })\n  };\n};\n\nconst $0c5bba33d6cffbcc$export$7cad6f17fd6e117b = _ref6 => {\n  let {\n    children: children,\n    isExpanded = false,\n    ariaId: ariaId,\n    testId = 'cf-ui-accordion-panel',\n    ...otherProps\n  } = _ref6;\n  const styles = $3ba27b87c168e14d$export$2db50514b4b2c1ee();\n  return /*#__PURE__*/$jACei$react.createElement($jACei$Collapse, {\n    \"data-test-id\": testId,\n    \"aria-labelledby\": `accordion--${ariaId}`,\n    isExpanded: isExpanded,\n    ...otherProps\n  }, /*#__PURE__*/$jACei$react.createElement(\"div\", {\n    className: styles.accordionPanelContent\n  }, children));\n};\n\nconst $10647792993fae18$export$c4864364a487dfa = _ref7 => {\n  let {\n    className: className\n  } = _ref7;\n  return {\n    accordionItem: $jACei$cx( /*#__PURE__*/$jACei$css({\n      padding: '0',\n      margin: '0',\n      borderBottom: `1px solid ${$jACei$contentfulf36tokens.colorElementMid}`,\n      '&:first-child': {\n        borderTop: `1px solid ${$jACei$contentfulf36tokens.colorElementMid}`\n      }\n    }), className)\n  };\n};\n\nconst $b6120c67649da348$var$_AccordionItem = (_ref8, ref) => {\n  let {\n    title = 'Accordion Title',\n    titleElement = 'h2',\n    testId = 'cf-ui-accordion-item',\n    onExpand: onExpand,\n    onCollapse: onCollapse,\n    children: children,\n    align = 'end',\n    className: className,\n    isExpanded: isExpanded,\n    ...otherProps\n  } = _ref8;\n  const styles = $10647792993fae18$export$c4864364a487dfa({\n    className: className\n  });\n  const id = $jACei$useId();\n  const {\n    isOpen: isOpen,\n    handleOpen: handleOpen,\n    handleClose: handleClose\n  } = $jACei$useControllableState({\n    isOpen: isExpanded,\n    onOpen: onExpand,\n    onClose: onCollapse\n  });\n\n  const handleOnClick = () => {\n    if (isOpen) handleClose();else handleOpen();\n  };\n\n  return /*#__PURE__*/$jACei$react.createElement($jACei$Box, {\n    as: \"li\",\n    className: styles.accordionItem,\n    testId: `${testId}-${id}`,\n    ...otherProps,\n    ref: ref\n  }, /*#__PURE__*/$jACei$react.createElement($01f1d19e673d71a7$export$5e3e5deaaf81ee41, {\n    onClick: handleOnClick,\n    isExpanded: isOpen,\n    element: titleElement,\n    ariaId: id,\n    align: align\n  }, title), /*#__PURE__*/$jACei$react.createElement($0c5bba33d6cffbcc$export$7cad6f17fd6e117b, {\n    ariaId: id,\n    isExpanded: isOpen\n  }, children));\n};\n\nconst $b6120c67649da348$export$d99097c13d4dac9f = /*#__PURE__*/$jACei$react.forwardRef($b6120c67649da348$var$_AccordionItem);\nconst $9e55ae7143081c67$export$a766cd26d0d69044 = $a517c4a963657a24$export$a766cd26d0d69044;\n$9e55ae7143081c67$export$a766cd26d0d69044.Item = $b6120c67649da348$export$d99097c13d4dac9f;\nexport { $9e55ae7143081c67$export$a766cd26d0d69044 as Accordion, $01f1d19e673d71a7$export$5e3e5deaaf81ee41 as AccordionHeader, $b6120c67649da348$export$d99097c13d4dac9f as AccordionItem, $0c5bba33d6cffbcc$export$7cad6f17fd6e117b as AccordionPanel };","map":{"version":3,"mappings":"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","names":["getAccordionStyles","className","accordion","$jACei$cx","$jACei$css","boxSizing","padding","margin","listStyle","borderTop","tokens","gray300","_Accordion","ref","align","children","testId","otherProps","styles","$jACei$react","$jACei$Box","as","React","Children","map","child","isValidElement","cloneElement","Accordion","forwardRef","getHeaderStyles","display","flexDirection","alignItems","border","spacingM","backgroundColor","fontFamily","fontStackPrimary","fontSize","fontSizeL","fontWeight","fontWeightDemiBold","lineHeight","lineHeightL","color","gray800","width","minWidth","cursor","transition","transitionDurationDefault","transitionEasingDefault","transitionDurationShort","gray100","borderRadius","borderRadiusMedium","boxShadow","glowPrimary","outline","name","getIconStyles","isExpanded","transform","marginLeft","marginRight","getAccordionHeaderStyles","props","accordionHeader","accordionHeaderIcon","AccordionHeader","onClick","ariaId","element","rest","$jACei$Subheading","marginBottom","type","id","$jACei$ChevronDownTrimmedIcon","variant","getAccordionPanelStyles","accordionPanelContent","spacingXs","AccordionPanel","$jACei$Collapse","getAccordionItemStyles","accordionItem","borderBottom","colorElementMid","_AccordionItem","title","titleElement","onExpand","onCollapse","useId","isOpen","handleOpen","handleClose","useControllableState","onOpen","onClose","handleOnClick","$01f1d19e673d71a7$export$5e3e5deaaf81ee41","$0c5bba33d6cffbcc$export$7cad6f17fd6e117b","AccordionItem","OriginalAccordion","Item"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/Accordion.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/Accordion.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionHeader/AccordionHeader.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionHeader/AccordionHeader.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionPanel/AccordionPanel.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionPanel/AccordionPanel.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionItem/AccordionItem.styles.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/AccordionItem/AccordionItem.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-accordion/dist/packages/components/accordion/src/CompoundAccordion.tsx"],"sourcesContent":["import { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getAccordionStyles = ({ className }: { className?: string }) => ({\n  accordion: cx(\n    css({\n      boxSizing: 'border-box',\n      padding: '0',\n      margin: '0',\n      listStyle: 'none',\n      '&:first-child': {\n        borderTop: `1px solid ${tokens.gray300}`,\n      },\n    }),\n    className,\n  ),\n});\n","import React from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\n\nimport { getAccordionStyles } from './Accordion.styles';\n\nexport interface AccordionProps extends CommonProps {\n  /**\n   * Specify the alignment of the chevron inside the accordion header\n   * @default end\n   */\n  align?: 'start' | 'end';\n  /**\n   * Child nodes to be rendered in the component\n   */\n  children?: React.ReactNode;\n}\n\nconst _Accordion = (\n  {\n    align = 'end',\n    children,\n    className,\n    testId = 'cf-ui-accordion',\n    ...otherProps\n  }: ExpandProps<AccordionProps>,\n  ref: React.Ref<HTMLUListElement>,\n) => {\n  const styles = getAccordionStyles({ className });\n  return (\n    <Box\n      as=\"ul\"\n      className={styles.accordion}\n      testId={testId}\n      {...otherProps}\n      ref={ref}\n    >\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            align,\n          });\n        }\n        return child;\n      })}\n    </Box>\n  );\n};\n\nexport const Accordion = React.forwardRef(_Accordion);\n","import { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\ntype StyleProps = {\n  align: 'start' | 'end';\n  isExpanded: boolean;\n};\n\nconst getHeaderStyles = ({ align }: StyleProps) =>\n  cx(\n    css({\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      border: '0',\n      padding: tokens.spacingM,\n      backgroundColor: 'transparent',\n      fontFamily: tokens.fontStackPrimary,\n      fontSize: tokens.fontSizeL,\n      fontWeight: tokens.fontWeightDemiBold,\n      lineHeight: tokens.lineHeightL,\n      color: tokens.gray800,\n      width: '100%',\n      minWidth: '9px',\n      cursor: 'pointer',\n      transition: `background-color ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault},\n        box-shadow ${tokens.transitionDurationShort} ${tokens.transitionEasingDefault}`,\n      '&:hover': {\n        backgroundColor: tokens.gray100,\n      },\n      '&:focus': {\n        backgroundColor: tokens.gray100,\n        borderRadius: tokens.borderRadiusMedium,\n        boxShadow: tokens.glowPrimary,\n        outline: 'none',\n      },\n      '&:focus:not(:focus-visible)': {\n        backgroundColor: 'transparent',\n        borderRadius: 'unset',\n        boxShadow: 'unset',\n      },\n      '&:focus-visible': {\n        backgroundColor: tokens.gray100,\n        borderRadius: tokens.borderRadiusMedium,\n        boxShadow: tokens.glowPrimary,\n      },\n    }),\n    align === 'end' &&\n      css({\n        flexDirection: 'row-reverse',\n        justifyContent: 'space-between',\n      }),\n  );\n\nconst getIconStyles = ({ align, isExpanded }: StyleProps) =>\n  cx(\n    css({\n      transform: 'rotate(0deg)',\n      transition: `transform ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault}`,\n    }),\n    align === 'end' && css({ marginLeft: tokens.spacingM }),\n    align === 'start' && css({ marginRight: tokens.spacingM }),\n    isExpanded &&\n      css({\n        transform: 'rotate(180deg)',\n      }),\n  );\n\nexport const getAccordionHeaderStyles = (props: StyleProps) => ({\n  accordionHeader: getHeaderStyles(props),\n  accordionHeaderIcon: getIconStyles(props),\n});\n","import React from 'react';\nimport { Subheading } from '@contentful/f36-typography';\nimport type { HeadingElement } from '@contentful/f36-typography';\nimport { ChevronDownTrimmedIcon } from '@contentful/f36-icons';\nimport type { CommonProps } from '@contentful/f36-core';\n\nimport { getAccordionHeaderStyles } from './AccordionHeader.styles';\n\nexport interface AccordionHeaderProps extends CommonProps {\n  /**\n   * Child nodes to be rendered in the component\n   */\n  children?: React.ReactNode;\n  /**\n   * The function that will be called once the user clicks on the accordion title\n   */\n  onClick: VoidFunction;\n  /**\n   * A boolean that tells if the accordion should be expanded or collapsed\n   */\n  isExpanded: boolean;\n  /**\n   * An unique id that is necessary for the aria roles and properties\n   */\n  ariaId: string;\n  /**\n   * The heading element that will be used by the Subheading component\n   */\n  element?: HeadingElement;\n  /**\n   * Specify the alignment of the chevron inside the accordion header\n   */\n  align?: 'start' | 'end';\n}\n\nexport const AccordionHeader = ({\n  children,\n  onClick,\n  isExpanded = false,\n  ariaId,\n  element = 'h2',\n  align = 'end',\n  testId = 'cf-ui-accordion-header',\n  ...rest\n}: AccordionHeaderProps) => {\n  const styles = getAccordionHeaderStyles({ align, isExpanded });\n\n  return (\n    <Subheading {...rest} testId={testId} marginBottom=\"none\" as={element}>\n      <button\n        type=\"button\"\n        aria-expanded={isExpanded}\n        aria-controls={`accordion-panel--${ariaId}`}\n        id={`accordion--${ariaId}`}\n        className={styles.accordionHeader}\n        onClick={onClick}\n      >\n        <ChevronDownTrimmedIcon\n          className={styles.accordionHeaderIcon}\n          variant=\"secondary\"\n        />\n        {children}\n      </button>\n    </Subheading>\n  );\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getAccordionPanelStyles = () => {\n  return {\n    accordionPanelContent: css({\n      width: '100%',\n      padding: `${tokens.spacingXs} ${tokens.spacingM} ${tokens.spacingM}`,\n    }),\n  };\n};\n","import React, { FC } from 'react';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\nimport { Collapse } from '@contentful/f36-collapse';\n\nimport { getAccordionPanelStyles } from './AccordionPanel.styles';\n\nexport interface AccordionPanelProps extends CommonProps {\n  /**\n   * Child nodes to be rendered in the component\n   */\n  children?: React.ReactNode;\n  /**\n   * A boolean that tells if the accordion should be expanded or collapsed\n   */\n  isExpanded: boolean;\n  /**\n   * An unique id that is necessary for the aria roles and properties\n   */\n  ariaId: string;\n}\n\nexport const AccordionPanel: FC<ExpandProps<AccordionPanelProps>> = ({\n  children,\n  isExpanded = false,\n  ariaId,\n  testId = 'cf-ui-accordion-panel',\n  ...otherProps\n}: AccordionPanelProps) => {\n  const styles = getAccordionPanelStyles();\n\n  return (\n    <Collapse\n      data-test-id={testId}\n      aria-labelledby={`accordion--${ariaId}`}\n      isExpanded={isExpanded}\n      {...otherProps}\n    >\n      <div className={styles.accordionPanelContent}>{children}</div>\n    </Collapse>\n  );\n};\n","import { css, cx } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getAccordionItemStyles = ({\n  className,\n}: {\n  className?: string;\n}) => ({\n  accordionItem: cx(\n    css({\n      padding: '0',\n      margin: '0',\n      borderBottom: `1px solid ${tokens.colorElementMid}`,\n      '&:first-child': {\n        borderTop: `1px solid ${tokens.colorElementMid}`,\n      },\n    }),\n    className,\n  ),\n});\n","import React from 'react';\nimport type { HeadingElement } from '@contentful/f36-typography';\nimport { useId, Box, useControllableState } from '@contentful/f36-core';\n\nimport { AccordionHeader } from '../AccordionHeader/AccordionHeader';\nimport { AccordionPanel } from '../AccordionPanel/AccordionPanel';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\n\nimport { getAccordionItemStyles } from './AccordionItem.styles';\n\nexport interface AccordionItemProps extends CommonProps {\n  /**\n   * The accordion title\n   */\n  title?: React.ReactNode;\n  /**\n   * The heading element that will be used by the AccordionHeader\n   */\n  titleElement?: HeadingElement;\n  /**\n   * The children of the AccordionItem are in fact the content of the accordion\n   */\n  children?: React.ReactNode;\n  /**\n   * A function to be called when the accordion item is opened\n   */\n  onExpand?: () => void;\n  /**\n   * A function to be called when the accordion item is closed\n   */\n  onCollapse?: () => void;\n  /**\n   * Specify the alignment of the chevron inside the accordion header\n   */\n  align?: 'start' | 'end';\n\n  /**\n   * By default, the AccordionItem is uncontrolled (manage it's expanded state by itself)\n   * But you can make it controlled by providing boolean\n   */\n  isExpanded?: boolean;\n}\n\nconst _AccordionItem = (\n  {\n    title = 'Accordion Title',\n    titleElement = 'h2',\n    testId = 'cf-ui-accordion-item',\n    onExpand,\n    onCollapse,\n    children,\n    align = 'end',\n    className,\n    isExpanded,\n    ...otherProps\n  }: ExpandProps<AccordionItemProps>,\n  ref: React.Ref<HTMLLIElement>,\n) => {\n  const styles = getAccordionItemStyles({ className });\n  const id = useId();\n  const { isOpen, handleOpen, handleClose } = useControllableState({\n    isOpen: isExpanded,\n    onOpen: onExpand,\n    onClose: onCollapse,\n  });\n\n  const handleOnClick = () => {\n    if (isOpen) {\n      handleClose();\n    } else {\n      handleOpen();\n    }\n  };\n\n  return (\n    <Box\n      as=\"li\"\n      className={styles.accordionItem}\n      testId={`${testId}-${id}`}\n      {...otherProps}\n      ref={ref}\n    >\n      <AccordionHeader\n        onClick={handleOnClick}\n        isExpanded={isOpen}\n        element={titleElement}\n        ariaId={id}\n        align={align}\n      >\n        {title}\n      </AccordionHeader>\n\n      <AccordionPanel ariaId={id} isExpanded={isOpen}>\n        {children}\n      </AccordionPanel>\n    </Box>\n  );\n};\n\nexport const AccordionItem = React.forwardRef(_AccordionItem);\n","import { Accordion as OriginalAccordion } from './Accordion';\nimport { AccordionItem } from './AccordionItem/AccordionItem';\n\ntype CompoundAccordion = typeof OriginalAccordion & {\n  Item: typeof AccordionItem;\n};\n\nexport const Accordion = OriginalAccordion as CompoundAccordion;\nAccordion.Item = AccordionItem;\n"]},"metadata":{},"sourceType":"module"}