{"ast":null,"code":"import { useRef as $6KSAN$useRef, useEffect as $6KSAN$useEffect, useCallback as $6KSAN$useCallback } from \"react\";\nimport { createPortal as $6KSAN$createPortal } from \"react-dom\";\n\nfunction $ff31c9f35937f52f$export$602eac185826482c(_ref) {\n  let {\n    children: children,\n    container: containerElement\n  } = _ref;\n  const container = $6KSAN$useRef(containerElement);\n  const portal = $6KSAN$useRef(document.createElement('div'));\n  $6KSAN$useEffect(() => {\n    if (!container.current) container.current = document.body;\n    const portalContainer = portal.current;\n    portalContainer.setAttribute('data-cf-ui-portal', '');\n    container.current.appendChild(portalContainer);\n    return () => {\n      if (container.current) container.current.removeChild(portalContainer);\n    };\n  }, []);\n  return portal.current ? /*#__PURE__*/$6KSAN$createPortal(children, portal.current) : null;\n}\n\nconst $95440ece1fedb657$export$8f71654801c2f7cd = props => {\n  const {\n    ref: ref,\n    keys: keys,\n    event = 'keydown'\n  } = props;\n  let element = document;\n  const handleKeyEvent = $6KSAN$useCallback(e => {\n    const isKey = Object.prototype.hasOwnProperty.call(keys, e.key);\n    if (isKey) keys[e.key](e);\n  }, [keys]);\n  $6KSAN$useEffect(() => {\n    if (ref && ref.current) element = ref.current;\n    element.addEventListener(event, handleKeyEvent);\n    return () => {\n      element.removeEventListener(event, handleKeyEvent);\n    };\n  }, [event, handleKeyEvent]);\n};\n\nfunction $cc3d205d0a9a62a1$export$eff4f407bb3643a(base, match) {\n  const matchResult = {\n    before: '',\n    match: '',\n    after: ''\n  };\n  const regex = new RegExp(`(?<before>.*?)(?<match>${match})(?<after>.*)`, 'i');\n  const matches = base.match(regex);\n\n  if (matches) {\n    matchResult.before = matches.groups.before;\n    matchResult.match = matches.groups.match;\n    matchResult.after = matches.groups.after;\n  }\n\n  return matchResult;\n}\n\nexport { $ff31c9f35937f52f$export$602eac185826482c as Portal, $95440ece1fedb657$export$8f71654801c2f7cd as useKeyboard, $cc3d205d0a9a62a1$export$eff4f407bb3643a as getStringMatch };","map":{"version":3,"mappings":";;;AAWO,SAASA,yCAAT,OAGmC;EAAA,IAHnB;IAXvBC,UAYEA,QADqB;IAErBC,SAAS,EAAEC;EAFU,CAGmB;EACxC,MAAMD,SAAS,GAAGE,aAAM,CACtBD,gBADsB,CAAxB;EAGA,MAAME,MAAM,GAAGD,aAAM,CAAiBE,QAAQ,CAACC,aAATD,CAAuB,KAAvBA,CAAjB,CAArB;EAEAE,gBAAS,CAAC,MAAM;IACd,IAAI,CAACN,SAAS,CAACO,OAAf,EACEP,SAAS,CAACO,OAAVP,GAAoBI,QAAQ,CAACI,IAA7BR;IAGF,MAAMS,eAAe,GAAGN,MAAM,CAACI,OAA/B;IACAE,eAAe,CAACC,YAAhBD,CAA6B,mBAA7BA,EAAkD,EAAlDA;IACAT,SAAS,CAACO,OAAVP,CAAkBW,WAAlBX,CAA8BS,eAA9BT;IAEA,OAAO,MAAM;MACX,IAAIA,SAAS,CAACO,OAAd,EACEP,SAAS,CAACO,OAAVP,CAAkBY,WAAlBZ,CAA8BS,eAA9BT;IAFJ;EATO,GAcN,EAdM,CAATM;EAgBA,OAAOH,MAAM,CAACI,OAAPJ,gBAAiBU,mBAAY,CAACd,QAAD,EAAWI,MAAM,CAACI,OAAlB,CAA7BJ,GAA0D,IAAjE;AACD;;ACFM,MAAMW,yCAAW,GAAIC,KAAD,IAA6B;EACtD,MAAM;IApCRC,KAoCUA,GAAF;IApCRC,MAoCeA,IAAP;IAAaC,KAAK,GAAG;EAArB,IAAmCH,KAAzC;EACA,IAAII,OAAO,GAA2Bf,QAAtC;EAEA,MAAMgB,cAAc,GAAGC,kBAAW,CAC/BC,KAAM;IACL,MAAMC,KAAK,GAAGC,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCP,IAArCO,EAA2CF,CAAC,CAACM,GAA7CJ,CAAd;IACA,IAAID,KAAJ,EACEN,IAAI,CAACK,CAAC,CAACM,GAAH,CAAJX,CAAYK,CAAZL;EAJ4B,GAOhC,CAACA,IAAD,CAPgC,CAAlC;EAUAX,gBAAS,CAAC,MAAM;IACd,IAAIU,GAAG,IAAIA,GAAG,CAACT,OAAf,EACEY,OAAO,GAAGH,GAAG,CAACT,OAAdY;IAGFA,OAAO,CAACU,gBAARV,CAAyBD,KAAzBC,EAAgCC,cAAhCD;IACA,OAAO,MAAM;MACXA,OAAO,CAACW,mBAARX,CAA4BD,KAA5BC,EAAmCC,cAAnCD;IADF;EANO,GASN,CAACD,KAAD,EAAQE,cAAR,CATM,CAATd;AAdK;;ACnBA,SAASyB,wCAAT,CAAwBC,IAAxB,EAAsCC,KAAtC,EAA+D;EACpE,MAAMC,WAAW,GAAG;IAAEC,MAAM,EAAE,EAAV;IAAcF,KAAK,EAAE,EAArB;IAAyBG,KAAK,EAAE;EAAhC,CAApB;EAEA,MAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,0BAAyBL,KAAM,eAA3C,EAA2D,GAA3D,CAAd;EACA,MAAMM,OAAO,GAAGP,IAAI,CAACC,KAALD,CAAWK,KAAXL,CAAhB;;EAEA,IAAIO,OAAJ,EAAa;IACXL,WAAW,CAACC,MAAZD,GAAqBK,OAAO,CAACC,MAARD,CAAeJ,MAApCD;IACAA,WAAW,CAACD,KAAZC,GAAoBK,OAAO,CAACC,MAARD,CAAeN,KAAnCC;IACAA,WAAW,CAACE,KAAZF,GAAoBK,OAAO,CAACC,MAARD,CAAeH,KAAnCF;EACD;;EAED,OAAOA,WAAP;AACD","names":["Portal","children","container","containerElement","useRef","portal","document","createElement","useEffect","current","body","portalContainer","setAttribute","appendChild","removeChild","createPortal","useKeyboard","props","ref","keys","event","element","handleKeyEvent","useCallback","e","isKey","Object","prototype","hasOwnProperty","call","key","addEventListener","removeEventListener","getStringMatch","base","match","matchResult","before","after","regex","RegExp","matches","groups"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-utils/dist/packages/components/utils/src/Portal/Portal.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-utils/dist/packages/components/utils/src/useKeyboard/useKeyboard.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-utils/dist/packages/components/utils/src/getStringMatch/getStringMatch.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport interface PortalProps {\n  children: React.ReactElement;\n  /**\n   * Container element for Portal\n   */\n  container?: Document | HTMLElement;\n}\n\nexport function Portal({\n  children,\n  container: containerElement,\n}: PortalProps): React.ReactPortal | null {\n  const container = useRef<Document | HTMLElement | undefined>(\n    containerElement,\n  );\n  const portal = useRef<HTMLDivElement>(document.createElement('div'));\n\n  useEffect(() => {\n    if (!container.current) {\n      container.current = document.body;\n    }\n\n    const portalContainer = portal.current;\n    portalContainer.setAttribute('data-cf-ui-portal', '');\n    container.current.appendChild(portalContainer);\n\n    return () => {\n      if (container.current) {\n        container.current.removeChild(portalContainer);\n      }\n    };\n  }, []);\n\n  return portal.current ? createPortal(children, portal.current) : null;\n}\n","import { useEffect, useCallback, MutableRefObject } from 'react';\n\nexport interface UseKeyboardProps {\n  /**\n   * Object of key names and handlers defines which key to look for i.e. `ArrowUp`, `Escape`, `Shift`\n   * value is a callback function to be called when key matches\n   */\n  keys: {\n    [key: string]: (e: KeyboardEvent) => void;\n  };\n  /**\n   * Defines the attached event type\n   * @default 'keydown'\n   */\n  event?: 'keyup' | 'keypress' | 'keydown';\n\n  /**\n   * React reference to attach the event to its current element\n   */\n  ref?: MutableRefObject<HTMLElement>;\n}\n\n/**\n *\n * @description hook to attach a handler keyboard event listener to `document` or `HTMLElements` with garbage collection\n * @example\n * useKeyboard({\n *  event: 'keydown', // Optional, default is `keydown`\n *  ref: yourReactRef, // Optional, by default event is attached to document\n *  keys: {\n *    ArrowUp: (e) => handleArrowUp(e),\n *    Tab: (e) => handleTab(e)\n *  }\n * })\n */\nexport const useKeyboard = (props: UseKeyboardProps) => {\n  const { ref, keys, event = 'keydown' } = props;\n  let element: HTMLElement | Document = document;\n\n  const handleKeyEvent = useCallback(\n    (e) => {\n      const isKey = Object.prototype.hasOwnProperty.call(keys, e.key);\n      if (isKey) {\n        keys[e.key](e);\n      }\n    },\n    [keys],\n  );\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      element = ref.current;\n    }\n\n    element.addEventListener(event, handleKeyEvent);\n    return () => {\n      element.removeEventListener(event, handleKeyEvent);\n    };\n  }, [event, handleKeyEvent]);\n};\n","export interface MatchObj {\n  before: string;\n  match: string;\n  after: string;\n}\n\n/**\n * Function that can be used to find a substring inside another string.\n * It needs two strings, the second one will be used in a Regex expression\n * to be matched to the first one.\n * The function will return an object containing the match, what comes before the match,\n * and what comes after the match in the base string\n *\n * @param base\n * @param match\n */\nexport function getStringMatch(base: string, match: string): MatchObj {\n  const matchResult = { before: '', match: '', after: '' };\n\n  const regex = new RegExp(`(?<before>.*?)(?<match>${match})(?<after>.*)`, 'i');\n  const matches = base.match(regex);\n\n  if (matches) {\n    matchResult.before = matches.groups.before;\n    matchResult.match = matches.groups.match;\n    matchResult.after = matches.groups.after;\n  }\n\n  return matchResult;\n}\n"]},"metadata":{},"sourceType":"module"}