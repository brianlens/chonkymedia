{"ast":null,"code":"/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n'use strict';\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar difference = require('lodash.difference');\n\nvar keyBy = require('lodash.keyby');\n\nvar assign = require('object-assign');\n\nvar getChildMapping = function (children) {\n  return keyBy(React.Children.toArray(children), function (child) {\n    return child.key;\n  });\n};\n\nvar ReactTransitionGroupPlus = createReactClass({\n  displayName: 'ReactTransitionGroupPlus',\n  propTypes: {\n    component: PropTypes.any,\n    childFactory: PropTypes.func,\n    transitionMode: PropTypes.oneOf(['in-out', 'out-in', 'simultaneous']),\n    deferLeavingComponentRemoval: PropTypes.bool\n  },\n  getDefaultProps: function () {\n    return {\n      component: 'span',\n      childFactory: function (arg) {\n        return arg;\n      },\n      transitionMode: 'simultaneous',\n      deferLeavingComponentRemoval: false\n    };\n  },\n  getInitialState: function () {\n    return {\n      children: getChildMapping(this.props.children)\n    };\n  },\n  componentWillMount: function () {\n    this.currentlyEnteringOrEnteredKeys = {};\n    this.currentlyEnteringKeys = {};\n    this.currentlyEnteringPromises = {};\n    this.currentlyLeavingKeys = {};\n    this.currentlyLeavingPromises = {};\n    this.pendingEnterCallbacks = {};\n    this.pendingLeaveCallbacks = {};\n    this.deferredLeaveRemovalCallbacks = [];\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n    this.cancel = null;\n  },\n  componentDidMount: function () {\n    var initialChildMapping = this.state.children;\n\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n  componentWillReceiveProps: function (nextProps) {\n    var nextChildMapping = getChildMapping(nextProps.children);\n    var prevChildMapping = this.state.children;\n    var mergedChildMapping = assign({}, prevChildMapping, nextChildMapping);\n    this.setState({\n      children: mergedChildMapping\n    });\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n\n      if (nextChildMapping[key] && (!hasPrev || this.currentlyLeavingKeys[key])) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n\n      if (prevChildMapping[key] && !hasNext) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    if (this.props.transitionMode === 'out-in') {\n      this.keysToEnter = difference(this.keysToEnter, this.keysToLeave);\n    } // If we want to someday check for reordering, we could do it here.\n\n  },\n  componentDidUpdate: function () {\n    var keysToEnter = this.keysToEnter;\n    var keysToLeave = this.keysToLeave;\n\n    switch (this.props.transitionMode) {\n      case 'out-in':\n        this.keysToLeave = [];\n\n        if (keysToLeave.length) {\n          keysToLeave.forEach(this.performLeave);\n        } else {\n          this.keysToEnter = [];\n          keysToEnter.forEach(this.performEnter);\n        }\n\n        break;\n\n      case 'in-out':\n        this.keysToEnter = [];\n        this.keysToLeave = [];\n\n        if (keysToEnter.length) {\n          Promise.all(keysToEnter.map(this.performEnter)).then(function () {\n            keysToLeave.forEach(this.performLeave);\n          }.bind(this));\n        } else {\n          keysToLeave.forEach(this.performLeave);\n        }\n\n        break;\n\n      default:\n        this.keysToEnter = [];\n        this.keysToLeave = [];\n        keysToEnter.forEach(this.performEnter);\n        keysToLeave.forEach(this.performLeave);\n        break;\n    }\n  },\n  performAppear: function (key) {\n    this.currentlyEnteringOrEnteredKeys[key] = true;\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n  _handleDoneAppearing: function (key) {\n    var component = this.refs[key];\n\n    if (component && component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    var currentChildMapping = getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n  performEnter: function (key) {\n    if (this.currentlyEnteringKeys[key]) {\n      return this.currentlyEnteringPromises[key];\n    }\n\n    this.cancelPendingLeave(key);\n    var component = this.refs[key];\n\n    if (!component) {\n      return Promise.resolve();\n    }\n\n    this.currentlyEnteringOrEnteredKeys[key] = true;\n    this.currentlyEnteringKeys[key] = true;\n\n    var callback = this._handleDoneEntering.bind(this, key);\n\n    this.pendingEnterCallbacks[key] = callback;\n    var enterPromise = new Promise(function (resolve) {\n      if (component.componentWillEnter) {\n        component.componentWillEnter(resolve);\n      } else {\n        resolve();\n      }\n    }).then(callback);\n    this.currentlyEnteringPromises[key] = enterPromise;\n    return enterPromise;\n  },\n  _handleDoneEntering: function (key) {\n    delete this.pendingEnterCallbacks[key];\n    delete this.currentlyEnteringPromises[key];\n    delete this.currentlyEnteringKeys[key];\n    this.deferredLeaveRemovalCallbacks.forEach(function (fn) {\n      fn();\n    });\n    this.deferredLeaveRemovalCallbacks = [];\n    var component = this.refs[key];\n\n    if (component && component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    var currentChildMapping = getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key) && this.currentlyEnteringOrEnteredKeys[key]) {\n      // This was removed before it had fully entered. Remove it.\n      if (this.props.transitionMode !== 'in-out') {\n        this.performLeave(key);\n      }\n    }\n  },\n  performLeave: function (key) {\n    if (this.currentlyLeavingKeys[key]) {\n      //already leaving, let it finish\n      return this.currentlyLeavingPromises[key];\n    }\n\n    this.cancelPendingEnter(key);\n    var component = this.refs[key];\n\n    if (!component) {\n      return Promise.resolve();\n    }\n\n    this.currentlyLeavingKeys[key] = true;\n\n    var callback = this._handleDoneLeaving.bind(this, key);\n\n    this.pendingLeaveCallbacks[key] = callback;\n    var leavePromise = new Promise(function (resolve) {\n      if (component.componentWillLeave) {\n        component.componentWillLeave(resolve);\n      } else {\n        resolve();\n      }\n    }) // Note that this is somewhat dangerous b/c it calls setState()\n    // again, effectively mutating the component before all the work\n    // is done.\n    .then(callback);\n    this.currentlyLeavingPromises[key] = leavePromise;\n    return leavePromise;\n  },\n  _handleDoneLeaving: function (key) {\n    delete this.pendingLeaveCallbacks[key];\n    delete this.currentlyLeavingKeys[key];\n    delete this.currentlyLeavingPromises[key];\n    var component = this.refs[key];\n\n    if (component && component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    var currentChildMapping = getChildMapping(this.props.children);\n\n    var updateChildren = function updateChildren() {\n      this.setState(function (state) {\n        var newChildren = assign({}, state.children);\n        delete newChildren[key];\n        return {\n          children: newChildren\n        };\n      });\n    }.bind(this);\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      // but only perform enter if currently animating out, not already animated out\n      if (this.props.transitionMode !== 'in-out') {\n        this.performEnter(key);\n      }\n    } else {\n      delete this.currentlyEnteringOrEnteredKeys[key];\n\n      if (this.props.deferLeavingComponentRemoval && this.props.transitionMode !== 'in-out') {\n        this.deferredLeaveRemovalCallbacks.push(updateChildren);\n        this.forceUpdate();\n      } else {\n        updateChildren();\n      }\n    }\n  },\n  cancelPendingLeave: function (key) {\n    if (this.pendingLeaveCallbacks[key]) {\n      this.pendingLeaveCallbacks[key]();\n      delete this.pendingLeaveCallbacks[key];\n    }\n  },\n  cancelPendingEnter: function (key) {\n    if (this.pendingEnterCallbacks[key]) {\n      this.pendingEnterCallbacks[key]();\n      delete this.pendingEnterCallbacks[key];\n    }\n  },\n  cleanProps: function (props) {\n    delete props.component;\n    delete props.transitionMode;\n    delete props.childFactory;\n    delete props.deferLeavingComponentRemoval;\n    return props;\n  },\n  render: function () {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(React.cloneElement(this.props.childFactory(child), {\n          ref: key,\n          key: key\n        }));\n      }\n    }\n\n    return React.createElement(this.props.component, this.cleanProps(assign({}, this.props)), childrenToRender);\n  }\n});\nmodule.exports = ReactTransitionGroupPlus;","map":{"version":3,"names":["React","require","PropTypes","createReactClass","difference","keyBy","assign","getChildMapping","children","Children","toArray","child","key","ReactTransitionGroupPlus","displayName","propTypes","component","any","childFactory","func","transitionMode","oneOf","deferLeavingComponentRemoval","bool","getDefaultProps","arg","getInitialState","props","componentWillMount","currentlyEnteringOrEnteredKeys","currentlyEnteringKeys","currentlyEnteringPromises","currentlyLeavingKeys","currentlyLeavingPromises","pendingEnterCallbacks","pendingLeaveCallbacks","deferredLeaveRemovalCallbacks","keysToEnter","keysToLeave","cancel","componentDidMount","initialChildMapping","state","performAppear","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","mergedChildMapping","setState","hasPrev","hasOwnProperty","push","hasNext","componentDidUpdate","length","forEach","performLeave","performEnter","Promise","all","map","then","bind","refs","componentWillAppear","_handleDoneAppearing","componentDidAppear","currentChildMapping","cancelPendingLeave","resolve","callback","_handleDoneEntering","enterPromise","componentWillEnter","fn","componentDidEnter","cancelPendingEnter","_handleDoneLeaving","leavePromise","componentWillLeave","componentDidLeave","updateChildren","newChildren","forceUpdate","cleanProps","render","childrenToRender","cloneElement","ref","createElement","module","exports"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/react-transition-group-plus/src/ReactTransitionGroupPlus.js"],"sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar createReactClass = require('create-react-class');\nvar difference = require('lodash.difference');\nvar keyBy = require('lodash.keyby');\n\nvar assign = require('object-assign');\n\nvar getChildMapping = function (children) {\n  return keyBy(\n    React.Children.toArray(\n      children\n    ),\n    function(child) {\n      return child.key;\n    }\n  );\n};\n\nvar ReactTransitionGroupPlus = createReactClass({\n  displayName: 'ReactTransitionGroupPlus',\n\n  propTypes: {\n    component: PropTypes.any,\n    childFactory: PropTypes.func,\n    transitionMode: PropTypes.oneOf(['in-out', 'out-in', 'simultaneous']),\n    deferLeavingComponentRemoval: PropTypes.bool,\n  },\n\n  getDefaultProps: function() {\n    return {\n      component: 'span',\n      childFactory: function (arg) {\n        return arg;\n      },\n      transitionMode: 'simultaneous',\n      deferLeavingComponentRemoval: false,\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      children: getChildMapping(this.props.children),\n    };\n  },\n\n  componentWillMount: function() {\n    this.currentlyEnteringOrEnteredKeys = {};\n    this.currentlyEnteringKeys = {};\n    this.currentlyEnteringPromises = {};\n    this.currentlyLeavingKeys = {};\n    this.currentlyLeavingPromises = {};\n    this.pendingEnterCallbacks = {};\n    this.pendingLeaveCallbacks = {};\n    this.deferredLeaveRemovalCallbacks = [];\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n    this.cancel = null;\n  },\n\n  componentDidMount: function() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    var nextChildMapping = getChildMapping(\n      nextProps.children\n    );\n    var prevChildMapping = this.state.children;\n\n    var mergedChildMapping = assign({},\n      prevChildMapping,\n      nextChildMapping\n    );\n    this.setState({\n      children: mergedChildMapping\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && ( !hasPrev || this.currentlyLeavingKeys[key])) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext ) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    if (this.props.transitionMode === 'out-in') {\n      this.keysToEnter = difference(this.keysToEnter, this.keysToLeave);\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function() {\n    var keysToEnter = this.keysToEnter;\n    var keysToLeave = this.keysToLeave;\n\n    switch (this.props.transitionMode) {\n      case 'out-in':\n        this.keysToLeave = [];\n        if (keysToLeave.length) {\n          keysToLeave.forEach(this.performLeave)\n        } else {\n          this.keysToEnter = [];\n          keysToEnter.forEach(this.performEnter)\n        }\n        break;\n      case 'in-out':\n        this.keysToEnter = [];\n        this.keysToLeave = [];\n\n        if (keysToEnter.length) {\n          Promise.all(keysToEnter.map(this.performEnter))\n            .then(function () {\n              keysToLeave.forEach(this.performLeave)\n            }.bind(this))\n        } else {\n          keysToLeave.forEach(this.performLeave)\n        }\n        break;\n      default:\n        this.keysToEnter = [];\n        this.keysToLeave = [];\n        keysToEnter.forEach(this.performEnter);\n        keysToLeave.forEach(this.performLeave);\n        break;\n    }\n  },\n\n  performAppear: function(key) {\n    this.currentlyEnteringOrEnteredKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(\n        this._handleDoneAppearing.bind(this, key)\n      );\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function(key) {\n    var component = this.refs[key];\n    if (component && component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    var currentChildMapping = getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function(key) {\n\n    if (this.currentlyEnteringKeys[key]) {\n      return this.currentlyEnteringPromises[key];\n    }\n\n    this.cancelPendingLeave(key);\n\n\n    var component = this.refs[key];\n\n    if (!component) {\n      return Promise.resolve();\n    }\n\n    this.currentlyEnteringOrEnteredKeys[key] = true;\n    this.currentlyEnteringKeys[key] = true;\n\n    var callback = this._handleDoneEntering.bind(this, key);\n    this.pendingEnterCallbacks[key] = callback;\n\n    var enterPromise = new Promise(function (resolve) {\n      if (component.componentWillEnter) {\n        component.componentWillEnter(resolve);\n      } else {\n        resolve();\n      }\n    }).then(callback);\n\n    this.currentlyEnteringPromises[key] = enterPromise;\n\n    return enterPromise;\n  },\n\n  _handleDoneEntering: function(key) {\n    delete this.pendingEnterCallbacks[key];\n    delete this.currentlyEnteringPromises[key];\n    delete this.currentlyEnteringKeys[key];\n\n    this.deferredLeaveRemovalCallbacks.forEach(function(fn) { fn(); });\n    this.deferredLeaveRemovalCallbacks = [];\n\n    var component = this.refs[key];\n    if (component && component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    var currentChildMapping = getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key) && this.currentlyEnteringOrEnteredKeys[key]) {\n      // This was removed before it had fully entered. Remove it.\n\n      if (this.props.transitionMode !== 'in-out') {\n        this.performLeave(key);\n      }\n    }\n  },\n\n  performLeave: function(key) {\n    if (this.currentlyLeavingKeys[key]) {\n      //already leaving, let it finish\n      return this.currentlyLeavingPromises[key];\n    }\n\n    this.cancelPendingEnter(key);\n\n    var component = this.refs[key];\n\n    if (!component) {\n      return Promise.resolve();\n    }\n\n    this.currentlyLeavingKeys[key] = true;\n\n    var callback = this._handleDoneLeaving.bind(this, key);\n    this.pendingLeaveCallbacks[key] = callback;\n\n    var leavePromise = new Promise(function (resolve) {\n      if (component.componentWillLeave) {\n        component.componentWillLeave(resolve);\n      } else {\n        resolve();\n      }\n    })\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      .then(callback);\n\n    this.currentlyLeavingPromises[key] = leavePromise;\n    return leavePromise;\n  },\n\n  _handleDoneLeaving: function(key) {\n    delete this.pendingLeaveCallbacks[key];\n    delete this.currentlyLeavingKeys[key];\n    delete this.currentlyLeavingPromises[key];\n\n    var component = this.refs[key];\n\n    if (component && component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n\n    var currentChildMapping = getChildMapping(\n      this.props.children\n    );\n\n    var updateChildren = function updateChildren () {\n      this.setState(function(state) {\n        var newChildren = assign({}, state.children);\n        delete newChildren[key];\n        return {children: newChildren};\n      });\n    }.bind(this);\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      // but only perform enter if currently animating out, not already animated out\n      if (this.props.transitionMode !== 'in-out') {\n        this.performEnter(key);\n      }\n    } else {\n      delete this.currentlyEnteringOrEnteredKeys[key];\n\n      if (this.props.deferLeavingComponentRemoval && this.props.transitionMode !== 'in-out') {\n        this.deferredLeaveRemovalCallbacks.push(updateChildren);\n        this.forceUpdate();\n      } else {\n        updateChildren();\n      }\n    }\n  },\n\n  cancelPendingLeave: function (key) {\n    if (this.pendingLeaveCallbacks[key]) {\n      this.pendingLeaveCallbacks[key]();\n      delete this.pendingLeaveCallbacks[key];\n    }\n  },\n\n  cancelPendingEnter: function (key) {\n    if (this.pendingEnterCallbacks[key]) {\n      this.pendingEnterCallbacks[key]();\n      delete this.pendingEnterCallbacks[key];\n    }\n  },\n\n  cleanProps: function(props) {\n    delete props.component;\n    delete props.transitionMode;\n    delete props.childFactory;\n    delete props.deferLeavingComponentRemoval;\n    return props;\n  },\n\n  render: function() {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(React.cloneElement(\n          this.props.childFactory(child),\n          {ref: key, key: key}\n        ));\n      }\n    }\n    return React.createElement(\n      this.props.component,\n      this.cleanProps(assign({},this.props)),\n      childrenToRender\n    );\n  },\n});\n\nmodule.exports = ReactTransitionGroupPlus;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}