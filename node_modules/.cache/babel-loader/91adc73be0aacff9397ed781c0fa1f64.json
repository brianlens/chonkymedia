{"ast":null,"code":"import { css as $bvisu$css, cx as $bvisu$cx } from \"emotion\";\nimport $bvisu$react, { forwardRef as $bvisu$forwardRef, createContext as $bvisu$createContext } from \"react\";\nimport { Box as $bvisu$Box } from \"@contentful/f36-core\";\nimport $bvisu$contentfulf36tokens from \"@contentful/f36-tokens\";\n\nconst $2f027f0937745b05$var$getStyles = () => {\n  return {\n    inline: /*#__PURE__*/$bvisu$css({\n      borderRadius: $bvisu$contentfulf36tokens.borderRadiusMedium,\n      boxShadow: `0 0 0 1px ${$bvisu$contentfulf36tokens.gray200}`,\n      'th:first-child': {\n        borderTopLeftRadius: $bvisu$contentfulf36tokens.borderRadiusMedium\n      },\n      'th:last-child': {\n        borderTopRightRadius: $bvisu$contentfulf36tokens.borderRadiusMedium\n      },\n      'tr:last-child td:first-child': {\n        borderBottomLeftRadius: $bvisu$contentfulf36tokens.borderRadiusMedium\n      },\n      'tr:last-child td:last-child': {\n        borderBottomRightRadius: $bvisu$contentfulf36tokens.borderRadiusMedium\n      }\n    }),\n    root: /*#__PURE__*/$bvisu$css({\n      name: \"8atqhb\",\n      styles: \"width:100%;\"\n    })\n  };\n};\n\nconst $2f027f0937745b05$export$54ec01a60f47d33d = /*#__PURE__*/$bvisu$forwardRef((_ref, forwardedRef) => {\n  let {\n    children: children,\n    className: className,\n    layout = 'inline',\n    testId = 'cf-ui-table',\n    ...otherProps\n  } = _ref;\n  const styles = $2f027f0937745b05$var$getStyles();\n  return /*#__PURE__*/$bvisu$react.createElement($bvisu$Box, {\n    cellPadding: \"0\",\n    cellSpacing: \"0\",\n    ...otherProps,\n    as: \"table\",\n    display: \"table\",\n    ref: forwardedRef,\n    className: $bvisu$cx(styles.root, {\n      [styles.inline]: layout === 'inline'\n    }, className),\n    testId: testId\n  }, children);\n});\n$2f027f0937745b05$export$54ec01a60f47d33d.displayName = 'Table';\n\nfunction $e5a2f88316fa4480$var$_TableBody(_ref2, forwardedRef) {\n  let {\n    className: className,\n    children: children,\n    testId = 'cf-ui-table-body',\n    ...otherProps\n  } = _ref2;\n  return /*#__PURE__*/$bvisu$react.createElement($bvisu$Box, { ...otherProps,\n    as: \"tbody\",\n    className: className,\n    ref: forwardedRef,\n    testId: testId\n  }, children);\n}\n\n$e5a2f88316fa4480$var$_TableBody.displayName = 'TableBody';\nconst $e5a2f88316fa4480$export$76ccd210b9029917 = /*#__PURE__*/$bvisu$forwardRef($e5a2f88316fa4480$var$_TableBody);\nconst $538999e725dae443$export$5267b9a25ed6f28 = {\n  body: {\n    name: 'body',\n    as: 'td',\n    offsetTop: 0\n  },\n  head: {\n    name: 'head',\n    as: 'th',\n    offsetTop: 0\n  }\n};\nconst $538999e725dae443$export$e716cc2e8928701b = $bvisu$createContext($538999e725dae443$export$5267b9a25ed6f28.body);\nconst $44b04afc67d60115$export$ef3f74c6dfffb62b = {\n  asc: 'asc',\n  desc: 'desc'\n};\nconst $44b04afc67d60115$export$1e4baea7053fc0e3 = /*#__PURE__*/$bvisu$forwardRef((_ref3, forwardedRef) => {\n  let {\n    align = 'left',\n    children: children,\n    className: className,\n    sorting = false,\n    testId = 'cf-ui-table-cell',\n    ...otherProps\n  } = _ref3;\n  return /*#__PURE__*/$bvisu$react.createElement($538999e725dae443$export$e716cc2e8928701b.Consumer, null, _ref4 => {\n    let {\n      as: as,\n      name: context,\n      offsetTop: offsetTop\n    } = _ref4;\n    const isTableHead = context === 'head';\n    return /*#__PURE__*/$bvisu$react.createElement($bvisu$Box, { ...otherProps,\n      as: as,\n      className: $bvisu$cx( /*#__PURE__*/$bvisu$css({\n        backgroundColor: isTableHead ? $bvisu$contentfulf36tokens.gray100 : undefined,\n        borderBottom: `1px solid ${$bvisu$contentfulf36tokens.gray200}`,\n        color: sorting ? $bvisu$contentfulf36tokens.gray900 : $bvisu$contentfulf36tokens.gray700,\n        fontFamily: $bvisu$contentfulf36tokens.fontStackPrimary,\n        fontSize: $bvisu$contentfulf36tokens.fontSizeM,\n        fontWeight: isTableHead ? $bvisu$contentfulf36tokens.fontWeightMedium : $bvisu$contentfulf36tokens.fontWeightNormal,\n        lineHeight: $bvisu$contentfulf36tokens.lineHeightL,\n        padding: `${$bvisu$contentfulf36tokens.spacingS} ${$bvisu$contentfulf36tokens.spacingM}`,\n        textAlign: align,\n        verticalAlign: 'top'\n      }), className),\n      ref: forwardedRef,\n      style: { ...otherProps.style,\n        top: offsetTop || undefined\n      },\n      testId: testId\n    }, children);\n  });\n});\n$44b04afc67d60115$export$1e4baea7053fc0e3.displayName = 'TableCell';\nconst $d2fad74e189c1a13$export$2f4a7be4f0dcc2 = /*#__PURE__*/$bvisu$forwardRef((_ref5, forwardedRef) => {\n  let {\n    children: children,\n    className: className,\n    isSticky = false,\n    offsetTop: offsetTop,\n    testId = 'cf-ui-table-head',\n    ...otherProps\n  } = _ref5;\n  const classNames = $bvisu$cx( // a variable ðŸ¤·\n  isSticky ? /*#__PURE__*/$bvisu$css({\n    th: {\n      position: 'sticky',\n      top: 0,\n      zIndex: $bvisu$contentfulf36tokens.zIndexDefault\n    }\n  }) : '', className);\n  return /*#__PURE__*/$bvisu$react.createElement($538999e725dae443$export$e716cc2e8928701b.Provider, {\n    value: { ...$538999e725dae443$export$5267b9a25ed6f28.head,\n      offsetTop: offsetTop || 0\n    }\n  }, /*#__PURE__*/$bvisu$react.createElement($bvisu$Box, { ...otherProps,\n    as: \"thead\",\n    className: classNames,\n    ref: forwardedRef,\n    testId: testId\n  }, children));\n});\n$d2fad74e189c1a13$export$2f4a7be4f0dcc2.displayName = 'TableHead';\n\nconst $704610ca53e4a8e3$var$getStyles = () => {\n  return {\n    root: /*#__PURE__*/$bvisu$css({\n      '&:last-child td': {\n        borderBottom: 'none'\n      },\n      '&:hover td': {\n        backgroundColor: $bvisu$contentfulf36tokens.gray100\n      }\n    }),\n    selected: /*#__PURE__*/$bvisu$css({\n      'td, th': {\n        backgroundColor: $bvisu$contentfulf36tokens.blue100\n      },\n      'td:last-child': {\n        boxShadow: `inset -2px 0 0 ${$bvisu$contentfulf36tokens.blue500}`\n      }\n    })\n  };\n};\n\nconst $704610ca53e4a8e3$export$b05581f4e764e162 = /*#__PURE__*/$bvisu$forwardRef((_ref6, forwardedRef) => {\n  let {\n    className: className,\n    children: children,\n    isSelected = false,\n    testId = 'cf-ui-table-row',\n    ...otherProps\n  } = _ref6;\n  const styles = $704610ca53e4a8e3$var$getStyles();\n  return /*#__PURE__*/$bvisu$react.createElement($bvisu$Box, { ...otherProps,\n    as: \"tr\",\n    className: $bvisu$cx(styles.root, {\n      [styles.selected]: isSelected\n    }, className),\n    ref: forwardedRef,\n    testId: testId\n  }, children);\n});\n$704610ca53e4a8e3$export$b05581f4e764e162.displayName = 'TableRow';\nconst $9854ac721bd5b367$export$54ec01a60f47d33d = $2f027f0937745b05$export$54ec01a60f47d33d;\n$9854ac721bd5b367$export$54ec01a60f47d33d.Row = $704610ca53e4a8e3$export$b05581f4e764e162;\n$9854ac721bd5b367$export$54ec01a60f47d33d.Head = $d2fad74e189c1a13$export$2f4a7be4f0dcc2;\n$9854ac721bd5b367$export$54ec01a60f47d33d.Cell = $44b04afc67d60115$export$1e4baea7053fc0e3;\n$9854ac721bd5b367$export$54ec01a60f47d33d.Body = $e5a2f88316fa4480$export$76ccd210b9029917;\nexport { $9854ac721bd5b367$export$54ec01a60f47d33d as Table, $e5a2f88316fa4480$export$76ccd210b9029917 as TableBody, $44b04afc67d60115$export$1e4baea7053fc0e3 as TableCell, $538999e725dae443$export$5267b9a25ed6f28 as contextOptions, $538999e725dae443$export$e716cc2e8928701b as TableCellContext, $d2fad74e189c1a13$export$2f4a7be4f0dcc2 as TableHead, $704610ca53e4a8e3$export$b05581f4e764e162 as TableRow };","map":{"version":3,"mappings":"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","names":["getStyles","inline","$bvisu$css","borderRadius","tokens","borderRadiusMedium","boxShadow","gray200","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","root","name","styles","Table","forwardRef","forwardedRef","children","className","layout","testId","otherProps","$bvisu$react","$bvisu$Box","cellPadding","cellSpacing","as","display","ref","$bvisu$cx","displayName","_TableBody","TableBody","contextOptions","body","offsetTop","head","TableCellContext","createContext","sortingDirections","asc","desc","TableCell","align","sorting","$538999e725dae443$export$e716cc2e8928701b","Consumer","context","isTableHead","backgroundColor","gray100","undefined","borderBottom","color","gray900","gray700","fontFamily","fontStackPrimary","fontSize","fontSizeM","fontWeight","fontWeightMedium","fontWeightNormal","lineHeight","lineHeightL","padding","spacingS","spacingM","textAlign","verticalAlign","style","top","TableHead","isSticky","classNames","th","position","zIndex","zIndexDefault","Provider","value","selected","blue100","blue500","TableRow","isSelected","OriginalTable","Row","Head","Cell","Body"],"sources":["/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/Table.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/TableBody.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/tableCellContext.ts","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/TableCell.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/TableHead.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/TableRow.tsx","/Users/brian/Documents/Chonky Media /Website/chonkymedia/chonkymedia/node_modules/@contentful/f36-table/dist/packages/components/table/src/CompoundTable.tsx"],"sourcesContent":["import { cx, css } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type { CommonProps } from '@contentful/f36-core';\nimport type { PropsWithHTMLElement, ExpandProps } from '@contentful/f36-core';\nimport tokens from '@contentful/f36-tokens';\n\nconst getStyles = () => {\n  return {\n    inline: css({\n      borderRadius: tokens.borderRadiusMedium,\n      boxShadow: `0 0 0 1px ${tokens.gray200}`,\n      'th:first-child': {\n        borderTopLeftRadius: tokens.borderRadiusMedium,\n      },\n      'th:last-child': {\n        borderTopRightRadius: tokens.borderRadiusMedium,\n      },\n      'tr:last-child td:first-child': {\n        borderBottomLeftRadius: tokens.borderRadiusMedium,\n      },\n      'tr:last-child td:last-child': {\n        borderBottomRightRadius: tokens.borderRadiusMedium,\n      },\n    }),\n    root: css({\n      width: '100%',\n    }),\n  };\n};\n\nexport type TableInternalProps = CommonProps & {\n  layout?: 'inline' | 'embedded';\n};\n\nexport type TableProps = PropsWithHTMLElement<TableInternalProps, 'table'>;\n\nexport const Table = forwardRef<HTMLTableElement, ExpandProps<TableProps>>(\n  (\n    {\n      children,\n      className,\n      layout = 'inline',\n      testId = 'cf-ui-table',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const styles = getStyles();\n    return (\n      <Box\n        cellPadding=\"0\"\n        cellSpacing=\"0\"\n        {...otherProps}\n        as=\"table\"\n        display=\"table\"\n        ref={forwardedRef}\n        className={cx(\n          styles.root,\n          {\n            [styles.inline]: layout === 'inline',\n          },\n          className,\n        )}\n        testId={testId}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n\nTable.displayName = 'Table';\n","import React, { forwardRef } from 'react';\nimport type { ReactElement } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nexport type TableBodyInternalProps = CommonProps & {\n  children: ReactElement | ReactElement[];\n};\n\nexport type TableBodyProps = PropsWithHTMLElement<\n  TableBodyInternalProps,\n  'tbody'\n>;\n\nfunction _TableBody(\n  { className, children, testId = 'cf-ui-table-body', ...otherProps },\n  forwardedRef,\n) {\n  return (\n    <Box\n      {...otherProps}\n      as=\"tbody\"\n      className={className}\n      ref={forwardedRef}\n      testId={testId}\n    >\n      {children}\n    </Box>\n  );\n}\n\n_TableBody.displayName = 'TableBody';\n\nexport const TableBody = forwardRef<\n  HTMLTableSectionElement,\n  ExpandProps<TableBodyProps>\n>(_TableBody);\n","import { createContext } from 'react';\n\nexport type TableCellContextOption = {\n  name: 'body' | 'head';\n  as: 'td' | 'th';\n  offsetTop: number | string;\n};\n\nexport const contextOptions: {\n  body: TableCellContextOption;\n  head: TableCellContextOption;\n} = {\n  body: { name: 'body', as: 'td', offsetTop: 0 },\n  head: { name: 'head', as: 'th', offsetTop: 0 },\n};\n\nexport const TableCellContext = createContext(contextOptions.body);\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nimport { TableCellContext } from './tableCellContext';\n\nexport const sortingDirections = {\n  asc: 'asc',\n  desc: 'desc',\n};\n\nexport type TableCellSorting = keyof typeof sortingDirections | boolean;\n\nexport type TableCellInternalProps = CommonProps & {\n  align?: 'center' | 'left' | 'right';\n  sorting?: TableCellSorting;\n  width?: string | number;\n  children?: React.ReactNode;\n};\n\nexport type TableCellProps = PropsWithHTMLElement<\n  TableCellInternalProps,\n  'th' | 'td'\n>;\n\nexport const TableCell = forwardRef<\n  HTMLTableCellElement,\n  ExpandProps<TableCellProps>\n>(\n  (\n    {\n      align = 'left',\n      children,\n      className,\n      sorting = false as TableCellSorting,\n      testId = 'cf-ui-table-cell',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    return (\n      <TableCellContext.Consumer>\n        {({ as, name: context, offsetTop }) => {\n          const isTableHead = context === 'head';\n\n          return (\n            <Box\n              {...otherProps}\n              as={as}\n              className={cx(\n                css({\n                  backgroundColor: isTableHead ? tokens.gray100 : undefined,\n                  borderBottom: `1px solid ${tokens.gray200}`,\n                  color: sorting ? tokens.gray900 : tokens.gray700,\n                  fontFamily: tokens.fontStackPrimary,\n                  fontSize: tokens.fontSizeM,\n                  fontWeight: isTableHead\n                    ? tokens.fontWeightMedium\n                    : tokens.fontWeightNormal,\n                  lineHeight: tokens.lineHeightL,\n                  padding: `${tokens.spacingS} ${tokens.spacingM}`,\n                  textAlign: align,\n                  verticalAlign: 'top',\n                }),\n                className,\n              )}\n              ref={forwardedRef}\n              style={{\n                ...otherProps.style,\n                top: offsetTop || undefined,\n              }}\n              testId={testId}\n            >\n              {children}\n            </Box>\n          );\n        }}\n      </TableCellContext.Consumer>\n    );\n  },\n);\n\nTableCell.displayName = 'TableCell';\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport tokens from '@contentful/f36-tokens';\n\nimport { TableCellContext, contextOptions } from './';\n\nexport type TableHeadInternalProps = CommonProps & {\n  isSticky?: boolean;\n  offsetTop?: number | string;\n  children: React.ReactNode;\n};\n\nexport type TableHeadProps = PropsWithHTMLElement<\n  TableHeadInternalProps,\n  'thead'\n>;\n\nexport const TableHead = forwardRef<\n  HTMLTableSectionElement,\n  ExpandProps<TableHeadProps>\n>(\n  (\n    {\n      children,\n      className,\n      isSticky = false,\n      offsetTop,\n      testId = 'cf-ui-table-head',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const classNames = cx(\n      // For some reason Parcel doesn't build properly if we extract this to\n      // a variable ðŸ¤·\n      isSticky\n        ? css({\n            th: {\n              position: 'sticky',\n              top: 0,\n              zIndex: tokens.zIndexDefault,\n            },\n          })\n        : '',\n      className,\n    );\n\n    return (\n      <TableCellContext.Provider\n        value={{ ...contextOptions.head, offsetTop: offsetTop || 0 }}\n      >\n        <Box\n          {...otherProps}\n          as=\"thead\"\n          className={classNames}\n          ref={forwardedRef}\n          testId={testId}\n        >\n          {children}\n        </Box>\n      </TableCellContext.Provider>\n    );\n  },\n);\n\nTableHead.displayName = 'TableHead';\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nconst getStyles = () => {\n  return {\n    root: css({\n      '&:last-child td': {\n        borderBottom: 'none',\n      },\n      '&:hover td': {\n        backgroundColor: tokens.gray100,\n      },\n    }),\n    selected: css({\n      'td, th': {\n        backgroundColor: tokens.blue100,\n      },\n      'td:last-child': {\n        boxShadow: `inset -2px 0 0 ${tokens.blue500}`,\n      },\n    }),\n  };\n};\n\nexport type TableRowInternalProps = CommonProps & {\n  isSelected?: boolean;\n  children: React.ReactNode;\n};\n\nexport type TableRowProps = PropsWithHTMLElement<TableRowInternalProps, 'tr'>;\n\nexport const TableRow = forwardRef<\n  HTMLTableRowElement,\n  ExpandProps<TableRowProps>\n>(\n  (\n    {\n      className,\n      children,\n      isSelected = false,\n      testId = 'cf-ui-table-row',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const styles = getStyles();\n    return (\n      <Box\n        {...otherProps}\n        as=\"tr\"\n        className={cx(\n          styles.root,\n          {\n            [styles.selected]: isSelected,\n          },\n          className,\n        )}\n        ref={forwardedRef}\n        testId={testId}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n\nTableRow.displayName = 'TableRow';\n","import { Table as OriginalTable } from './Table';\nimport { TableBody } from './TableBody';\nimport { TableCell } from './TableCell';\nimport { TableHead } from './TableHead';\nimport { TableRow } from './TableRow';\n\ntype CompoundTable = typeof OriginalTable & {\n  Row: typeof TableRow;\n  Head: typeof TableHead;\n  Cell: typeof TableCell;\n  Body: typeof TableBody;\n};\n\nexport const Table = OriginalTable as CompoundTable;\nTable.Row = TableRow;\nTable.Head = TableHead;\nTable.Cell = TableCell;\nTable.Body = TableBody;\n"]},"metadata":{},"sourceType":"module"}