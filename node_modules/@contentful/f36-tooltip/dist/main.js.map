{"mappings":"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","sources":["packages/components/tooltip/src/index.ts","packages/components/tooltip/src/Tooltip.tsx","packages/components/tooltip/src/Tooltip.styles.ts"],"sourcesContent":["export { Tooltip } from './Tooltip';\nexport type { TooltipProps } from './Tooltip';\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  MouseEvent,\n  FocusEvent,\n  CSSProperties,\n} from 'react';\nimport { usePopper } from 'react-popper';\nimport type { Placement } from '@popperjs/core';\nimport { cx } from 'emotion';\nimport type * as CSS from 'csstype';\n\nimport { getStyles } from './Tooltip.styles';\n\nimport tokens from '@contentful/f36-tokens';\n\nimport { Portal } from '@contentful/f36-utils';\nimport type { CommonProps } from '@contentful/f36-core';\nimport { Box, useId } from '@contentful/f36-core';\n\nexport type TooltipPlacement = Placement;\n\nexport interface TooltipProps extends CommonProps {\n  /**\n   * Child nodes to be rendered in the component and that will show the tooltip when they are hovered\n   */\n  children: React.ReactNode;\n  /**\n   * HTML element used to wrap the target of the tooltip\n   */\n  as?: React.ElementType;\n  /**\n   * Content of the tooltip\n   */\n  content?: string;\n  /**\n   * A unique id of the tooltip\n   */\n  id?: string;\n  /**\n   * It controls the initial visibility of the tooltip\n   */\n  isVisible?: boolean;\n  /**\n   * It sets a max-width for the tooltip\n   */\n  maxWidth?: number | CSS.Property.MaxWidth;\n  /**\n   * It sets a delay period for the tooltip\n   */\n  hideDelay?: number;\n  /**\n   * Function that will be called when target gets blurred\n   */\n  onBlur?: (evt: FocusEvent) => void;\n  /**\n   * Function that will be called when target gets focused\n   */\n  onFocus?: (evt: FocusEvent) => void;\n  /**\n   * Function that will be called when the user move the mouse out of the target\n   */\n  onMouseLeave?: (evt: MouseEvent) => void;\n  /**\n   * Function that will be called when the user move the mouse over of the target\n   */\n  onMouseOver?: (evt: MouseEvent) => void;\n  /**\n   * Function that will be called when the user uses a keyboard key on the target\n   */\n  onKeyDown?: (evt: KeyboardEvent) => void;\n\n  /**\n   * It sets the \"preferred\" position of the tooltip\n   */\n  placement?: TooltipPlacement;\n  /**\n   * Class names to be appended to the className prop of the tooltipâ€™s target\n   */\n  targetWrapperClassName?: string;\n  /**\n   * Boolean to control whether or not to render the tooltip in a React Portal.\n   * Rendering content inside a Portal allows the tooltip to escape the bounds\n   * of its parent while still being positioned correctly. Using a Portal is\n   * necessary if an ancestor of the tooltip hides overflow.\n   *\n   * Defaults to `false`\n   */\n  usePortal?: boolean;\n  /**\n   * Prevents showing the tooltip\n   * @default false\n   */\n  isDisabled?: boolean;\n}\n\nexport const Tooltip = ({\n  children,\n  className,\n  as: HtmlTag = 'span',\n  content,\n  id,\n  isVisible,\n  hideDelay = 0,\n  onBlur,\n  onFocus,\n  onMouseLeave,\n  onMouseOver,\n  onKeyDown,\n  targetWrapperClassName,\n  maxWidth = 360,\n  testId = 'cf-ui-tooltip',\n  placement = 'auto',\n  usePortal = false,\n  isDisabled = false,\n  ...otherProps\n}: TooltipProps) => {\n  const styles = getStyles();\n  const [show, setShow] = useState(false);\n  const tooltipId = useId(id, 'tooltip');\n  const elementRef = useRef(null);\n  const popperRef = useRef(null);\n  const [arrowRef, setArrowRef] = useState<HTMLSpanElement | null>(null);\n  const { styles: popperStyles, attributes, forceUpdate } = usePopper(\n    elementRef.current,\n    popperRef.current,\n    {\n      placement: placement,\n      modifiers: [\n        {\n          name: 'arrow',\n          options: {\n            element: arrowRef,\n            padding: parseFloat(tokens.borderRadiusSmall),\n          },\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 10],\n          },\n        },\n      ],\n    },\n  );\n\n  // necessary to update tooltip position in case the content is being updated\n  useEffect(() => {\n    if (forceUpdate !== null) {\n      forceUpdate();\n    }\n  }, [content, forceUpdate]);\n\n  const [isHoveringTarget, setIsHoveringTarget] = useState(false);\n  const [isHoveringContent, setIsHoveringContent] = useState(false);\n  useEffect(() => {\n    setShow(isHoveringContent || isHoveringTarget);\n  }, [isHoveringTarget, isHoveringContent]);\n\n  useEffect(() => {\n    if (isVisible) setShow(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const contentMaxWidth =\n    typeof maxWidth === 'string' ? maxWidth : `${maxWidth}px`;\n\n  const contentStyles: CSSProperties = {\n    zIndex: tokens.zIndexTooltip,\n    maxWidth: contentMaxWidth,\n    ...popperStyles.popper,\n  };\n\n  if (!content || isDisabled) {\n    return (\n      <Box as={HtmlTag} className={targetWrapperClassName}>\n        {children}\n      </Box>\n    );\n  }\n\n  const tooltip = (\n    <Box\n      as=\"span\"\n      id={tooltipId}\n      ref={popperRef}\n      role=\"tooltip\"\n      style={contentStyles}\n      className={cx(styles.tooltip, className)}\n      testId={testId}\n      onMouseEnter={() => {\n        setIsHoveringContent(true);\n      }}\n      onMouseLeave={() => {\n        setIsHoveringContent(false);\n      }}\n      {...attributes.popper}\n    >\n      <span>{content}</span>\n      <span\n        className={styles.tooltipArrow}\n        data-placement={\n          attributes.popper && attributes.popper['data-popper-placement']\n        }\n        ref={setArrowRef}\n        style={popperStyles.arrow}\n      />\n    </Box>\n  );\n\n  return (\n    <>\n      {show ? <>{usePortal ? <Portal>{tooltip}</Portal> : tooltip}</> : null}\n      <Box\n        as={HtmlTag}\n        ref={elementRef}\n        className={cx(styles.tooltipContainer, targetWrapperClassName)}\n        onMouseEnter={(evt: MouseEvent) => {\n          setIsHoveringTarget(true);\n          if (onMouseOver) onMouseOver(evt);\n        }}\n        onMouseLeave={(evt: MouseEvent) => {\n          setTimeout(() => setIsHoveringTarget(false), hideDelay);\n          if (onMouseLeave) onMouseLeave(evt);\n        }}\n        onFocus={(evt: FocusEvent) => {\n          setIsHoveringTarget(true);\n          if (onFocus) onFocus(evt);\n        }}\n        onBlur={(evt: FocusEvent) => {\n          setTimeout(() => setIsHoveringTarget(false), hideDelay);\n          if (onBlur) onBlur(evt);\n        }}\n        onKeyDown={(evt: KeyboardEvent) => {\n          if (evt.key === 'Escape') {\n            setTimeout(() => setIsHoveringTarget(false), hideDelay);\n          }\n          if (onKeyDown) onKeyDown(evt);\n        }}\n        {...otherProps}\n      >\n        {React.Children.map<React.ReactNode, React.ReactNode>(\n          children,\n          (child) => {\n            if (React.isValidElement(child)) {\n              return React.cloneElement(child, {\n                'aria-describedby': tooltipId,\n              });\n            }\n          },\n        )}\n      </Box>\n    </>\n  );\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nconst tooltipMargin = `calc(-1 * ((1rem * (10 / ${tokens.fontBaseDefault})) / 2))`;\nconst tooltipChevronSize = `calc(1rem * (10 / ${tokens.fontBaseDefault}))`;\n\nexport function getStyles() {\n  return {\n    tooltipTargetWrapper: css({\n      display: 'inline-block',\n      position: 'relative',\n    }),\n    tooltip: css({\n      background: tokens.gray900,\n      fontFamily: tokens.fontStackPrimary,\n      fontSize: tokens.fontSizeS,\n      fontWeight: tokens.fontWeightNormal,\n      fontStyle: 'normal',\n      textDecoration: 'none',\n      color: tokens.colorWhite,\n      textAlign: 'center',\n      lineHeight: tokens.lineHeightM,\n      padding: `${tokens.spacingXs} calc(1rem * (10 / ${tokens.fontBaseDefault}))`,\n      borderRadius: tokens.borderRadiusMedium,\n      whiteSpace: 'normal',\n    }),\n    tooltipHidden: css({\n      visibility: 'hidden',\n      pointerEvents: 'none',\n      zIndex: tokens.zIndexNegative,\n    }),\n    tooltipContainer: css({\n      '& > button[disabled]': { pointerEvents: 'none' },\n    }),\n    tooltipArrow: css({\n      position: 'absolute',\n      '&[data-placement*=\"top\"]': {\n        bottom: 0,\n        left: 0,\n        marginBottom: tooltipMargin,\n      },\n      '&[data-placement*=\"right\"]': {\n        left: 0,\n        marginLeft: tooltipMargin,\n      },\n      '&[data-placement*=\"bottom\"]': {\n        left: 0,\n        top: 0,\n        marginTop: tooltipMargin,\n      },\n      '&[data-placement*=\"left\"]': {\n        right: 0,\n        marginRight: tooltipMargin,\n      },\n      '&::before': {\n        content: '\"\"',\n        display: 'block',\n        height: tooltipChevronSize,\n        width: tooltipChevronSize,\n        backgroundColor: tokens.gray900,\n        transform: 'rotate3d(0, 0, 1, 45deg)',\n        zIndex: tokens.zIndexNegative,\n      },\n    }),\n  };\n}\n"],"names":["Tooltip","TooltipProps","React","useEffect","useState","useRef","MouseEvent","FocusEvent","CSSProperties","usePopper","Placement","CSS","getStyles","tokens","Portal","CommonProps","Box","useId","TooltipPlacement","children","ReactNode","as","ElementType","content","id","isVisible","maxWidth","Property","MaxWidth","hideDelay","onBlur","evt","onFocus","onMouseLeave","onMouseOver","onKeyDown","KeyboardEvent","placement","targetWrapperClassName","usePortal","isDisabled","className","HtmlTag","testId","otherProps","styles","show","setShow","tooltipId","elementRef","popperRef","arrowRef","setArrowRef","HTMLSpanElement","popperStyles","attributes","forceUpdate","current","modifiers","name","options","element","padding","parseFloat","borderRadiusSmall","offset","isHoveringTarget","setIsHoveringTarget","isHoveringContent","setIsHoveringContent","contentMaxWidth","contentStyles","zIndex","zIndexTooltip","popper","tooltip","tooltipArrow","arrow","tooltipContainer","setTimeout","key","Children","map","child","isValidElement","cloneElement","tooltipMargin","fontBaseDefault","tooltipChevronSize","tooltipTargetWrapper","background","gray900","fontFamily","fontStackPrimary","fontSize","fontSizeS","fontWeight","fontWeightNormal","fontStyle","textDecoration","color","colorWhite","textAlign","lineHeight","lineHeightM","spacingXs","borderRadius","borderRadiusMedium","whiteSpace","tooltipHidden","visibility","pointerEvents","zIndexNegative","position","bottom","left","marginBottom","marginLeft","top","marginTop","right","marginRight","display","height","width","backgroundColor","transform"],"version":3,"file":"main.js.map"}